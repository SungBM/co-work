<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_4WWzYKw7Ee2NaYmjDxeNPA" name="Co_Work_Semi">
    <eAnnotations xmi:id="_6Mo_kKw7Ee2NaYmjDxeNPA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_6MpmoKw7Ee2NaYmjDxeNPA" source="codegen">
        <details xmi:id="_6Mpmoaw7Ee2NaYmjDxeNPA" key="codegenDirectory" value="/Co_Work_Semi/src/main/java"/>
        <details xmi:id="__NmYAKw7Ee2NaYmjDxeNPA" key="AssociatedSourceCode" value="/Co_Work_Semi/src/main/java/net/admin/action/Action.java;2333134237/1;/Co_Work_Semi/src/main/java/net/admin/action/ActionForward.java;1484553382/1;/Co_Work_Semi/src/main/java/net/admin/action/AdminFrontController.java;64072822/1;/Co_Work_Semi/src/main/java/net/admin/action/AdminLoginAction.java;3874246889/1;/Co_Work_Semi/src/main/java/net/admin/action/AdminRightProcess.java;3999706896/1;/Co_Work_Semi/src/main/java/net/admin/action/CompanyImgupdateProcess.java;608024291/1;/Co_Work_Semi/src/main/java/net/admin/action/CompanyInfoAction.java;923154334/1;/Co_Work_Semi/src/main/java/net/admin/action/CompanyupdateProcess.java;46334523/1;/Co_Work_Semi/src/main/java/net/admin/action/DeptJobCreateProcess.java;1495016489/1;/Co_Work_Semi/src/main/java/net/admin/action/DeptJobUpdateProcess.java;2922336792/1;/Co_Work_Semi/src/main/java/net/admin/action/MembersInfoAction.java;3806442781/1;/Co_Work_Semi/src/main/java/net/admin/action/memberstatusProcess.java;956033063/1;/Co_Work_Semi/src/main/java/net/admin/db/Company.java;1439818428/1;/Co_Work_Semi/src/main/java/net/project/action/ProjectAddProcessAction.java;3761917867/1;/Co_Work_Semi/src/main/java/net/board/notice/action/Action.java;561089082/1;/Co_Work_Semi/src/main/java/net/board/notice/action/ActionForward.java;4213129167/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeAddAction.java;2984818907/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeDeleteAction.java;2728492590/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeDetailAction.java;2454404216/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeFileDownAction.java;4228067226/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeFrontController.java;1444373881/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeListAction.java;976004266/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeModifyAction.java;3773035184/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeModifyView.java;2384939343/1;/Co_Work_Semi/src/main/java/net/board/notice/action/NoticeWriteAction.java;2505276264/1;/Co_Work_Semi/src/main/java/net/project/action/ProjectAddAction.java;4268209974/1;/Co_Work_Semi/src/main/java/net/project/action/ActionForward.java;2168622380/1;/Co_Work_Semi/src/main/java/net/member/action/Action.java;1098843172/1;/Co_Work_Semi/src/main/java/net/member/action/ActionForward.java;201848076/1;/Co_Work_Semi/src/main/java/net/member/action/MailSender.java;1538614332/1;/Co_Work_Semi/src/main/java/net/member/action/MainAction.java;3539273402/1;/Co_Work_Semi/src/main/java/net/member/action/MemberFrontController.java;844299587/1;/Co_Work_Semi/src/main/java/net/member/action/MemberIdCheckAction.java;3304926399/1;/Co_Work_Semi/src/main/java/net/member/action/MemberInfoAction.java;3951788206/1;/Co_Work_Semi/src/main/java/net/member/action/MemberJoinAction.java;2485283034/1;/Co_Work_Semi/src/main/java/net/member/action/MemberJoinProcessAction.java;1210911164/1;/Co_Work_Semi/src/main/java/net/member/action/MemberLoginAction.java;1377768140/1;/Co_Work_Semi/src/main/java/net/member/action/MemberLoginProcessAction.java;2450604943/1;/Co_Work_Semi/src/main/java/net/member/action/MemberLogoutAction.java;1015439395/1;/Co_Work_Semi/src/main/java/net/member/action/Myinfo.java;3932303697/1;/Co_Work_Semi/src/main/java/net/member/action/Send.java;3299952905/1;/Co_Work_Semi/src/main/java/net/member/action/SendAction.java;2013456499/1;/Co_Work_Semi/src/main/java/net/mypage/db/Dept.java;3485675043/1;/Co_Work_Semi/src/main/java/net/mypage/action/PasswordChangeProcess.java;4009334942/1;/Co_Work_Semi/src/main/java/net/mypage/action/PasswordChangeAction.java;3260057993/1;/Co_Work_Semi/src/main/java/net/mypage/action/Action.java;421612243/1;/Co_Work_Semi/src/main/java/net/mypage/action/ActionForward.java;3415058649/1;/Co_Work_Semi/src/main/java/net/mypage/action/ImgupdateProcess.java;3059514303/1;/Co_Work_Semi/src/main/java/net/mypage/action/MypageAction.java;4231797014/1;/Co_Work_Semi/src/main/java/net/mypage/action/MypageCheckAction.java;1624822120/1;/Co_Work_Semi/src/main/java/net/mypage/action/MypageDAO.java;346392105/1;/Co_Work_Semi/src/main/java/net/mypage/action/MypageFrontController.java;2734497869/1;/Co_Work_Semi/src/main/java/net/mypage/action/MypageUpdateProcessAction.java;1065359151/1;/Co_Work_Semi/src/main/java/net/mypage/action/NotifyAction.java;3494787284/1;/Co_Work_Semi/src/main/java/net/member/db/UserInfo.java;1492317136/1;/Co_Work_Semi/src/main/java/net/member/db/UserDAO.java;2221415681/1;/Co_Work_Semi/src/main/java/net/member/db/MainBean.java;2361373446/1;/Co_Work_Semi/src/main/java/net/mypage/db/Job.java;56670633/1;/Co_Work_Semi/src/main/java/net/mypage/db/Member.java;3102767969/1;/Co_Work_Semi/src/main/java/net/mypage/db/MypageDAO.java;690061530/1;/Co_Work_Semi/src/main/java/net/project/action/Action.java;1586310059/1;/Co_Work_Semi/src/main/java/net/board/notice/db/NoticeDAO.java;2084014138/1;/Co_Work_Semi/src/main/java/net/board/notice/db/NoticeBean.java;1042065371/1;/Co_Work_Semi/src/main/java/net/admin/db/CompanyDAO.java;2826659674/1;/Co_Work_Semi/src/main/java/net/project/action/ProjectFrontController.java;3764524909/1;/Co_Work_Semi/src/main/java/net/project/action/ProjectListAction.java;1264860368/1;/Co_Work_Semi/src/main/java/net/project/action/getTeamModalAction.java;1169186105/1;/Co_Work_Semi/src/main/java/net/project/db/Project.java;2599039117/1;/Co_Work_Semi/src/main/java/net/project/db/ProjectDAO.java;3043819671/1;/Co_Work_Semi/src/main/java/net/project/db/Project_User.java;2869546775/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_6mlJkKw7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_6mlJkaw7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_6mlJkqw7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_6mlJk6w7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_6mlwoKw7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_6mlwoaw7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_6mlwoqw7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_6mlwo6w7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_6mmXsKw7Ee2NaYmjDxeNPA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_6jVoUKw7Ee2NaYmjDxeNPA" name="net">
      <packagedElement xmi:type="uml:Package" xmi:id="_6jWPYKw7Ee2NaYmjDxeNPA" name="admin">
        <packagedElement xmi:type="uml:Package" xmi:id="_6jcWAKw7Ee2NaYmjDxeNPA" name="action">
          <packagedElement xmi:type="uml:Interface" xmi:id="_6mfqAKw7Ee2NaYmjDxeNPA" name="Action">
            <ownedOperation xmi:id="_66EtUKw7Ee2NaYmjDxeNPA" name="execute" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66EtUaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66EtUqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66EtU6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6mpbAKw7Ee2NaYmjDxeNPA" name="ActionForward">
            <ownedAttribute xmi:id="_67VRkKw7Ee2NaYmjDxeNPA" name="redirect">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67WfsKw7Ee2NaYmjDxeNPA" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67Wfsaw7Ee2NaYmjDxeNPA" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67Wfsqw7Ee2NaYmjDxeNPA" value="null"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_6mqpIKw7Ee2NaYmjDxeNPA" name="ActionForward">
              <eAnnotations xmi:id="_6mrQMKw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6mrQMaw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6mtscKw7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6mu6kKw7Ee2NaYmjDxeNPA" name="AdminFrontController">
            <generalization xmi:id="_6m1oQKw7Ee2NaYmjDxeNPA" general="_6mwvwKw7Ee2NaYmjDxeNPA"/>
            <ownedAttribute xmi:id="_67XGwKw7Ee2NaYmjDxeNPA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67Xt0Kw7Ee2NaYmjDxeNPA" value="1L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68KYAKw7Ee2NaYmjDxeNPA" name="doProcess" specification="_66GigKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68KYAaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68KYAqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>/*&#xD;
		 * 요청된 전체 URL중에서 포트 번호 다음 부터 마지막 문자열까지 반환됩니다. 예) contextPath가 &quot;/JspProject&quot;인 경우&#xD;
		 * http://localhost:8088/JspProject/login.net로 요청하면 getRequestURI()는&#xD;
		 * &quot;/JspProject/login.net&quot; 반환됩니다.&#xD;
		 */&#xD;
		String RequestURI = request.getRequestURI();&#xD;
		System.out.println(&quot;RequestURI = &quot; + RequestURI);&#xD;
&#xD;
		// getContextPath() : 컨텍스트 경로가 반환됩니다.&#xD;
		// contextPath는 &quot;/JspProject&quot;가 반환됩니다.&#xD;
		String contextPath = request.getContextPath();&#xD;
		System.out.println(&quot;contextPath = &quot; + contextPath);&#xD;
&#xD;
		// RequestURI에서 컨텍스트 경로 길이 값의 인덱스 위치의 문자부터 마지막 위치 문자까지 추출합니다.&#xD;
		// command는 &quot;/login.net&quot; 반환됩니다.&#xD;
		String command = RequestURI.substring(contextPath.length());&#xD;
		System.out.println(&quot;command = &quot; + command);&#xD;
&#xD;
		// 초기화&#xD;
		ActionForward forward = null;&#xD;
		Action action = null;&#xD;
&#xD;
		switch (command) {&#xD;
		case &quot;/companyinfo.com&quot;:&#xD;
			action = new CompanyInfoAction();&#xD;
			break;&#xD;
		case &quot;/companyupdateProcess.com&quot;:&#xD;
			action = new CompanyupdateProcess();&#xD;
			break;&#xD;
		case &quot;/membersInfo.com&quot;:&#xD;
			action = new MembersInfoAction();&#xD;
			break;&#xD;
		case &quot;/deptJobUpdateProcess.com&quot;:&#xD;
			action = new DeptJobUpdateProcess();&#xD;
			break;&#xD;
		case &quot;/DeptJobCreateProcess.com&quot;:&#xD;
			action = new DeptJobCreateProcess();&#xD;
			break;&#xD;
		case &quot;/memberstatus.com&quot;:&#xD;
			action = new memberstatusProcess();&#xD;
			break;&#xD;
		case &quot;/adminright.com&quot;:&#xD;
			action = new AdminRightProcess();&#xD;
			break;&#xD;
		case &quot;/companyimgupdateprocess.com&quot;:&#xD;
			action = new CompanyImgupdateProcess();&#xD;
			break;&#xD;
&#xD;
		} // switch end&#xD;
		forward = action.execute(request, response);&#xD;
&#xD;
		if (forward != null) {&#xD;
			if (forward.isRedirect()) {&#xD;
				response.sendRedirect(forward.getPath());&#xD;
			} else {&#xD;
				RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getPath());&#xD;
				dispatcher.forward(request, response);&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68QeoKw7Ee2NaYmjDxeNPA" name="doGet" specification="_66HJkKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Qeoaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Qeoqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>doProcess(request, response);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68Qeo6w7Ee2NaYmjDxeNPA" name="doPost" specification="_66HwoKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68QepKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Qepaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>request.setCharacterEncoding(&quot;utf-8&quot;);&#xD;
		doProcess(request, response);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66GigKw7Ee2NaYmjDxeNPA" name="doProcess" visibility="protected" method="_68KYAKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66Gigaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66Gigqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_66HJkKw7Ee2NaYmjDxeNPA" name="doGet" visibility="protected" method="_68QeoKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66HJkaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66HJkqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_66HwoKw7Ee2NaYmjDxeNPA" name="doPost" visibility="protected" method="_68Qeo6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66Hwoaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66Hwoqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6m6gwKw7Ee2NaYmjDxeNPA" name="AdminLoginAction">
            <interfaceRealization xmi:id="_64Vn8Kw7Ee2NaYmjDxeNPA" client="_6m6gwKw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68RFsKw7Ee2NaYmjDxeNPA" name="execute" specification="_66IXsKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68RFsaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68RFsqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68RFs6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		forward.setRedirect(false);&#xD;
		forward.setPath(&quot;pages-404.html&quot;);&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66IXsKw7Ee2NaYmjDxeNPA" name="execute" method="_68RFsKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66IXsaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66IXsqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66IXs6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6m-LIKw7Ee2NaYmjDxeNPA" name="AdminRightProcess">
            <interfaceRealization xmi:id="_64Z5YKw7Ee2NaYmjDxeNPA" client="_6m-LIKw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68RFtKw7Ee2NaYmjDxeNPA" name="execute" specification="_66Jl0qw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68RFtaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68RFtqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68RFt6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
   MypageDAO mydao = new MypageDAO();&#xD;
   String user_id = request.getParameter(&quot;user_id&quot;);&#xD;
   String state = request.getParameter(&quot;user_is_admin&quot;);&#xD;
   mydao.admin_status(user_id, state);&#xD;
&#xD;
   List&lt;UserInfo> list = null;&#xD;
   List&lt;UserInfo> normal = null;&#xD;
   List&lt;UserInfo> wait = null;&#xD;
   List&lt;UserInfo> stop = null;&#xD;
   list = mydao.all_member_info();&#xD;
   normal = mydao.normal_info();&#xD;
   wait = mydao.wait_info();&#xD;
   stop = mydao.stop_info();&#xD;
&#xD;
   request.setAttribute(&quot;list&quot;, list);&#xD;
   request.setAttribute(&quot;normal&quot;, normal);&#xD;
   request.setAttribute(&quot;wait&quot;, wait);&#xD;
   request.setAttribute(&quot;stop&quot;, stop);&#xD;
   forward.setRedirect(false);&#xD;
   forward.setPath(&quot;admin/members/membersinfo.jsp&quot;);&#xD;
   return forward;&#xD;
&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66Jl0qw7Ee2NaYmjDxeNPA" name="execute" method="_68RFtKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66Jl06w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66KM4Kw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66KM4aw7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nBOcKw7Ee2NaYmjDxeNPA" name="CompanyImgupdateProcess">
            <interfaceRealization xmi:id="_64ex4aw7Ee2NaYmjDxeNPA" client="_6nBOcKw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68RswKw7Ee2NaYmjDxeNPA" name="execute" specification="_66Kz8Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Rswaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Rswqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Rsw6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		HttpSession session = request.getSession();&#xD;
		String user_id = (String) session.getAttribute(&quot;id&quot;);&#xD;
		&#xD;
		String realFolder = &quot;&quot;;&#xD;
		// webapp아래에 꼭 폴더 생성하세요&#xD;
		String saveFolder = &quot;image&quot;;&#xD;
		int fileSize = 5 * 1024 * 1024;&#xD;
		// 실제 저장 경로 지정&#xD;
		ServletContext sc = request.getServletContext();&#xD;
		realFolder = sc.getRealPath(saveFolder);&#xD;
		System.out.println(&quot;realFolder = [&quot; + realFolder + &quot;]&quot;);&#xD;
		try {&#xD;
			MultipartRequest multi = new MultipartRequest(request, realFolder, fileSize, &quot;utf-8&quot;,&#xD;
					new DefaultFileRenamePolicy());&#xD;
			String value = multi.getParameter(&quot;value&quot;);&#xD;
			String change = multi.getFilesystemName(value);&#xD;
			String company_name = multi.getParameter(&quot;company_name&quot;);&#xD;
			System.out.println(value);&#xD;
			System.out.println(change);&#xD;
			// 이미지 교체 진행&#xD;
			CompanyDAO cdao = new CompanyDAO();&#xD;
&#xD;
			int result = cdao.update(value, change, company_name);&#xD;
&#xD;
			response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
			PrintWriter out = response.getWriter();&#xD;
&#xD;
			if (result != 0) {&#xD;
				CompanyDAO mydao = new CompanyDAO();&#xD;
				MypageDAO mdao = new MypageDAO();&#xD;
				Company m = mydao.company_info(user_id);&#xD;
				List&lt;Dept> d = mdao.dept(m.getCompany_name());&#xD;
				List&lt;Job> j = mdao.job(m.getCompany_name());&#xD;
&#xD;
				request.setAttribute(&quot;memberinfo&quot;, m);&#xD;
				request.setAttribute(&quot;dept&quot;, d);&#xD;
				request.setAttribute(&quot;job&quot;, j);&#xD;
				forward.setRedirect(false);&#xD;
				forward.setPath(&quot;admin/company/companyinfo.jsp&quot;);&#xD;
				request.setAttribute(&quot;companyinfo&quot;, m);&#xD;
				request.setAttribute(&quot;dept&quot;, d);&#xD;
				request.setAttribute(&quot;job&quot;, j);&#xD;
				return forward;&#xD;
			} else {&#xD;
				out.println(&quot;&lt;script>&quot;);&#xD;
				out.println(&quot;alert('정보 수정에 실패했습니다.');&quot;);&#xD;
				out.println(&quot;history.back()&quot;);&#xD;
				out.println(&quot;&lt;/script>&quot;);&#xD;
				out.close();&#xD;
			}&#xD;
			return null;&#xD;
		} catch (IOException ex) {&#xD;
			ex.printStackTrace();&#xD;
			forward = new ActionForward();&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			request.setAttribute(&quot;message&quot;, &quot;프로필 사진 업로드 실패입니다.&quot;);&#xD;
			forward.setRedirect(false);&#xD;
			return forward;&#xD;
		} // catch end&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68RsxKw7Ee2NaYmjDxeNPA" name="dc" specification="_6nDDoKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Rsxaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68Rsxqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String v1 = &quot;&quot;;&#xD;
		switch (value) {&#xD;
		case &quot;user_name&quot;:&#xD;
			v1 = &quot;이름&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_dept&quot;:&#xD;
			v1 = &quot;부서&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_job&quot;:&#xD;
			v1 = &quot;직함&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_email&quot;:&#xD;
			v1 = &quot;이메일 주소&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_fax&quot;:&#xD;
			v1 = &quot;팩스&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_phone&quot;:&#xD;
			v1 = &quot;연락처&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_intro&quot;:&#xD;
			v1 = &quot;자기소개&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_img&quot;:&#xD;
			v1 = &quot;프로필 사진&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_card&quot;:&#xD;
			v1 = &quot;명함&quot;;&#xD;
			return v1;&#xD;
		}&#xD;
		return v1;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6nDDoKw7Ee2NaYmjDxeNPA" name="dc" method="_68RsxKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6nDDoaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6nDqsKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_66Kz8Kw7Ee2NaYmjDxeNPA" name="execute" method="_68RswKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66Kz8aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66Kz8qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66LbAKw7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nGG8Kw7Ee2NaYmjDxeNPA" name="CompanyInfoAction">
            <interfaceRealization xmi:id="_64gAAKw7Ee2NaYmjDxeNPA" client="_6nGG8Kw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68Rsx6w7Ee2NaYmjDxeNPA" name="execute" specification="_66MCEqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68RsyKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Rsyaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Rsyqw7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>HttpSession session = request.getSession();&#xD;
		String user_id = (String) session.getAttribute(&quot;id&quot;);&#xD;
&#xD;
		CompanyDAO mydao = new CompanyDAO();&#xD;
		MypageDAO mdao = new MypageDAO();&#xD;
		Company m = mydao.company_info(user_id);&#xD;
		List&lt;Dept> d = mdao.dept(m.getCompany_name());&#xD;
		List&lt;Job> j = mdao.job(m.getCompany_name());&#xD;
&#xD;
		request.setAttribute(&quot;memberinfo&quot;, m);&#xD;
		request.setAttribute(&quot;dept&quot;, d);&#xD;
		request.setAttribute(&quot;job&quot;, j);&#xD;
		ActionForward forward = new ActionForward();&#xD;
		forward.setRedirect(false);&#xD;
		forward.setPath(&quot;admin/company/companyinfo.jsp&quot;);&#xD;
		request.setAttribute(&quot;companyinfo&quot;, m);&#xD;
		request.setAttribute(&quot;dept&quot;, d);&#xD;
		request.setAttribute(&quot;job&quot;, j);&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66MCEqw7Ee2NaYmjDxeNPA" name="execute" method="_68Rsx6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66NQMKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66NQMaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66NQMqw7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nH8IKw7Ee2NaYmjDxeNPA" name="CompanyupdateProcess">
            <interfaceRealization xmi:id="_64hOIKw7Ee2NaYmjDxeNPA" client="_6nH8IKw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ST0Kw7Ee2NaYmjDxeNPA" name="execute" specification="_66OeUKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68ST0aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ST0qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ST06w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>HttpSession session = request.getSession();&#xD;
		ActionForward forward = new ActionForward();&#xD;
&#xD;
		String value = request.getParameter(&quot;value&quot;);&#xD;
		String change = request.getParameter(value);&#xD;
		String def = request.getParameter(&quot;def&quot;);&#xD;
		String id = (String) session.getAttribute(&quot;id&quot;);&#xD;
&#xD;
		if (value.equals(&quot;company_logo&quot;)) {&#xD;
			String realFolder = &quot;&quot;;&#xD;
			// webapp아래에 꼭 폴더 생성하세요&#xD;
			String saveFolder = &quot;image&quot;;&#xD;
			int fileSize = 5 * 1024 * 1024;&#xD;
			// 실제 저장 경로 지정&#xD;
			ServletContext sc = request.getServletContext();&#xD;
			realFolder = sc.getRealPath(saveFolder);&#xD;
			System.out.println(&quot;realFolder = [&quot; + realFolder);&#xD;
&#xD;
			try {&#xD;
				MultipartRequest multi = new MultipartRequest(request, realFolder, fileSize, &quot;utf-8&quot;,&#xD;
						new DefaultFileRenamePolicy());&#xD;
&#xD;
				value = multi.getParameter(&quot;value&quot;);&#xD;
				change = multi.getParameter(value);&#xD;
				id = (String) session.getAttribute(&quot;id&quot;);&#xD;
&#xD;
				// 수정 버튼 클릭 할 때 진행.&#xD;
				CompanyDAO cdao = new CompanyDAO();&#xD;
				cdao.update(value, change, id, def);&#xD;
&#xD;
			} catch (IOException ex) {&#xD;
				ex.printStackTrace();&#xD;
				forward = new ActionForward();&#xD;
				forward.setPath(&quot;error/error.jsp&quot;);&#xD;
				request.setAttribute(&quot;message&quot;, &quot;프로필 사진 업로드 실패입니다.&quot;);&#xD;
				forward.setRedirect(false);&#xD;
				return forward;&#xD;
			} // catch end&#xD;
		} else {&#xD;
			CompanyDAO cdao = new CompanyDAO();&#xD;
			cdao.update(value, change, id, def);&#xD;
		}&#xD;
		forward.setRedirect(true);&#xD;
		forward.setPath(&quot;companyinfo.com&quot;);&#xD;
		return forward;&#xD;
		// 삽입이 된 경우&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ST1Kw7Ee2NaYmjDxeNPA" name="dc" specification="_6nJxUKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68ST1aw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68ST1qw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String v1 = &quot;&quot;;&#xD;
		switch (value) {&#xD;
		case &quot;company_name&quot;:&#xD;
			v1 = &quot;회사명&quot;;&#xD;
			break;&#xD;
		case &quot;company_url&quot;:&#xD;
			v1 = &quot;회사 전용 URL&quot;;&#xD;
			break;&#xD;
		case &quot;company_logo&quot;:&#xD;
			v1 = &quot;로고&quot;;&#xD;
			break;&#xD;
		}&#xD;
		return v1;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6nJxUKw7Ee2NaYmjDxeNPA" name="dc" method="_68ST1Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6nJxUaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6nJxUqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_66OeUKw7Ee2NaYmjDxeNPA" name="execute" method="_68ST0Kw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66OeUaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66OeUqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66OeU6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nMNkKw7Ee2NaYmjDxeNPA" name="DeptJobCreateProcess">
            <interfaceRealization xmi:id="_64jDUKw7Ee2NaYmjDxeNPA" client="_6nMNkKw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68S64Kw7Ee2NaYmjDxeNPA" name="execute" specification="_66PscKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68S64aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68S64qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68S646w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>HttpSession session = request.getSession();&#xD;
		String user_id = (String) session.getAttribute(&quot;id&quot;);&#xD;
&#xD;
		String company_name = request.getParameter(&quot;company_name&quot;);&#xD;
		String value = request.getParameter(&quot;value&quot;);&#xD;
		String change = request.getParameter(value);&#xD;
&#xD;
		System.out.println(change);&#xD;
&#xD;
		CompanyDAO dao = new CompanyDAO();&#xD;
		int result = -1;&#xD;
&#xD;
		if (value.equals(&quot;dept_name&quot;)) {&#xD;
			result = dao.dept_create(value, change, company_name);&#xD;
&#xD;
		} else if (value.equals(&quot;job_name&quot;)) {&#xD;
			result = dao.job_create(value, change, company_name);&#xD;
		}&#xD;
&#xD;
		response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
		PrintWriter out = response.getWriter();&#xD;
		if (result == 0) {&#xD;
			out.println(&quot;&lt;script>&quot;);&#xD;
			out.println(&quot;alert('중복 되었습니다.');&quot;);&#xD;
			out.println(&quot;history.back()&quot;);&#xD;
			out.println(&quot;&lt;/script>&quot;);&#xD;
			return null;&#xD;
		}&#xD;
&#xD;
		CompanyDAO mydao = new CompanyDAO();&#xD;
		MypageDAO mdao = new MypageDAO();&#xD;
&#xD;
		Company m = mydao.company_info(user_id);&#xD;
		List&lt;Dept> d = mdao.dept(m.getCompany_name());&#xD;
		List&lt;Job> j = mdao.job(m.getCompany_name());&#xD;
&#xD;
		ActionForward forward = new ActionForward();&#xD;
		forward.setRedirect(true);&#xD;
		request.setAttribute(&quot;companyinfo&quot;, m);&#xD;
		request.setAttribute(&quot;dept&quot;, d);&#xD;
		request.setAttribute(&quot;job&quot;, j);&#xD;
		forward.setPath(&quot;companyinfo.com&quot;);&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66PscKw7Ee2NaYmjDxeNPA" name="execute" method="_68S64Kw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66Pscaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66Pscqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66Psc6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nOp0Kw7Ee2NaYmjDxeNPA" name="DeptJobUpdateProcess">
            <interfaceRealization xmi:id="_64kRcKw7Ee2NaYmjDxeNPA" client="_6nOp0Kw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68S65Kw7Ee2NaYmjDxeNPA" name="execute" specification="_66Q6kKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68S65aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68S65qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68S656w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
		ActionForward forward = new ActionForward();&#xD;
		String value = request.getParameter(&quot;value&quot;);&#xD;
		String change = request.getParameter(value);&#xD;
		String def = request.getParameter(&quot;def&quot;);&#xD;
&#xD;
		CompanyDAO mydao = new CompanyDAO();&#xD;
		MypageDAO mdao = new MypageDAO();&#xD;
&#xD;
		HttpSession session = request.getSession();&#xD;
		String user_id = (String) session.getAttribute(&quot;id&quot;);&#xD;
		Company m = mydao.company_info(user_id);&#xD;
&#xD;
		if (request.getParameter(&quot;sub&quot;) != null) {	// 수정&#xD;
			mydao.dept_update(value, change, m.getCompany_name(), def);&#xD;
		} else if (request.getParameter(&quot;del&quot;) != null) {	// 삭제&#xD;
			mydao.dept_delete(value, change, m.getCompany_name(), def);&#xD;
		}&#xD;
		List&lt;Dept> d = mdao.dept(m.getCompany_name());&#xD;
		List&lt;Job> j = mdao.job(m.getCompany_name());&#xD;
&#xD;
		forward = new ActionForward();&#xD;
		forward.setRedirect(true);&#xD;
		request.setAttribute(&quot;companyinfo&quot;, m);&#xD;
		request.setAttribute(&quot;dept&quot;, d);&#xD;
		request.setAttribute(&quot;job&quot;, j);&#xD;
		forward.setPath(&quot;companyinfo.com&quot;);&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66Q6kKw7Ee2NaYmjDxeNPA" name="execute" method="_68S65Kw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66Q6kaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66Q6kqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66Q6k6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nRGEKw7Ee2NaYmjDxeNPA" name="MembersInfoAction">
            <interfaceRealization xmi:id="_64lfkKw7Ee2NaYmjDxeNPA" client="_6nRGEKw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68Th8Kw7Ee2NaYmjDxeNPA" name="execute" specification="_66SIsKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Th8aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Th8qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Th86w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		MypageDAO mydao = new MypageDAO();&#xD;
&#xD;
		List&lt;UserInfo> list = null;&#xD;
		List&lt;UserInfo> normal = null;&#xD;
		List&lt;UserInfo> wait = null;&#xD;
		List&lt;UserInfo> stop = null;&#xD;
		list = mydao.all_member_info();&#xD;
		normal = mydao.normal_info();&#xD;
		wait = mydao.wait_info();&#xD;
		stop = mydao.stop_info();&#xD;
&#xD;
		request.setAttribute(&quot;list&quot;, list);&#xD;
		request.setAttribute(&quot;normal&quot;, normal);&#xD;
		request.setAttribute(&quot;wait&quot;, wait);&#xD;
		request.setAttribute(&quot;stop&quot;, stop);&#xD;
		forward.setRedirect(false);&#xD;
		forward.setPath(&quot;admin/members/membersinfo.jsp&quot;);&#xD;
		return forward;&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66SIsKw7Ee2NaYmjDxeNPA" name="execute" method="_68Th8Kw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66SIsaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66SIsqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66SIs6w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nS7QKw7Ee2NaYmjDxeNPA" name="memberstatusProcess">
            <interfaceRealization xmi:id="_64nUwKw7Ee2NaYmjDxeNPA" client="_6nS7QKw7Ee2NaYmjDxeNPA" supplier="_6mfqAKw7Ee2NaYmjDxeNPA" contract="_6mfqAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68Th9Kw7Ee2NaYmjDxeNPA" name="execute" specification="_66T94Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Th9aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Th9qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Th96w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		MypageDAO mydao = new MypageDAO();&#xD;
		String user_id = request.getParameter(&quot;user_id&quot;);&#xD;
		String state = request.getParameter(&quot;state&quot;);&#xD;
		mydao.member_status(user_id, state);&#xD;
&#xD;
		List&lt;UserInfo> list = null;&#xD;
		List&lt;UserInfo> normal = null;&#xD;
		List&lt;UserInfo> wait = null;&#xD;
		List&lt;UserInfo> stop = null;&#xD;
		list = mydao.all_member_info();&#xD;
		normal = mydao.normal_info();&#xD;
		wait = mydao.wait_info();&#xD;
		stop = mydao.stop_info();&#xD;
		&#xD;
&#xD;
		request.setAttribute(&quot;list&quot;, list);&#xD;
		request.setAttribute(&quot;normal&quot;, normal);&#xD;
		request.setAttribute(&quot;wait&quot;, wait);&#xD;
		request.setAttribute(&quot;stop&quot;, stop);&#xD;
		forward.setRedirect(false);&#xD;
		forward.setPath(&quot;admin/members/membersinfo.jsp&quot;);&#xD;
		return forward;&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66T94Kw7Ee2NaYmjDxeNPA" name="execute" method="_68Th9Kw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66T94aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66T94qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66T946w7Ee2NaYmjDxeNPA" type="_6mpbAKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_6jxGIKw7Ee2NaYmjDxeNPA" name="db">
          <packagedElement xmi:type="uml:Class" xmi:id="_6nUJYKw7Ee2NaYmjDxeNPA" name="Company">
            <ownedAttribute xmi:id="_67YU4Kw7Ee2NaYmjDxeNPA" name="company_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67Y78Kw7Ee2NaYmjDxeNPA" name="company_url">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67Y78aw7Ee2NaYmjDxeNPA" name="company_logo">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67Y78qw7Ee2NaYmjDxeNPA" name="company_csv_form">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67Y786w7Ee2NaYmjDxeNPA" name="user_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6pdecKw7Ee2NaYmjDxeNPA" name="CompanyDAO">
            <ownedAttribute xmi:id="_67x9gKw7Ee2NaYmjDxeNPA" name="ds" visibility="private" type="_65VGcaw7Ee2NaYmjDxeNPA" association="_69GzNKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68lOwqw7Ee2NaYmjDxeNPA" name="CompanyDAO" specification="_6peskKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68lOw6w7Ee2NaYmjDxeNPA" type="_6pdecKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>try {&#xD;
			Context init = new InitialContext();&#xD;
			ds = (DataSource) init.lookup(&quot;java:comp/env/jdbc/OracleDB&quot;);&#xD;
		} catch (Exception ex) {&#xD;
			System.out.println(&quot;DB연결 실패 : &quot; + ex);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68lOxKw7Ee2NaYmjDxeNPA" name="company_info" specification="_6pfToKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68lOxaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68lOxqw7Ee2NaYmjDxeNPA" type="_6nUJYKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>Company c = new Company();&#xD;
		Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			pstmt = con.prepareStatement(&quot;select * from company_info where user_id = ?&quot;);&#xD;
			pstmt.setString(1, user_id);&#xD;
			rs = pstmt.executeQuery();&#xD;
			if (rs.next()) {&#xD;
				c = new Company();&#xD;
				c.setCompany_name(rs.getString(1));&#xD;
				c.setCompany_url(rs.getString(2));&#xD;
				c.setCompany_logo(rs.getString(3));&#xD;
			}&#xD;
		} catch (Exception ex) {&#xD;
			ex.printStackTrace();&#xD;
			System.out.println(&quot;member_info() 에러 : &quot; + ex);&#xD;
		} finally {&#xD;
			if (rs != null)&#xD;
				try {&#xD;
					rs.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return c;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68l10Kw7Ee2NaYmjDxeNPA" name="create" specification="_6pfToqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68l10aw7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l10qw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l106w7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l11Kw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		int result = 0;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
&#xD;
			// 원문글의 BOARD_RE_REF 필드는 자신의 글번호 입니다.&#xD;
			String sql = &quot;insert into COMPANY_INFO(&quot; + value + &quot;, user_id) values(?, ?)&quot;;&#xD;
&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, change);&#xD;
			pstmt.setString(2, id);&#xD;
			result = pstmt.executeUpdate();&#xD;
			if (result == 1) {&#xD;
				System.out.println(&quot;데이터 삽입이 모두 완료되었습니다.&quot;);&#xD;
			}&#xD;
		} catch (Exception ex) {&#xD;
			System.out.println(&quot;company_create() 에러 : &quot; + ex);&#xD;
			ex.printStackTrace();&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68l11aw7Ee2NaYmjDxeNPA" name="dept_create" specification="_6pghwKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68l11qw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l116w7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l12Kw7Ee2NaYmjDxeNPA" name="company_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l12aw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		int result = -1;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			con.setAutoCommit(false);&#xD;
&#xD;
			String select_sql = &quot;select * from company_dept where dept_name = ?&quot;;&#xD;
			pstmt = con.prepareStatement(select_sql);&#xD;
			pstmt.setString(1, change);&#xD;
			rs = pstmt.executeQuery();&#xD;
			if (rs.next()) {&#xD;
				return 0;&#xD;
			}&#xD;
			pstmt.close();&#xD;
&#xD;
			// 원문글의 BOARD_RE_REF 필드는 자신의 글번호 입니다.&#xD;
			String sql = &quot;insert into COMPANY_DEPT(&quot; + value + &quot;, COMPANY_NAME) values(?, ?)&quot;;&#xD;
&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, change);&#xD;
			pstmt.setString(2, company_name);&#xD;
			result = pstmt.executeUpdate();&#xD;
			if (result == 1) {&#xD;
				System.out.println(&quot;데이터 삽입이 모두 완료되었습니다.&quot;);&#xD;
			}&#xD;
		} catch (Exception ex) {&#xD;
			System.out.println(&quot;dept_create() 에러 : &quot; + ex);&#xD;
			ex.printStackTrace();&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.setAutoCommit(true);&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68l12qw7Ee2NaYmjDxeNPA" name="job_create" specification="_6pghxaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68l126w7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l13Kw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l13aw7Ee2NaYmjDxeNPA" name="company_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68l13qw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		int result = 0;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
&#xD;
			con.setAutoCommit(false);&#xD;
&#xD;
			String select_sql = &quot;select * from company_job where job_name = ?&quot;;&#xD;
			pstmt = con.prepareStatement(select_sql);&#xD;
			pstmt.setString(1, change);&#xD;
			rs = pstmt.executeQuery();&#xD;
			if (rs.next()) {&#xD;
				return 0;&#xD;
			}&#xD;
			pstmt.close();&#xD;
&#xD;
			String sql = &quot;insert into COMPANY_JOB(&quot; + value + &quot;, COMPANY_NAME) values(?, ?)&quot;;&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, change);&#xD;
			pstmt.setString(2, company_name);&#xD;
			result = pstmt.executeUpdate();&#xD;
			if (result == 1) {&#xD;
				System.out.println(&quot;데이터 삽입이 모두 완료되었습니다.&quot;);&#xD;
			}&#xD;
		} catch (Exception ex) {&#xD;
			System.out.println(&quot;dept_create() 에러 : &quot; + ex);&#xD;
			ex.printStackTrace();&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.setAutoCommit(true);&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68mc4Kw7Ee2NaYmjDxeNPA" name="update" specification="_6phv4Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68mc4aw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc4qw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc46w7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc5Kw7Ee2NaYmjDxeNPA" name="def">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc5aw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		int result = 0;&#xD;
&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			con.setAutoCommit(false);&#xD;
&#xD;
			String update_sql = &quot;update company_info set &quot; + value + &quot; = ? where USER_ID=?&quot;;&#xD;
			pstmt = con.prepareStatement(update_sql);&#xD;
			pstmt.setString(1, change);&#xD;
			pstmt.setString(2, id);&#xD;
			result = pstmt.executeUpdate();&#xD;
			pstmt.close();&#xD;
&#xD;
			if (value.equals(&quot;company_name&quot;)) {&#xD;
				String dept_sql = &quot;update company_dept set &quot; + value + &quot; = ? where company_name = ?&quot;;&#xD;
				pstmt = con.prepareStatement(dept_sql);&#xD;
				pstmt.setString(1, change);&#xD;
				pstmt.setString(2, def);&#xD;
				result = pstmt.executeUpdate();&#xD;
				pstmt.close();&#xD;
&#xD;
				String job_sql = &quot;update company_job set &quot; + value + &quot; = ? where company_name = ?&quot;;&#xD;
				pstmt = con.prepareStatement(job_sql);&#xD;
				pstmt.setString(1, change);&#xD;
				pstmt.setString(2, def);&#xD;
				result = pstmt.executeUpdate();&#xD;
				pstmt.close();&#xD;
			}&#xD;
			con.commit();&#xD;
&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;update() 오류&quot;);&#xD;
&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.setAutoCommit(true);&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68mc5qw7Ee2NaYmjDxeNPA" name="dept_update" specification="_6pi-AKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68mc56w7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc6Kw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc6aw7Ee2NaYmjDxeNPA" name="company">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc6qw7Ee2NaYmjDxeNPA" name="def">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc66w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		String sql = &quot;&quot;;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
&#xD;
			if (value.equals(&quot;dept_name&quot;)) {&#xD;
				sql = &quot;update company_dept set dept_name = ? where dept_name = ? and company_name = ?&quot;;&#xD;
&#xD;
			} else if (value.equals(&quot;job_name&quot;)) {&#xD;
				sql = &quot;update company_job set job_name = ? where job_name = ? and company_name = ?&quot;;&#xD;
			}&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, change);&#xD;
			pstmt.setString(2, def);&#xD;
			pstmt.setString(3, company);&#xD;
			pstmt.executeUpdate();&#xD;
			return true;&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;update() 오류&quot;);&#xD;
&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return false;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68mc7Kw7Ee2NaYmjDxeNPA" name="dept_delete" specification="_6pjlEaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68mc7aw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc7qw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc76w7Ee2NaYmjDxeNPA" name="company">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68mc8Kw7Ee2NaYmjDxeNPA" name="def">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		String sql = &quot;&quot;;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			con.setAutoCommit(false);&#xD;
&#xD;
			if (value.equals(&quot;dept_name&quot;)) {&#xD;
				sql = &quot;delete from company_dept where dept_name = ? and company_name = ?&quot;;&#xD;
&#xD;
				String dept_sql = &quot;update user_info set user_dept = '' where user_dept = ?&quot;;&#xD;
				pstmt = con.prepareStatement(dept_sql);&#xD;
				pstmt.setString(1, change);&#xD;
				pstmt.executeUpdate();&#xD;
				pstmt.close();&#xD;
&#xD;
			} else if (value.equals(&quot;job_name&quot;)) {&#xD;
				sql = &quot;delete from company_job where job_name = ? and company_name = ?&quot;;&#xD;
				String job_sql = &quot;update user_info set user_job = '' where user_job = ?&quot;;&#xD;
				pstmt = con.prepareStatement(job_sql);&#xD;
				pstmt.setString(1, change);&#xD;
				pstmt.executeUpdate();&#xD;
				pstmt.close();&#xD;
			}&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, def);&#xD;
			pstmt.setString(2, company);&#xD;
			pstmt.executeUpdate();&#xD;
			con.commit();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;update() 오류&quot;);&#xD;
&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68nD8Kw7Ee2NaYmjDxeNPA" name="update" specification="_6pkMJKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68nD8aw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68nD8qw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68nD86w7Ee2NaYmjDxeNPA" name="company_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68nD9Kw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		int result = 0;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			String update_sql = &quot;update company_info set &quot; + value + &quot; = ? where company_name = ?&quot;;&#xD;
			pstmt = con.prepareStatement(update_sql);&#xD;
			pstmt.setString(1, change);&#xD;
			pstmt.setString(2, company_name);&#xD;
			result = pstmt.executeUpdate();&#xD;
&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;update() 오류&quot;);&#xD;
&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6peskKw7Ee2NaYmjDxeNPA" name="CompanyDAO" method="_68lOwqw7Ee2NaYmjDxeNPA">
              <eAnnotations xmi:id="_6peskaw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6peskqw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6pesk6w7Ee2NaYmjDxeNPA" type="_6pdecKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6pfToKw7Ee2NaYmjDxeNPA" name="company_info" method="_68lOxKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pfToaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_65oocKw7Ee2NaYmjDxeNPA" type="_6nUJYKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6pfToqw7Ee2NaYmjDxeNPA" name="create" method="_68l10Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pfTo6w7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pf6sKw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pf6saw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pf6sqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pghwKw7Ee2NaYmjDxeNPA" name="dept_create" method="_68l11aw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pghwaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pghwqw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pghw6w7Ee2NaYmjDxeNPA" name="company_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pghxKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pghxaw7Ee2NaYmjDxeNPA" name="job_create" method="_68l12qw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6phI0Kw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6phI0aw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6phI0qw7Ee2NaYmjDxeNPA" name="company_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6phI06w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6phv4Kw7Ee2NaYmjDxeNPA" name="update" method="_68mc4Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6phv4aw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6phv4qw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6phv46w7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6phv5Kw7Ee2NaYmjDxeNPA" name="def">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6phv5aw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pi-AKw7Ee2NaYmjDxeNPA" name="dept_update" method="_68mc5qw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pi-Aaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pi-Aqw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pi-A6w7Ee2NaYmjDxeNPA" name="company">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pi-BKw7Ee2NaYmjDxeNPA" name="def">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pjlEKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pjlEaw7Ee2NaYmjDxeNPA" name="dept_delete" method="_68mc7Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pkMIKw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pkMIaw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pkMIqw7Ee2NaYmjDxeNPA" name="company">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pkMI6w7Ee2NaYmjDxeNPA" name="def">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pkMJKw7Ee2NaYmjDxeNPA" name="update" method="_68nD8Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pkzMKw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pkzMaw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pkzMqw7Ee2NaYmjDxeNPA" name="company_name">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pkzM6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69GzNKw7Ee2NaYmjDxeNPA" name="" memberEnd="_69GzNaw7Ee2NaYmjDxeNPA _67x9gKw7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69GzNaw7Ee2NaYmjDxeNPA" name="" type="_6pdecKw7Ee2NaYmjDxeNPA" association="_69GzNKw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6js0sKw7Ee2NaYmjDxeNPA" name="member">
        <packagedElement xmi:type="uml:Package" xmi:id="_6js0saw7Ee2NaYmjDxeNPA" name="db">
          <packagedElement xmi:type="uml:Class" xmi:id="_6oywEKw7Ee2NaYmjDxeNPA" name="UserInfo">
            <ownedAttribute xmi:id="_67g3wKw7Ee2NaYmjDxeNPA" name="USER_ID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67he0Kw7Ee2NaYmjDxeNPA" name="USER_PASSWORD">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67he0aw7Ee2NaYmjDxeNPA" name="USER_EMAIL">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67iF4Kw7Ee2NaYmjDxeNPA" name="USER_CODE">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67is8Kw7Ee2NaYmjDxeNPA" name="USER_NAME">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67is8aw7Ee2NaYmjDxeNPA" name="USER_IMG">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67is8qw7Ee2NaYmjDxeNPA" name="USER_IS_ADMIN">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67is86w7Ee2NaYmjDxeNPA" name="USER_DEPT">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67jUAKw7Ee2NaYmjDxeNPA" name="USER_JOB">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67jUAaw7Ee2NaYmjDxeNPA" name="USER_FAX">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67jUAqw7Ee2NaYmjDxeNPA" name="USER_INTRO">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67jUA6w7Ee2NaYmjDxeNPA" name="USER_CARD">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67j7EKw7Ee2NaYmjDxeNPA" name="USER_STATE">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67j7Eaw7Ee2NaYmjDxeNPA" name="USER_JOIN_DATE" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67j7Eqw7Ee2NaYmjDxeNPA" name="USER_PHONE">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67kiIKw7Ee2NaYmjDxeNPA" name="USER_PASSWORD_CH">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67kiIaw7Ee2NaYmjDxeNPA" name="USER_LASTTIME" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fIIKw7Ee2NaYmjDxeNPA" name="setUSER_LASTTIME" specification="_6o0lQKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fIIaw7Ee2NaYmjDxeNPA" name="uSER_LASTTIME">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>if (uSER_LASTTIME != null) {&#xD;
		         USER_LASTTIME = uSER_LASTTIME.substring(0, 10) + &quot;&lt;br>&quot; + uSER_LASTTIME.substring(11, 19);&#xD;
		      } else {&#xD;
		         USER_LASTTIME = null;&#xD;
		      }&#xD;
		   </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fIIqw7Ee2NaYmjDxeNPA" name="setUSER_JOIN_DATE" specification="_6o1MUaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fII6w7Ee2NaYmjDxeNPA" name="uSER_JOIN_DATE">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>USER_JOIN_DATE = uSER_JOIN_DATE.substring(0, 10);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6o0lQKw7Ee2NaYmjDxeNPA" name="setUSER_LASTTIME" method="_68fIIKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6o1MUKw7Ee2NaYmjDxeNPA" name="uSER_LASTTIME">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6o1MUaw7Ee2NaYmjDxeNPA" name="setUSER_JOIN_DATE" method="_68fIIqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6o1MUqw7Ee2NaYmjDxeNPA" name="uSER_JOIN_DATE">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6o42sKw7Ee2NaYmjDxeNPA" name="UserDAO">
            <ownedAttribute xmi:id="_67lJMKw7Ee2NaYmjDxeNPA" name="ds" visibility="private" isStatic="true" type="_65VGcaw7Ee2NaYmjDxeNPA" association="_69FlEKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fvMKw7Ee2NaYmjDxeNPA" name="UserDAO" specification="_6o6E0Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fvMaw7Ee2NaYmjDxeNPA" type="_6o42sKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>try {&#xD;
			Context init = new InitialContext();&#xD;
			ds = (DataSource) init.lookup(&quot;java:comp/env/jdbc/OracleDB&quot;);&#xD;
		}catch(Exception ex) {&#xD;
			System.out.println(&quot;DB 연결 실패 : &quot; + ex);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fvMqw7Ee2NaYmjDxeNPA" name="isId" specification="_6o6r4Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fvM6w7Ee2NaYmjDxeNPA" name="USER_ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68fvNKw7Ee2NaYmjDxeNPA" name="USER_PASSWORD">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68fvNaw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt=null;&#xD;
		ResultSet rs = null;&#xD;
		int result=-1; //DB에 해당 id가 없습니다.&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			&#xD;
			String sql = &quot;SELECT USER_ID, USER_PASSWORD FROM USER_INFO WHERE USER_ID = ?&quot;;&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, USER_ID);&#xD;
			rs = pstmt.executeQuery();&#xD;
			&#xD;
			if(rs.next()) {&#xD;
				if(rs.getString(2).equals(USER_PASSWORD)) {&#xD;
					result = 1; //아이디와 비밀번호 일치하는 경우&#xD;
				}else {&#xD;
					result = 0; //비밀번호가 일치하지 않는 경우&#xD;
				}&#xD;
			}&#xD;
		}catch(Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}finally {&#xD;
			try {&#xD;
				if(rs != null)&#xD;
					rs.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
			try {&#xD;
				if(pstmt != null)&#xD;
					pstmt.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
		}try {&#xD;
			if(con != null)&#xD;
				con.close();&#xD;
		}catch(Exception e) {&#xD;
			System.out.println(e.getMessage());&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fvNqw7Ee2NaYmjDxeNPA" name="isId" specification="_6o6r5Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fvN6w7Ee2NaYmjDxeNPA" name="USER_ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68fvOKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		int result = -1;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			&#xD;
			String sql = &quot;SELECT USER_ID FROM USER_INFO WHERE USER_ID = ?&quot;;&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, USER_ID);&#xD;
			rs = pstmt.executeQuery();&#xD;
			&#xD;
			if(rs.next()) {&#xD;
				result = 0;   //DB에 해당 id가 있습니다.&#xD;
			}&#xD;
		}catch(Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}finally {&#xD;
			try {&#xD;
				if(rs != null)&#xD;
					rs.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
			try {&#xD;
				if(pstmt != null)&#xD;
					pstmt.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
		}try {&#xD;
			if(con != null)&#xD;
				con.close();&#xD;
		}catch(Exception e) {&#xD;
			System.out.println(e.getMessage());&#xD;
		}&#xD;
		return result;&#xD;
		</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fvOaw7Ee2NaYmjDxeNPA" name="insert" specification="_65cbMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fvOqw7Ee2NaYmjDxeNPA" name="m" type="_6oywEKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68fvO6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		int result = 0;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			System.out.println(&quot;getConnection : insert()&quot;);&#xD;
			&#xD;
			pstmt = con.prepareStatement(&#xD;
		               &quot;insert into USER_INFO (USER_ID, USER_PASSWORD, USER_PASSWORD_CH, USER_EMAIL, USER_NAME,USER_IMG) &quot;&#xD;
		               +&quot;values (?,?,?,?,?,?)&quot;);&#xD;
			pstmt.setString(1, m.getUSER_ID());&#xD;
			pstmt.setString(2, m.getUSER_PASSWORD());&#xD;
			pstmt.setString(3, m.getUSER_PASSWORD_CH());&#xD;
			pstmt.setString(4, m.getUSER_EMAIL());&#xD;
			//pstmt.setInt(4, m.getUSER_CODE());&#xD;
			pstmt.setString(5, m.getUSER_NAME());&#xD;
			pstmt.setString(6, &quot;profile.png&quot;);&#xD;
			result = pstmt.executeUpdate();  //삽입 성공시 result=1&#xD;
			&#xD;
		}catch(java.sql.SQLIntegrityConstraintViolationException e) {&#xD;
			result = -1;&#xD;
			System.out.println(&quot;멤버 아이디 중복 에러입니다.&quot;);&#xD;
		}catch(Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}finally {&#xD;
				if(pstmt != null)&#xD;
					try{&#xD;
						pstmt.close();&#xD;
			}catch(SQLException ex) {&#xD;
				ex.printStackTrace();&#xD;
			}&#xD;
		if(con != null)&#xD;
			try {&#xD;
				con.close();&#xD;
			}catch(SQLException ex) {&#xD;
				ex.printStackTrace();&#xD;
			}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fvPKw7Ee2NaYmjDxeNPA" name="userinfo" specification="_6o7S8aw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fvPaw7Ee2NaYmjDxeNPA" name="USER_ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68fvPqw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>UserInfo userinfo = null;&#xD;
		Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			&#xD;
			String sql = &quot;SELECT * FROM USER_INFO WHERE USER_ID = ?&quot;;&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, USER_ID);&#xD;
			rs = pstmt.executeQuery();&#xD;
			&#xD;
			while (rs.next()) {&#xD;
				userinfo = new UserInfo();&#xD;
				userinfo.setUSER_ID(rs.getString(&quot;USER_ID&quot;));&#xD;
				userinfo.setUSER_PASSWORD(rs.getString(&quot;USER_PASSWORD&quot;));&#xD;
				userinfo.setUSER_EMAIL(rs.getString(&quot;USER_EMAIL&quot;));&#xD;
				userinfo.setUSER_CODE(rs.getInt(&quot;USER_CODE&quot;));&#xD;
				userinfo.setUSER_NAME(rs.getString(&quot;USER_NAME&quot;));&#xD;
				userinfo.setUSER_IMG(rs.getString(&quot;USER_IMG&quot;));&#xD;
				userinfo.setUSER_IS_ADMIN(rs.getInt(&quot;USER_IS_ADMIN&quot;));&#xD;
				userinfo.setUSER_DEPT(rs.getString(&quot;USER_DEPT&quot;));&#xD;
				userinfo.setUSER_JOB(rs.getString(&quot;USER_JOB&quot;));&#xD;
				userinfo.setUSER_FAX(rs.getString(&quot;USER_FAX&quot;));&#xD;
				userinfo.setUSER_INTRO(rs.getString(&quot;USER_INTRO&quot;));&#xD;
				userinfo.setUSER_CARD(rs.getString(&quot;USER_CARD&quot;));&#xD;
				userinfo.setUSER_STATE(rs.getString(&quot;USER_STATE&quot;));&#xD;
				//userinfo.setUSER_JOIN_DATE(rs.getDate(&quot;USER_JOIN_DATE&quot;));&#xD;
				userinfo.setUSER_PHONE(rs.getString(&quot;USER_PHONE&quot;));&#xD;
				&#xD;
			}&#xD;
				&#xD;
		}catch(Exception se) {&#xD;
			se.printStackTrace();&#xD;
		}finally {&#xD;
			try {&#xD;
				if(rs != null)&#xD;
					rs.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
			try {&#xD;
				if(pstmt != null)&#xD;
					pstmt.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
			try {&#xD;
				if(con != null)&#xD;
					con.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
		}&#xD;
		return userinfo;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68fvP6w7Ee2NaYmjDxeNPA" name="main" specification="_6o76AKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68fvQKw7Ee2NaYmjDxeNPA" type="_6o9vMKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68fvQaw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>List&lt;MainBean> list = new ArrayList&lt;MainBean>();&#xD;
		MainBean mb = null;&#xD;
		Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			&#xD;
			String sql = &quot;SELECT * FROM PROJECT &quot;;&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, &quot;PROJECT_NAME&quot;);&#xD;
			rs = pstmt.executeQuery();&#xD;
		&#xD;
			while (rs.next()) {&#xD;
				mb = new MainBean();&#xD;
				mb.setProject_name(rs.getString(&quot;PROJECT_NAME&quot;));&#xD;
				mb.setProject_state(rs.getString(&quot;PROJECT_STATE&quot;));&#xD;
				mb.setProject_prog(rs.getInt(&quot;PROJECT_PROG&quot;));&#xD;
				mb.setProject_start(rs.getString(&quot;PROJECT_START&quot;));&#xD;
				mb.setProject_end(rs.getString(&quot;PROJECT_END&quot;));&#xD;
				mb.setProject_priority(rs.getString(&quot;PROJECT_PRIORITY&quot;));&#xD;
				mb.setProject_partici(rs.getInt(&quot;PROJECT_PARTICI&quot;));&#xD;
				mb.setProject_admin(rs.getString(&quot;PROJECT_ADMIN&quot;));&#xD;
				list.add(mb);&#xD;
			}&#xD;
&#xD;
			&#xD;
		}catch(Exception se) {&#xD;
			se.printStackTrace();&#xD;
		}finally {&#xD;
			try {&#xD;
				if(rs != null)&#xD;
					rs.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
			try {&#xD;
				if(pstmt != null)&#xD;
					pstmt.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
			try {&#xD;
				if(con != null)&#xD;
					con.close();&#xD;
			}catch(SQLException e) {&#xD;
				System.out.println(e.getMessage());&#xD;
			}&#xD;
		}&#xD;
		return list;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6o6E0Kw7Ee2NaYmjDxeNPA" name="UserDAO" method="_68fvMKw7Ee2NaYmjDxeNPA">
              <eAnnotations xmi:id="_6o6E0aw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6o6E0qw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6o6E06w7Ee2NaYmjDxeNPA" type="_6o42sKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6o6r4Kw7Ee2NaYmjDxeNPA" name="isId" method="_68fvMqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6o6r4aw7Ee2NaYmjDxeNPA" name="USER_ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6o6r4qw7Ee2NaYmjDxeNPA" name="USER_PASSWORD">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6o6r46w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6o6r5Kw7Ee2NaYmjDxeNPA" name="isId" method="_68fvNqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6o6r5aw7Ee2NaYmjDxeNPA" name="USER_ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6o7S8Kw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6o7S8aw7Ee2NaYmjDxeNPA" name="userinfo" method="_68fvPKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6o7S8qw7Ee2NaYmjDxeNPA" name="USER_ID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_65dCQaw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6o76AKw7Ee2NaYmjDxeNPA" name="main" method="_68fvP6w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6o76Aaw7Ee2NaYmjDxeNPA" type="_6o9vMKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6o76Aqw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_65cbMKw7Ee2NaYmjDxeNPA" name="insert" method="_68fvOaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_65cbMaw7Ee2NaYmjDxeNPA" name="m" type="_6oywEKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_65dCQKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6o9vMKw7Ee2NaYmjDxeNPA" name="MainBean">
            <ownedAttribute xmi:id="_67lwQaw7Ee2NaYmjDxeNPA" name="row_num">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67m-YKw7Ee2NaYmjDxeNPA" name="project_num">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67m-Yaw7Ee2NaYmjDxeNPA" name="project_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67nlcKw7Ee2NaYmjDxeNPA" name="project_state">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67nlcaw7Ee2NaYmjDxeNPA" name="project_prog">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67nlcqw7Ee2NaYmjDxeNPA" name="project_start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67nlc6w7Ee2NaYmjDxeNPA" name="project_end">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67nldKw7Ee2NaYmjDxeNPA" name="project_priority">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67oMgKw7Ee2NaYmjDxeNPA" name="project_partici">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67oMgaw7Ee2NaYmjDxeNPA" name="project_admin">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67oMgqw7Ee2NaYmjDxeNPA" name="project_admin_img">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67oMg6w7Ee2NaYmjDxeNPA" name="project_parti" type="_640JEKw7Ee2NaYmjDxeNPA" association="_69GMIKw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69FlEKw7Ee2NaYmjDxeNPA" name="" memberEnd="_69FlEaw7Ee2NaYmjDxeNPA _67lJMKw7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69FlEaw7Ee2NaYmjDxeNPA" name="" type="_6o42sKw7Ee2NaYmjDxeNPA" association="_69FlEKw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69GMIKw7Ee2NaYmjDxeNPA" name="" memberEnd="_69GMIaw7Ee2NaYmjDxeNPA _67oMg6w7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69GMIaw7Ee2NaYmjDxeNPA" name="" type="_6o9vMKw7Ee2NaYmjDxeNPA" association="_69GMIKw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_6kRccKw7Ee2NaYmjDxeNPA" name="action">
          <packagedElement xmi:type="uml:Interface" xmi:id="_6n3jAKw7Ee2NaYmjDxeNPA" name="Action">
            <ownedOperation xmi:id="_66j1gKw7Ee2NaYmjDxeNPA" name="execute" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66j1gaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66j1gqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66j1g6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6n5_QKw7Ee2NaYmjDxeNPA" name="ActionForward">
            <ownedAttribute xmi:id="_67bYMqw7Ee2NaYmjDxeNPA" name="redirect">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67bYM6w7Ee2NaYmjDxeNPA" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67b_QKw7Ee2NaYmjDxeNPA" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67b_Qaw7Ee2NaYmjDxeNPA" value="null"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_6n6mUKw7Ee2NaYmjDxeNPA" name="ActionForward">
              <eAnnotations xmi:id="_6n6mUaw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6n6mUqw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6n6mVKw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6n7NYKw7Ee2NaYmjDxeNPA" name="MailSender">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68XzYKw7Ee2NaYmjDxeNPA" name="main" specification="_6n70caw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68XzYaw7Ee2NaYmjDxeNPA" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68XzYqw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Properties props = new Properties();&#xD;
		props.put(&quot;mail.smtp.host&quot;, &quot;smtp.gmail.com&quot;);&#xD;
		props.put(&quot;mail.smtp.port&quot;, &quot;587&quot;);&#xD;
		props.put(&quot;mail.smtp.auth&quot;, &quot;true&quot;);&#xD;
		props.put(&quot;mail.smtp.starttls.enable&quot;, &quot;true&quot;);&#xD;
		props.put(&quot;mail.smtp.ssl.trust&quot;, &quot;smtp.gmail.com&quot;);&#xD;
		&#xD;
		Session session = Session.getInstance(props, new Authenticator() {&#xD;
			@Override&#xD;
			protected PasswordAuthentication getPasswordAuthentication() {&#xD;
				return new PasswordAuthentication(&quot;dabin2807@gmail.com&quot;, &quot;nmpaohwvgkohgcst&quot;);&#xD;
			}&#xD;
		});&#xD;
		&#xD;
		String receiver = &quot;alfoclsrn9@naver.com&quot;; // 메일 받을 주소&#xD;
		String title = &quot;테스트 메일입니다.&quot;;&#xD;
		String content = &quot;&lt;h2 style='color:blue'>안녕하세요&lt;/h2>&quot;;&#xD;
		Message message = new MimeMessage(session);&#xD;
		try {&#xD;
			message.setFrom(new InternetAddress(&quot;dabin2807@gmail.com&quot;, &quot;관리자&quot;, &quot;utf-8&quot;));&#xD;
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(receiver));&#xD;
			message.setSubject(title);&#xD;
			message.setContent(content, &quot;text/html; charset=utf-8&quot;);&#xD;
&#xD;
			Transport.send(message);&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6n70caw7Ee2NaYmjDxeNPA" name="main" isStatic="true" method="_68XzYKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6n70cqw7Ee2NaYmjDxeNPA" name="args">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6n8bgKw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6n9CkKw7Ee2NaYmjDxeNPA" name="MainAction">
            <interfaceRealization xmi:id="_64_vQKw7Ee2NaYmjDxeNPA" client="_6n9CkKw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68XzY6w7Ee2NaYmjDxeNPA" name="execute" specification="_66kckKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68XzZKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68XzZaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68XzZqw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward=new ActionForward();  &#xD;
		forward.setRedirect(false);  //주소변경 없이 이동&#xD;
		&#xD;
		forward.setPath(&quot;main/main.jsp&quot;);  //이동할 곳=메인&#xD;
		&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66kckKw7Ee2NaYmjDxeNPA" name="execute" method="_68XzY6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66kckaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66kckqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66lDoKw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6n-3wKw7Ee2NaYmjDxeNPA" name="MemberFrontController">
            <generalization xmi:id="_6oAF46w7Ee2NaYmjDxeNPA" general="_6mwvwKw7Ee2NaYmjDxeNPA"/>
            <ownedAttribute xmi:id="_67b_Qqw7Ee2NaYmjDxeNPA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67b_Q6w7Ee2NaYmjDxeNPA" value="-9024603628813910853L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68XzZ6w7Ee2NaYmjDxeNPA" name="doProcess" specification="_66mRwKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68XzaKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Xzaaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>String requestURI = request.getRequestURI();&#xD;
		System.out.println(&quot;RequestURI = &quot; +requestURI);&#xD;
		&#xD;
		//getContextPath() : 컨텍스트 경로가반환&#xD;
		//contextPath : &quot;JspProject 가 반환&#xD;
		String contextPath = request.getContextPath();&#xD;
		System.out.println(&quot;contextPath = &quot; + contextPath);&#xD;
		&#xD;
		&#xD;
		//requestURI 에서 컨텍스트 경로 길이 값의 인덱스 위치의 문자부터 마지막 위치 문자까지 추출&#xD;
		//command : /login.net 반환&#xD;
		String command =  requestURI.substring(contextPath.length());&#xD;
		System.out.println(&quot;command = &quot; + command);&#xD;
		&#xD;
		ActionForward forward = null;&#xD;
		Action action = null;&#xD;
		&#xD;
		switch(command) {&#xD;
		case &quot;/login.net&quot;:&#xD;
			action = new MemberLoginAction();&#xD;
			break;&#xD;
		case &quot;/join.net&quot;:&#xD;
			action = new MemberJoinAction();&#xD;
			break;&#xD;
		case &quot;/idcheck.net&quot;:&#xD;
			action = new MemberIdCheckAction();&#xD;
			break;&#xD;
		case &quot;/joinProcess.net&quot;:&#xD;
			action = new MemberJoinProcessAction();&#xD;
			break;&#xD;
		case &quot;/main.net&quot;:&#xD;
			action = new MemberLoginProcessAction();&#xD;
			break;&#xD;
		case &quot;/logout.net&quot;:&#xD;
			action = new MemberLogoutAction();&#xD;
			break;&#xD;
	    case &quot;/send.net&quot;:&#xD;
	        action = new SendAction();&#xD;
	        break;&#xD;
	    case &quot;/memberInfo.net&quot;:&#xD;
	        action = new MemberInfoAction();&#xD;
	        break;&#xD;
	    case &quot;/main2.net&quot;:&#xD;
	    	action = new MainAction();&#xD;
	    	break;&#xD;
	&#xD;
		} //switch and&#xD;
		forward = action.execute(request, response); //반환형 포워드다.&#xD;
		&#xD;
		if(forward != null) {&#xD;
			if(forward.isRedirect()) { //리다이렉트 됩니다.&#xD;
				response.sendRedirect(forward.getPath());&#xD;
			}else { //포워딩됩니다.&#xD;
				RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getPath());&#xD;
				dispatcher.forward(request,	 response);&#xD;
			}&#xD;
		}&#xD;
		&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68Xzaqw7Ee2NaYmjDxeNPA" name="doGet" specification="_66m40Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Xza6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68XzbKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>doProcess(request, response);  //doProcess에 넘김. &#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68YacKw7Ee2NaYmjDxeNPA" name="doPost" specification="_66m41Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Yacaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Yacqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>request.setCharacterEncoding(&quot;utf-8&quot;);&#xD;
			doProcess(request, response);&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66mRwKw7Ee2NaYmjDxeNPA" name="doProcess" visibility="protected" method="_68XzZ6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66mRwaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66mRwqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_66m40Kw7Ee2NaYmjDxeNPA" name="doGet" visibility="protected" method="_68Xzaqw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66m40aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66m40qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_66m41Kw7Ee2NaYmjDxeNPA" name="doPost" visibility="protected" method="_68YacKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66m41aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66m41qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oCiIKw7Ee2NaYmjDxeNPA" name="MemberIdCheckAction">
            <interfaceRealization xmi:id="_65BkcKw7Ee2NaYmjDxeNPA" client="_6oCiIKw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68Yac6w7Ee2NaYmjDxeNPA" name="execute" specification="_66nf4aw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68YadKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Yadaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Yadqw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>UserDAO dao = new UserDAO(); //db가서 확인해. result가 0인지 -1인지. 하고 찾아와서 result에 넣어 &#xD;
		int result = dao.isId(request.getParameter(&quot;id&quot;));&#xD;
		response.getWriter().print(result);  //응답에 result담아. 응답으로 가면 돼하고 실어놓음.&#xD;
		System.out.println(result);&#xD;
		return null; &#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66nf4aw7Ee2NaYmjDxeNPA" name="execute" method="_68Yac6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66oG8Kw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66oG8aw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66oG8qw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oEXUKw7Ee2NaYmjDxeNPA" name="MemberInfoAction">
            <interfaceRealization xmi:id="_65CykKw7Ee2NaYmjDxeNPA" client="_6oEXUKw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68Yad6w7Ee2NaYmjDxeNPA" name="execute" specification="_66ouAKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68YaeKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Yaeaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Yaeqw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		UserDAO udao = new UserDAO();&#xD;
		UserInfo userinfo = new UserInfo();&#xD;
		&#xD;
		HttpSession session = request.getSession();&#xD;
		String USER_ID = (String)session.getAttribute(&quot;USER_ID&quot;);&#xD;
		userinfo = udao.userinfo(USER_ID);&#xD;
		&#xD;
		if(userinfo==null) {&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			forward.setRedirect(false);&#xD;
			request.setAttribute(&quot;message&quot;, &quot;아이디에 해당하는 정보가 없습니다.&quot;);&#xD;
			return forward;&#xD;
		}&#xD;
&#xD;
		request.setAttribute(&quot;userinfo&quot;, userinfo);&#xD;
		forward.setRedirect(false);&#xD;
		&#xD;
		forward.setPath(&quot;main/main.jsp&quot;);&#xD;
		return forward;&#xD;
		//이 서블릿은 사용안함&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66ouAKw7Ee2NaYmjDxeNPA" name="execute" method="_68Yad6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66ouAaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66ouAqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66ouA6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oFlcKw7Ee2NaYmjDxeNPA" name="MemberJoinAction">
            <interfaceRealization xmi:id="_65DZoKw7Ee2NaYmjDxeNPA" client="_6oFlcKw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ZBgKw7Ee2NaYmjDxeNPA" name="execute" specification="_66p8IKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68ZBgaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ZBgqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ZBg6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward=new ActionForward();  &#xD;
		forward.setRedirect(false);					//request가 계속 살아있어야 된다.=주소변경없이 JSP페이지로 이동=디스패쳐방식이다.&#xD;
		forward.setPath(&quot;member/joinForm.jsp&quot;); 	//이동할 곳&#xD;
		return forward;								//이 정보를 담아서 리턴.\\&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66p8IKw7Ee2NaYmjDxeNPA" name="execute" method="_68ZBgKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66p8Iaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66p8Iqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66p8I6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oHaoKw7Ee2NaYmjDxeNPA" name="MemberJoinProcessAction">
            <interfaceRealization xmi:id="_65EAsKw7Ee2NaYmjDxeNPA" client="_6oHaoKw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ZBhKw7Ee2NaYmjDxeNPA" name="execute" specification="_66rxUKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68ZBhaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ZBhqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ZBh6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>String USER_ID = request.getParameter(&quot;id&quot;);&#xD;
		String USER_PASSWORD = request.getParameter(&quot;pass&quot;);&#xD;
		String USER_PASSWORD_CH = request.getParameter(&quot;password_ch&quot;);&#xD;
		String USER_EMAIL = request.getParameter(&quot;email&quot;);&#xD;
		//int USER_CODE = Integer.parseInt(request.getParameter(&quot;USER_CODE&quot;));&#xD;
		String USER_NAME = request.getParameter(&quot;name&quot;);&#xD;
		&#xD;
&#xD;
		UserInfo m = new UserInfo();&#xD;
		m.setUSER_ID(USER_ID);		m.setUSER_PASSWORD(USER_PASSWORD);&#xD;
		m.setUSER_EMAIL(USER_EMAIL);			//m.setUSER_CODE(USER_CODE);	&#xD;
&#xD;
		m.setUSER_NAME(USER_NAME);		m.setUSER_PASSWORD_CH(USER_PASSWORD_CH);&#xD;
&#xD;
		&#xD;
		UserDAO mdao = new UserDAO();&#xD;
		int result = mdao.insert(m);&#xD;
		&#xD;
		if(result==0) {&#xD;
			System.out.println(&quot;회원 가입 실패입니다.&quot;);&#xD;
			ActionForward forward = new ActionForward();&#xD;
			forward.setRedirect(false);&#xD;
			request.setAttribute(&quot;massage&quot;, &quot;회원가입 실패입니다.&quot;);&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			return forward;&#xD;
		}&#xD;
		&#xD;
		response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
		PrintWriter out = response.getWriter();&#xD;
		out.println(&quot;&lt;script>&quot;);&#xD;
		if(result == 1) { //삽입이 된 경우&#xD;
			out.println(&quot;alert('회원 가입을 축하합니다. 다시 로그인 해주세요.');&quot;);&#xD;
			out.println(&quot;location.href='login.net';&quot;);&#xD;
		}else if(result == -1) {&#xD;
			out.println(&quot;alert('아이디가 중복되었습니다. 다시 입력하세요');&quot;);&#xD;
			//새로고침되어 이전에 입력한 데이터가 나타나지 않습니다.&#xD;
			//out.println(&quot;location.href='join.net';);&#xD;
			out.println(&quot;history.back();&quot;);  // 비밀번호를 제외한 다른 데이터는 유지 되어 있습니다. 비밀번호는 type이 pass라 지워짐.&#xD;
		}&#xD;
		out.println(&quot;&lt;/script>&quot;);&#xD;
		out.close();&#xD;
		return null;  //getWriter로 응답 보내서 리턴 null&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66rxUKw7Ee2NaYmjDxeNPA" name="execute" method="_68ZBhKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66rxUaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66rxUqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66rxU6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oJ24Kw7Ee2NaYmjDxeNPA" name="MemberLoginAction">
            <interfaceRealization xmi:id="_65FO0aw7Ee2NaYmjDxeNPA" client="_6oJ24Kw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ZokKw7Ee2NaYmjDxeNPA" name="execute" specification="_66rxVKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Zokaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Zokqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Zok6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>String id = &quot;&quot;; //초기화하기 위함.&#xD;
		&#xD;
		Cookie[] cookies = request.getCookies();&#xD;
		if(cookies != null) {&#xD;
			for(int i=0; i&lt;cookies.length; i++) {&#xD;
				if(cookies[i].getName().equals(&quot;id&quot;)) {&#xD;
					id=cookies[i].getValue();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		request.setAttribute(&quot;id&quot;, id); 			//전달되어온 리퀘스트에 셋어트리븉로 담음&#xD;
		ActionForward forward=new ActionForward();  &#xD;
		forward.setRedirect(false);					//request가 계속 살아있어야 된다.=주소변경없이 JSP페이지로 이동=디스패쳐방식이다.&#xD;
		forward.setPath(&quot;member/loginForm.jsp&quot;); 	//이동할 곳&#xD;
		return forward;								//이 정보를 담아서 리턴.&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66rxVKw7Ee2NaYmjDxeNPA" name="execute" method="_68ZokKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66rxVaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66sYYKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66sYYaw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oMTIKw7Ee2NaYmjDxeNPA" name="MemberLoginProcessAction">
            <interfaceRealization xmi:id="_65Gc8Kw7Ee2NaYmjDxeNPA" client="_6oMTIKw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ZolKw7Ee2NaYmjDxeNPA" name="execute" specification="_66s_cqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Zolaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Zolqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Zol6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		&#xD;
		HttpSession session = request.getSession();&#xD;
		&#xD;
		//세션이 있는 경우&#xD;
		String USER_ID = (String)session.getAttribute(&quot;id&quot;);&#xD;
		&#xD;
		if(USER_ID != null) {&#xD;
		UserDAO udao = new UserDAO();&#xD;
&#xD;
		UserInfo userinfo = udao.userinfo(USER_ID);&#xD;
		List&lt;MainBean> mainbean = udao.main();&#xD;
		if(userinfo==null) {&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			forward.setRedirect(false);&#xD;
			request.setAttribute(&quot;message&quot;, &quot;아이디에 해당하는 정보가 없습니다.&quot;);&#xD;
			return forward;&#xD;
		}&#xD;
&#xD;
		request.setAttribute(&quot;mainbean&quot;, mainbean);&#xD;
		request.setAttribute(&quot;userinfo&quot;, userinfo);&#xD;
		System.out.println(userinfo.getUSER_IMG());&#xD;
		&#xD;
		forward.setRedirect(false);&#xD;
		forward.setPath(&quot;main/main.jsp&quot;);  //메인 페이지로 이동&#xD;
		return forward;&#xD;
		}&#xD;
		&#xD;
		&#xD;
		USER_ID = request.getParameter(&quot;id&quot;);&#xD;
		String USER_PASSWORD = request.getParameter(&quot;pass&quot;);&#xD;
		UserDAO mdao = new UserDAO();&#xD;
		int result = mdao.isId(USER_ID, USER_PASSWORD);&#xD;
		System.out.println(&quot;결과는 &quot; + result);&#xD;
		&#xD;
		//로그인 성공&#xD;
		if(result == 1) {&#xD;
			session = request.getSession();&#xD;
			session.setAttribute(&quot;id&quot;, USER_ID);&#xD;
			String IDStore = request.getParameter(&quot;remember-check&quot;);&#xD;
			Cookie cookie = new Cookie(&quot;id&quot;, USER_ID);&#xD;
			&#xD;
			//아이디 기억하기를 체크한 경우&#xD;
			if(IDStore != null &amp;&amp; IDStore.equals(&quot;store&quot;)) {&#xD;
				//cookie.setMaxAge(60*60*24); 쿠키의 유효시간 24시간으로 설정&#xD;
				cookie.setMaxAge(2*60);&#xD;
				//클라이언트로 쿠키값을 전송합니다.&#xD;
				response.addCookie(cookie);&#xD;
				System.out.println(&quot;쿠키확인&quot;);&#xD;
			}else {&#xD;
				cookie.setMaxAge(0);&#xD;
				response.addCookie(cookie);&#xD;
			}&#xD;
			//String USER_ID = (String)session.getAttribute(&quot;USER_ID&quot;);&#xD;
			UserDAO udao = new UserDAO();&#xD;
&#xD;
			UserInfo userinfo = udao.userinfo(USER_ID);&#xD;
			&#xD;
			if(userinfo==null) {&#xD;
				forward.setPath(&quot;error/error.jsp&quot;);&#xD;
				forward.setRedirect(false);&#xD;
				request.setAttribute(&quot;message&quot;, &quot;아이디에 해당하는 정보가 없습니다.&quot;);&#xD;
				return forward;&#xD;
			}&#xD;
&#xD;
			request.setAttribute(&quot;userinfo&quot;, userinfo);&#xD;
			&#xD;
			&#xD;
			forward.setRedirect(false);&#xD;
			forward.setPath(&quot;main/main.jsp&quot;);  //메인 페이지로 이동&#xD;
			return forward;&#xD;
		} else {&#xD;
			String message = &quot;비밀번호가 일치하지 않습니다.&quot;;&#xD;
			if(result == -1)&#xD;
				message = &quot;아이디가 존재하지 않습니다.\\n아이디를 다시 확인하거나\\n행정팀에 회원가입 승인 여부 확인해주세요.&quot;;&#xD;
			response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
			PrintWriter out = response.getWriter();&#xD;
			out.println(&quot;&lt;script>&quot;);&#xD;
			out.println(&quot;alert('&quot; + message + &quot;');&quot;);&#xD;
			out.println(&quot;location.href='login.net';&quot;);&#xD;
			out.println(&quot;&lt;/script>&quot;);&#xD;
			out.close();&#xD;
			return null;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66s_cqw7Ee2NaYmjDxeNPA" name="execute" method="_68ZolKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66s_c6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66s_dKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66s_daw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oOvYKw7Ee2NaYmjDxeNPA" name="MemberLogoutAction">
            <interfaceRealization xmi:id="_65HEAKw7Ee2NaYmjDxeNPA" client="_6oOvYKw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ZomKw7Ee2NaYmjDxeNPA" name="execute" specification="_66uNkKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68Zomaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Zomqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68Zom6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		HttpSession session = request.getSession();   //로그아웃은 세션을 invalidate해야함.&#xD;
		session.invalidate();&#xD;
		forward.setRedirect(true);		//주소가 바뀌므로 리다이렉트. 주소가 바뀌면 true&#xD;
		forward.setPath(&quot;login.net&quot;);	//로그아웃하면 로그인 페이지로 이동&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66uNkKw7Ee2NaYmjDxeNPA" name="execute" method="_68ZomKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66uNkaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66uNkqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66uNk6w7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oRLoKw7Ee2NaYmjDxeNPA" name="Myinfo">
            <ownedAttribute xmi:id="_67dNYKw7Ee2NaYmjDxeNPA" name="naverid" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67d0cKw7Ee2NaYmjDxeNPA" value="&quot;alfoclsrn9&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67d0caw7Ee2NaYmjDxeNPA" name="naverpass" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67d0cqw7Ee2NaYmjDxeNPA" value="&quot;ekqlsEkqls25#&quot;"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oSZwKw7Ee2NaYmjDxeNPA" name="Send">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ZonKw7Ee2NaYmjDxeNPA" name="send" specification="_6oTn4Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68aPoKw7Ee2NaYmjDxeNPA" name="receivers">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68aPoaw7Ee2NaYmjDxeNPA" name="ran">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
              <language>java</language>
              <body>String sender=Myinfo.naverid + &quot;@naver.com&quot;;  //내 메일&#xD;
		String receiver=receivers; //회원가입 이메일. @까지 다 붙여서&#xD;
		String subject=&quot;이메일 인증&quot;;&#xD;
		String content=&quot;이메일 인증번호는 &quot; + ran;&#xD;
		/*&#xD;
		JavaMail을 사용하여 이메일을 전송하기 위한 3가지 절차는 다음과 같습니다.&#xD;
		1. 호스트이름, 사용자명, 비밀번호 등과 같은 호스트의 모든 정보를 저장하는 Session 객체를 얻습니다.&#xD;
		2. 메시지를 구성합니다.&#xD;
		3. 메시지를 보냅니다.&#xD;
		*/&#xD;
		//SMTP 서버 주소를 지정합니다.&#xD;
		String server = &quot;smtp.naver.com&quot;;&#xD;
		int port=587;&#xD;
		try{&#xD;
			//서버 정보를 Properties 객체에 저장합니다.&#xD;
			Properties properties = new Properties();&#xD;
			&#xD;
			//SMTP 서버 정보 설정&#xD;
			//네이버일 경우 smtp.naver.com&#xD;
			properties.put(&quot;mail.smtp.host&quot;, server);&#xD;
			properties.put(&quot;mail.smtp.port&quot;, port);&#xD;
			/*&#xD;
			만약 다음과 같은 오류가 발생할 경우 아래 문장을 추가합니다.&#xD;
			javax.mail.authenticationfailedexception 220 ready to start tls&#xD;
			properties.put(&quot;mail.smtp.ssl.trust&quot;, &quot;smtp.naver.com&quot;);&#xD;
			*/&#xD;
			&#xD;
			//SSL(Secure Sockets Layer)과 같은 TLS(전송 계층 보안-Transport Layer Security)는&#xD;
			//네트워크를 통해 전송될 때 데이터의 보안을 유지하지 위한 암호화 프로토콜입니다&#xD;
			//메일 전송에 사용되는 프로토콜을 TLSv1.2로 지정합니다.&#xD;
			properties.put(&quot;mail.smtp.ssl.protocols&quot;, &quot;TLSv1.2&quot;);&#xD;
			&#xD;
			//지정한 Properties객체의 값으로 세션의 인스턴스를 생성합니다.&#xD;
			//public static Session getInstance(Properties props)&#xD;
			//Session 클래스는 사용자의 이름, 암호, 메일 서버와 같이&#xD;
			//메일 서버를 이용하는데 필요한 이메일 계정 정보를 관리합니다.&#xD;
			Session s = Session.getInstance(properties);&#xD;
			&#xD;
			//보내는 메일과 받는 주소를 설정합니다.&#xD;
			Address sender_address=new InternetAddress(sender);&#xD;
			Address receiver_address=new InternetAddress(receiver);&#xD;
			&#xD;
			//메일을 보내기 위한 정보를 입력하기 위해 Message객체를 생성합니다.&#xD;
			Message message = new MimeMessage(s);&#xD;
			&#xD;
			//보내는 메일의 내용이 한글일 경우 깨지지 않도록 content-type을 지정합니다.&#xD;
			message.setHeader(&quot;content-type&quot;, &quot;text/html;charset=utf-8&quot;);&#xD;
			&#xD;
			//보내는 메일 주소 정보를 설정합니다.&#xD;
			message.setFrom(sender_address);&#xD;
			&#xD;
			//받는 메일 주소 정보를 설정합니다.&#xD;
			//Message.RecipientType는 Message 클래스에서 허용하는 수신자 유형을 정의합니다.&#xD;
			//Message.RecipientType.TO : 받는 사람을 의미합니다.&#xD;
			message.addRecipient(Message.RecipientType.TO, receiver_address);&#xD;
			&#xD;
			//제목 정보를 설정합니다.&#xD;
			message.setSubject(subject);&#xD;
			&#xD;
			//내용의 정보를 설정합니다.&#xD;
			message.setContent(content, &quot;text/html;charset=utf-8&quot;);&#xD;
			&#xD;
			//보내는 날짜를 설정합니다.&#xD;
			message.setSentDate(new java.util.Date());&#xD;
			&#xD;
			//public Transport getTransport(String protocol) throws NoSuchProviderException&#xD;
			//지정된 프로토콜(smtp)을 구현하는 Transport 객체를 가져옵니다.&#xD;
			//메일을 전송하는 클래스 입니다.&#xD;
			Transport transport=s.getTransport(&quot;smtp&quot;);&#xD;
			&#xD;
			//첫번째 인자는 연결할 호스트 입니다.&#xD;
			//두번째 인자는 아이디, 세번째 인자는 비밀번호를 의미합니다.&#xD;
			transport.connect(server, Myinfo.naverid, Myinfo.naverpass);&#xD;
			&#xD;
			//getAllRecipients() : 메시지의 모든 수신자 주소를 가져옵니다.&#xD;
			//지정한 주소 목록으로 메시지를 보냅니다.&#xD;
			transport.sendMessage(message, message.getAllRecipients());&#xD;
			&#xD;
			//연결을 종료합니다.&#xD;
			transport.close();&#xD;
			&#xD;
			System.out.println(&quot;&lt;h3>메일이 정상적으로 전송되었습니다.&lt;/h3>&quot;);&#xD;
		}catch(Exception e){&#xD;
			System.out.println(&quot;SMTP 서버가 잘못 설정되었거나, 서비스에 문제가 있습니다.&quot;);&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6oTn4Kw7Ee2NaYmjDxeNPA" name="send" method="_68ZonKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6oTn4aw7Ee2NaYmjDxeNPA" name="receivers">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6oTn4qw7Ee2NaYmjDxeNPA" name="ran">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oUO8Kw7Ee2NaYmjDxeNPA" name="SendAction">
            <interfaceRealization xmi:id="_65LVcKw7Ee2NaYmjDxeNPA" client="_6oUO8Kw7Ee2NaYmjDxeNPA" supplier="_6n3jAKw7Ee2NaYmjDxeNPA" contract="_6n3jAKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68aPoqw7Ee2NaYmjDxeNPA" name="execute" specification="_66u0oKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68aPo6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68aPpKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68aPpaw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>String receiver = request.getParameter(&quot;receiver&quot;);&#xD;
		&#xD;
		int random = 0;&#xD;
 	random = (int)Math.floor((Math.random()*(99999-10000+1)))+10000;&#xD;
		&#xD;
		&#xD;
		Send send = new Send();&#xD;
		send.send(receiver,random);&#xD;
		&#xD;
		response.getWriter().print(random); &#xD;
		&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66u0oKw7Ee2NaYmjDxeNPA" name="execute" method="_68aPoqw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66u0oaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66u0oqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66vbsKw7Ee2NaYmjDxeNPA" type="_6n5_QKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6js0sqw7Ee2NaYmjDxeNPA" name="mypage">
        <packagedElement xmi:type="uml:Package" xmi:id="_6jtbwKw7Ee2NaYmjDxeNPA" name="db">
          <packagedElement xmi:type="uml:Class" xmi:id="_6oWEIKw7Ee2NaYmjDxeNPA" name="Dept">
            <ownedAttribute xmi:id="_67ebgKw7Ee2NaYmjDxeNPA" name="dept_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67ebgaw7Ee2NaYmjDxeNPA" name="company_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6pBZkaw7Ee2NaYmjDxeNPA" name="Job">
            <ownedAttribute xmi:id="_67qBsKw7Ee2NaYmjDxeNPA" name="job_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67qBsaw7Ee2NaYmjDxeNPA" name="company_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6pCnsKw7Ee2NaYmjDxeNPA" name="Member">
            <ownedAttribute xmi:id="_67qowKw7Ee2NaYmjDxeNPA" name="user_id">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67qowaw7Ee2NaYmjDxeNPA" name="user_password">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67qowqw7Ee2NaYmjDxeNPA" name="user_email">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67rP0Kw7Ee2NaYmjDxeNPA" name="user_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67rP0aw7Ee2NaYmjDxeNPA" name="user_img">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67rP0qw7Ee2NaYmjDxeNPA" name="user_is_admin">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67r24Kw7Ee2NaYmjDxeNPA" name="user_dept">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67r24aw7Ee2NaYmjDxeNPA" name="user_job">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67r24qw7Ee2NaYmjDxeNPA" name="user_fax">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67r246w7Ee2NaYmjDxeNPA" name="user_intro">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67sd8Kw7Ee2NaYmjDxeNPA" name="user_card">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67sd8aw7Ee2NaYmjDxeNPA" name="user_state">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67sd8qw7Ee2NaYmjDxeNPA" name="user_join_date" type="_65I5MKw7Ee2NaYmjDxeNPA"/>
            <ownedAttribute xmi:id="_67sd86w7Ee2NaYmjDxeNPA" name="user_phone">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6pGSEKw7Ee2NaYmjDxeNPA" name="MypageDAO">
            <ownedAttribute xmi:id="_67tFAKw7Ee2NaYmjDxeNPA" name="ds" visibility="private" type="_65VGcaw7Ee2NaYmjDxeNPA" association="_69GMI6w7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68gWQKw7Ee2NaYmjDxeNPA" name="MypageDAO" specification="_6pHgMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68gWQaw7Ee2NaYmjDxeNPA" type="_6pGSEKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>try {&#xD;
      Context init = new InitialContext();&#xD;
      ds = (DataSource) init.lookup(&quot;java:comp/env/jdbc/OracleDB&quot;);&#xD;
   } catch (Exception ex) {&#xD;
      System.out.println(&quot;DB연결 실패 : &quot; + ex);&#xD;
   }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68gWQqw7Ee2NaYmjDxeNPA" name="member_info" specification="_6pIHQKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68gWQ6w7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68gWRKw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>UserInfo m = new UserInfo();&#xD;
   Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   ResultSet rs = null;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
      pstmt = con.prepareStatement(&quot;select * from user_info where user_id = ?&quot;);&#xD;
      System.out.println(user_id);&#xD;
      pstmt.setString(1, user_id);&#xD;
      rs = pstmt.executeQuery();&#xD;
      if (rs.next()) {&#xD;
         m = new UserInfo();&#xD;
         m.setUSER_ID(rs.getString(&quot;USER_ID&quot;));&#xD;
         m.setUSER_PASSWORD(rs.getString(&quot;USER_PASSWORD&quot;));&#xD;
         m.setUSER_DEPT(rs.getString(&quot;USER_DEPT&quot;));&#xD;
         m.setUSER_JOB(rs.getString(&quot;USER_JOB&quot;));&#xD;
         m.setUSER_EMAIL(rs.getString(&quot;USER_EMAIL&quot;));&#xD;
         m.setUSER_NAME(rs.getString(&quot;USER_NAME&quot;));&#xD;
         m.setUSER_FAX(rs.getString(&quot;USER_FAX&quot;));&#xD;
         m.setUSER_PHONE(rs.getString(&quot;USER_PHONE&quot;));&#xD;
         m.setUSER_INTRO(rs.getString(&quot;USER_INTRO&quot;));&#xD;
         m.setUSER_IMG(rs.getString(&quot;USER_IMG&quot;));&#xD;
         m.setUSER_CARD(rs.getString(&quot;USER_CARD&quot;));&#xD;
      }&#xD;
   } catch (Exception ex) {&#xD;
      ex.printStackTrace();&#xD;
      System.out.println(&quot;member_info() 에러 : &quot; + ex);&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return m;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68gWRaw7Ee2NaYmjDxeNPA" name="update" specification="_65jv8Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68gWRqw7Ee2NaYmjDxeNPA" name="m" type="_6oywEKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68gWR6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   int result = 0;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
      String sql = &quot;update user_info &quot;&#xD;
            + &quot;     set user_name=?, user_dept=?, user_job=?, user_email=?, user_fax=?, user_phone=?, user_intro=?, user_img=?, user_card=? &quot;&#xD;
            + &quot;     where USER_ID=?&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      pstmt.setString(1, m.getUSER_NAME());&#xD;
      pstmt.setString(2, m.getUSER_DEPT());&#xD;
      pstmt.setString(3, m.getUSER_JOB());&#xD;
      pstmt.setString(4, m.getUSER_EMAIL());&#xD;
      pstmt.setString(5, m.getUSER_FAX());&#xD;
      pstmt.setString(6, m.getUSER_PHONE());&#xD;
      pstmt.setString(7, m.getUSER_INTRO());&#xD;
      pstmt.setString(8, m.getUSER_IMG());&#xD;
      pstmt.setString(9, m.getUSER_CARD());&#xD;
      pstmt.setString(10, m.getUSER_ID());&#xD;
      result = pstmt.executeUpdate();&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;update() 오류&quot;);&#xD;
&#xD;
   } finally {&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68hkYKw7Ee2NaYmjDxeNPA" name="isId" specification="_6pIuUKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68hkYaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkYqw7Ee2NaYmjDxeNPA" name="user_password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkY6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   ResultSet rs = null;&#xD;
   int result = -1; // 패스워드가 다릅니다.&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      String sql = &quot;SELECT user_id, user_password from user_info where user_id = ? and user_password = ?&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
&#xD;
      pstmt.setString(1, user_id);&#xD;
      pstmt.setString(2, user_password);&#xD;
      rs = pstmt.executeQuery();&#xD;
&#xD;
      while (rs.next()) {&#xD;
         if (rs.getString(2).equals(user_password)) {&#xD;
            result = 1; // 아이디와 비밀번호 일치&#xD;
         } else {&#xD;
            result = 0; // 비밀번호가 일치하지 않는 경우.&#xD;
         }&#xD;
      }&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;isId() 오류&quot;);&#xD;
&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68hkZKw7Ee2NaYmjDxeNPA" name="passwordchange" specification="_6pJ8cKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68hkZaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkZqw7Ee2NaYmjDxeNPA" name="user_password1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkZ6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   int result = 0;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
      String sql = &quot;update user_info set user_password = ? WHERE USER_ID = ?&quot;;&#xD;
&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      pstmt.setString(1, user_password1);&#xD;
      pstmt.setString(2, user_id);&#xD;
      result = pstmt.executeUpdate();&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;passwordchange() 오류&quot;);&#xD;
   } finally {&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68hkaKw7Ee2NaYmjDxeNPA" name="update" specification="_6pKjgKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68hkaaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkaqw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hka6w7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkbKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   int result = 0;&#xD;
&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
      String sql = &quot;update user_info &quot; + &quot; set &quot; + value + &quot; = ?&quot; + &quot;     where USER_ID=?&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      pstmt.setString(1, change);&#xD;
      pstmt.setString(2, id);&#xD;
      result = pstmt.executeUpdate();&#xD;
      System.out.println(result + &quot; update() 결과&quot;);&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;update() 오류&quot;);&#xD;
&#xD;
   } finally {&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return result;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68hkbaw7Ee2NaYmjDxeNPA" name="dept" specification="_6pLKkKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68hkbqw7Ee2NaYmjDxeNPA" name="com">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkb6w7Ee2NaYmjDxeNPA" type="_6oWEIKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68hkcKw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   List&lt;Dept> list = new ArrayList&lt;>();&#xD;
   ResultSet rs = null;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      System.out.println(com);&#xD;
      String sql = &quot;SELECT * from company_dept where company_name = ? order by dept_name&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
&#xD;
      pstmt.setString(1, com);&#xD;
      rs = pstmt.executeQuery();&#xD;
&#xD;
      while (rs.next()) {&#xD;
         Dept d = new Dept();&#xD;
         d.setDept_name(rs.getString(1));&#xD;
         d.setCompany_name(rs.getString(2));&#xD;
         list.add(d);&#xD;
&#xD;
      }&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;dept() 오류&quot;);&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return list;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68hkcaw7Ee2NaYmjDxeNPA" name="job" specification="_6pLKlKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68hkcqw7Ee2NaYmjDxeNPA" name="job">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68hkc6w7Ee2NaYmjDxeNPA" type="_6pBZkaw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68hkdKw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   List&lt;Job> list = new ArrayList&lt;>();&#xD;
   ResultSet rs = null;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      String sql = &quot;SELECT * from company_job where company_name = ? order by job_name&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
&#xD;
      pstmt.setString(1, job);&#xD;
      rs = pstmt.executeQuery();&#xD;
&#xD;
      while (rs.next()) {&#xD;
         Job j = new Job();&#xD;
         j.setJob_name(rs.getString(1));&#xD;
         j.setCompany_name(rs.getString(2));&#xD;
         list.add(j);&#xD;
&#xD;
      }&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;dept() 오류&quot;);&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return list;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68hkdaw7Ee2NaYmjDxeNPA" name="all_member_info" specification="_6pLxo6w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68hkdqw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68hkd6w7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   ResultSet rs = null;&#xD;
   List&lt;UserInfo> list = new ArrayList&lt;UserInfo>();&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      String sql = &quot;SELECT * from user_info order by user_state&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      rs = pstmt.executeQuery();&#xD;
&#xD;
      while (rs.next()) {&#xD;
         UserInfo m = new UserInfo();&#xD;
         m.setUSER_ID(rs.getString(&quot;user_id&quot;));&#xD;
         m.setUSER_PASSWORD(rs.getString(&quot;user_password&quot;));&#xD;
         m.setUSER_NAME(rs.getString(&quot;user_name&quot;));&#xD;
         m.setUSER_DEPT(rs.getString(&quot;user_dept&quot;));&#xD;
         m.setUSER_JOB(rs.getString(&quot;user_job&quot;));&#xD;
         m.setUSER_EMAIL(rs.getString(&quot;user_email&quot;));&#xD;
         m.setUSER_PHONE(rs.getString(&quot;user_phone&quot;));&#xD;
         m.setUSER_JOIN_DATE(rs.getString(&quot;user_join_date&quot;));&#xD;
         m.setUSER_STATE(rs.getString(&quot;user_state&quot;));&#xD;
         m.setUSER_IS_ADMIN(rs.getInt(&quot;user_is_admin&quot;));&#xD;
         m.setUSER_LASTTIME(rs.getString(&quot;user_lasttime&quot;));&#xD;
&#xD;
         list.add(m);&#xD;
      }&#xD;
&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;dept() 오류&quot;);&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return list;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68iLcKw7Ee2NaYmjDxeNPA" name="isId" specification="_6pMYsKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68iLcaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68iLcqw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>UserInfo m = new UserInfo();&#xD;
   Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   ResultSet rs = null;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      String sql = &quot;SELECT * from user_info where user_id = ?&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      pstmt.setString(1, user_id);&#xD;
      rs = pstmt.executeQuery();&#xD;
      if (rs.next()) {&#xD;
         m = new UserInfo();&#xD;
         m.setUSER_ID(rs.getString(&quot;user_id&quot;));&#xD;
         m.setUSER_PASSWORD(rs.getString(&quot;user_password&quot;));&#xD;
         m.setUSER_JOIN_DATE(rs.getString(&quot;user_join_date&quot;));&#xD;
         m.setUSER_STATE(rs.getString(&quot;user_state&quot;));&#xD;
         m.setUSER_IS_ADMIN(rs.getInt(&quot;user_is_admin&quot;));&#xD;
         m.setUSER_DEPT(rs.getString(&quot;user_dept&quot;));&#xD;
         m.setUSER_JOB(rs.getString(&quot;user_job&quot;));&#xD;
         m.setUSER_EMAIL(rs.getString(&quot;user_email&quot;));&#xD;
         m.setUSER_NAME(rs.getString(&quot;user_name&quot;));&#xD;
         m.setUSER_FAX(rs.getString(&quot;user_fax&quot;));&#xD;
         m.setUSER_PHONE(rs.getString(&quot;user_phone&quot;));&#xD;
         m.setUSER_INTRO(rs.getString(&quot;user_intro&quot;));&#xD;
         m.setUSER_IMG(rs.getString(&quot;user_img&quot;));&#xD;
         m.setUSER_CARD(rs.getString(&quot;user_card&quot;));&#xD;
&#xD;
      }&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;isId() 오류&quot;);&#xD;
&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return m;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68iLc6w7Ee2NaYmjDxeNPA" name="member_status" specification="_6pM_wKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68iLdKw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68iLdaw7Ee2NaYmjDxeNPA" name="state">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
      String sql = &quot;update user_info set user_state = ? WHERE USER_ID = ?&quot;;&#xD;
&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      pstmt.setString(1, state);&#xD;
      pstmt.setString(2, user_id);&#xD;
      pstmt.executeUpdate();&#xD;
      System.out.println(state);&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;member_status() 오류&quot;);&#xD;
   } finally {&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68iLdqw7Ee2NaYmjDxeNPA" name="normal_info" specification="_6pM_w6w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68iLd6w7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68iLeKw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   ResultSet rs = null;&#xD;
   List&lt;UserInfo> normal = new ArrayList&lt;UserInfo>();&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      String sql = &quot;SELECT * from user_info where user_state = 0&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      rs = pstmt.executeQuery();&#xD;
&#xD;
      while (rs.next()) {&#xD;
         UserInfo m = new UserInfo();&#xD;
         m.setUSER_ID(rs.getString(&quot;user_id&quot;));&#xD;
         m.setUSER_PASSWORD(rs.getString(&quot;user_password&quot;));&#xD;
         m.setUSER_NAME(rs.getString(&quot;user_name&quot;));&#xD;
         m.setUSER_DEPT(rs.getString(&quot;user_dept&quot;));&#xD;
         m.setUSER_JOB(rs.getString(&quot;user_job&quot;));&#xD;
         m.setUSER_EMAIL(rs.getString(&quot;user_email&quot;));&#xD;
         m.setUSER_PHONE(rs.getString(&quot;user_phone&quot;));&#xD;
         m.setUSER_JOIN_DATE(rs.getString(&quot;user_join_date&quot;));&#xD;
         m.setUSER_STATE(rs.getString(&quot;user_state&quot;));&#xD;
         m.setUSER_IS_ADMIN(rs.getInt(&quot;user_is_admin&quot;));&#xD;
         m.setUSER_LASTTIME(rs.getString(&quot;user_lasttime&quot;));&#xD;
         normal.add(m);&#xD;
      }&#xD;
&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;normal_info() 오류&quot;);&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return normal;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68iLeaw7Ee2NaYmjDxeNPA" name="wait_info" specification="_6pNm0qw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68iLeqw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68iLe6w7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   ResultSet rs = null;&#xD;
   List&lt;UserInfo> wait = new ArrayList&lt;UserInfo>();&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      String sql = &quot;SELECT * from user_info where user_state = 2&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      rs = pstmt.executeQuery();&#xD;
&#xD;
      while (rs.next()) {&#xD;
         UserInfo m = new UserInfo();&#xD;
         m.setUSER_ID(rs.getString(&quot;user_id&quot;));&#xD;
         m.setUSER_PASSWORD(rs.getString(&quot;user_password&quot;));&#xD;
         m.setUSER_NAME(rs.getString(&quot;user_name&quot;));&#xD;
         m.setUSER_DEPT(rs.getString(&quot;user_dept&quot;));&#xD;
         m.setUSER_JOB(rs.getString(&quot;user_job&quot;));&#xD;
         m.setUSER_EMAIL(rs.getString(&quot;user_email&quot;));&#xD;
         m.setUSER_PHONE(rs.getString(&quot;user_phone&quot;));&#xD;
         m.setUSER_JOIN_DATE(rs.getString(&quot;user_join_date&quot;));&#xD;
         m.setUSER_STATE(rs.getString(&quot;user_state&quot;));&#xD;
         m.setUSER_IS_ADMIN(rs.getInt(&quot;user_is_admin&quot;));&#xD;
         m.setUSER_LASTTIME(rs.getString(&quot;user_lasttime&quot;));&#xD;
         wait.add(m);&#xD;
      }&#xD;
&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;normal_info() 오류&quot;);&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return wait;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68iLfKw7Ee2NaYmjDxeNPA" name="stop_info" specification="_6pON4aw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68iLfaw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68iLfqw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   ResultSet rs = null;&#xD;
   List&lt;UserInfo> stop = new ArrayList&lt;UserInfo>();&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
&#xD;
      String sql = &quot;SELECT * from user_info where user_state = 1&quot;;&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      rs = pstmt.executeQuery();&#xD;
&#xD;
      while (rs.next()) {&#xD;
         UserInfo m = new UserInfo();&#xD;
         m.setUSER_ID(rs.getString(&quot;user_id&quot;));&#xD;
         m.setUSER_PASSWORD(rs.getString(&quot;user_password&quot;));&#xD;
         m.setUSER_NAME(rs.getString(&quot;user_name&quot;));&#xD;
         m.setUSER_DEPT(rs.getString(&quot;user_dept&quot;));&#xD;
         m.setUSER_JOB(rs.getString(&quot;user_job&quot;));&#xD;
         m.setUSER_EMAIL(rs.getString(&quot;user_email&quot;));&#xD;
         m.setUSER_PHONE(rs.getString(&quot;user_phone&quot;));&#xD;
         m.setUSER_JOIN_DATE(rs.getString(&quot;user_join_date&quot;));&#xD;
         m.setUSER_STATE(rs.getString(&quot;user_state&quot;));&#xD;
         m.setUSER_IS_ADMIN(rs.getInt(&quot;user_is_admin&quot;));&#xD;
         m.setUSER_LASTTIME(rs.getString(&quot;user_lasttime&quot;));&#xD;
         stop.add(m);&#xD;
      }&#xD;
&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;normal_info() 오류&quot;);&#xD;
   } finally {&#xD;
      if (rs != null)&#xD;
         try {&#xD;
            rs.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
   return stop;&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68iLf6w7Ee2NaYmjDxeNPA" name="admin_status" specification="_6pON5Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68iygKw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68iygaw7Ee2NaYmjDxeNPA" name="state">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
   PreparedStatement pstmt = null;&#xD;
   try {&#xD;
      con = ds.getConnection();&#xD;
      String sql = &quot;update user_info set user_is_admin = ? WHERE USER_ID = ?&quot;;&#xD;
&#xD;
      pstmt = con.prepareStatement(sql);&#xD;
      pstmt.setString(1, state);&#xD;
      pstmt.setString(2, user_id);&#xD;
      pstmt.executeUpdate();&#xD;
   } catch (Exception e) {&#xD;
      e.printStackTrace();&#xD;
      System.out.println(&quot;admin_status() 오류&quot;);&#xD;
   } finally {&#xD;
      if (pstmt != null)&#xD;
         try {&#xD;
            pstmt.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
      if (con != null)&#xD;
         try {&#xD;
            con.close();&#xD;
         } catch (SQLException ex) {&#xD;
            ex.printStackTrace();&#xD;
         }&#xD;
   }&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6pHgMKw7Ee2NaYmjDxeNPA" name="MypageDAO" method="_68gWQKw7Ee2NaYmjDxeNPA">
              <eAnnotations xmi:id="_6pHgMaw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6pHgMqw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6pHgM6w7Ee2NaYmjDxeNPA" type="_6pGSEKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6pIHQKw7Ee2NaYmjDxeNPA" name="member_info" method="_68gWQqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pIHQaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_65jI4Kw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6pIuUKw7Ee2NaYmjDxeNPA" name="isId" method="_68hkYKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pIuUaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pIuUqw7Ee2NaYmjDxeNPA" name="user_password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pIuU6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pJ8cKw7Ee2NaYmjDxeNPA" name="passwordchange" method="_68hkZKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pJ8caw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pJ8cqw7Ee2NaYmjDxeNPA" name="user_password1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pJ8c6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pKjgKw7Ee2NaYmjDxeNPA" name="update" method="_68hkaKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pKjgaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pKjgqw7Ee2NaYmjDxeNPA" name="change">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pKjg6w7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pKjhKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pLKkKw7Ee2NaYmjDxeNPA" name="dept" method="_68hkbaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pLKkaw7Ee2NaYmjDxeNPA" name="com">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pLKkqw7Ee2NaYmjDxeNPA" type="_6oWEIKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pLKk6w7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pLKlKw7Ee2NaYmjDxeNPA" name="job" method="_68hkcaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pLxoKw7Ee2NaYmjDxeNPA" name="job">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pLxoaw7Ee2NaYmjDxeNPA" type="_6pBZkaw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pLxoqw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pLxo6w7Ee2NaYmjDxeNPA" name="all_member_info" method="_68hkdaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pLxpKw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pLxpaw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pMYsKw7Ee2NaYmjDxeNPA" name="isId" method="_68iLcKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pMYsaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_65jv86w7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6pM_wKw7Ee2NaYmjDxeNPA" name="member_status" method="_68iLc6w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pM_waw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pM_wqw7Ee2NaYmjDxeNPA" name="state">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pM_w6w7Ee2NaYmjDxeNPA" name="normal_info" method="_68iLdqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pNm0Kw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pNm0aw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pNm0qw7Ee2NaYmjDxeNPA" name="wait_info" method="_68iLeaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pNm06w7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pON4Kw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pON4aw7Ee2NaYmjDxeNPA" name="stop_info" method="_68iLfKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pON4qw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pON46w7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6pON5Kw7Ee2NaYmjDxeNPA" name="admin_status" method="_68iLf6w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6pO08Kw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6pO08aw7Ee2NaYmjDxeNPA" name="state">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_65jv8Kw7Ee2NaYmjDxeNPA" name="update" method="_68gWRaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_65jv8aw7Ee2NaYmjDxeNPA" name="m" type="_6oywEKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_65jv8qw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69GMI6w7Ee2NaYmjDxeNPA" name="" memberEnd="_69GMJKw7Ee2NaYmjDxeNPA _67tFAKw7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69GMJKw7Ee2NaYmjDxeNPA" name="" type="_6pGSEKw7Ee2NaYmjDxeNPA" association="_69GMI6w7Ee2NaYmjDxeNPA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_6kkXYKw7Ee2NaYmjDxeNPA" name="action">
          <packagedElement xmi:type="uml:Class" xmi:id="_6oXSQKw7Ee2NaYmjDxeNPA" name="PasswordChangeProcess">
            <interfaceRealization xmi:id="_65L8gKw7Ee2NaYmjDxeNPA" client="_6oXSQKw7Ee2NaYmjDxeNPA" supplier="_6oa8oKw7Ee2NaYmjDxeNPA" contract="_6oa8oKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68aPpqw7Ee2NaYmjDxeNPA" name="execute" specification="_66wCwKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68aPp6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68aPqKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68aPqaw7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
		HttpSession session = request.getSession();&#xD;
		String user_id = (String) session.getAttribute(&quot;id&quot;);&#xD;
		String user_password = request.getParameter(&quot;user_password&quot;);&#xD;
		MypageDAO mydao = new MypageDAO();&#xD;
		int result = mydao.isId(user_id, user_password); // id, password 1차 확인&#xD;
&#xD;
		if (result != 1) {&#xD;
			PrintWriter out = response.getWriter();&#xD;
			out.println(&quot;&lt;script>&quot;);&#xD;
			out.println(&quot;alert('현재 비밀번호가 틀렸습니다.');&quot;);&#xD;
			out.println(&quot;history.back();&quot;);&#xD;
			out.println(&quot;&lt;/script>&quot;);&#xD;
			out.close();&#xD;
			return null;&#xD;
		} else {&#xD;
			String user_password1 = request.getParameter(&quot;user_password1&quot;);&#xD;
			String user_password2 = request.getParameter(&quot;user_password2&quot;);&#xD;
&#xD;
			if (!user_password1.equals(user_password2)) {&#xD;
				PrintWriter out = response.getWriter();&#xD;
				out.println(&quot;&lt;script>&quot;);&#xD;
				out.println(&quot;alert('새로운 비밀번호가 서로 다릅니다.');&quot;);&#xD;
				out.println(&quot;history.back();&quot;);&#xD;
				out.println(&quot;&lt;/script>&quot;);&#xD;
				out.close();&#xD;
				return null;&#xD;
			} else {&#xD;
				if (user_password1.equals(user_password)) {&#xD;
					PrintWriter out = response.getWriter();&#xD;
					out.println(&quot;&lt;script>&quot;);&#xD;
					out.println(&quot;alert('변경할 비밀번호가 현재 비밀번호와 동일합니다.');&quot;);&#xD;
					out.println(&quot;history.back()&quot;);&#xD;
					out.println(&quot;&lt;/script>&quot;);&#xD;
					out.close();&#xD;
					return null;&#xD;
&#xD;
				}&#xD;
&#xD;
				result = mydao.passwordchange(user_id, user_password1);&#xD;
				if (result == 1) {&#xD;
					PrintWriter out = response.getWriter();&#xD;
					out.println(&quot;&lt;script>&quot;);&#xD;
					out.println(&quot;alert('수정되었습니다.');&quot;);&#xD;
					out.println(&quot;location.href='passwordchange.my'&quot;);&#xD;
					out.println(&quot;&lt;/script>&quot;);&#xD;
					out.close();&#xD;
					return null;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66wCwKw7Ee2NaYmjDxeNPA" name="execute" method="_68aPpqw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66wCwaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66wCwqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66wCw6w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oZHcKw7Ee2NaYmjDxeNPA" name="PasswordChangeAction">
            <interfaceRealization xmi:id="_65NKoKw7Ee2NaYmjDxeNPA" client="_6oZHcKw7Ee2NaYmjDxeNPA" supplier="_6oa8oKw7Ee2NaYmjDxeNPA" contract="_6oa8oKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68bdwKw7Ee2NaYmjDxeNPA" name="execute" specification="_66x38Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68bdwaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68bdwqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68bdw6w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
&#xD;
		forward.setPath(&quot;config/passwordchange.jsp&quot;);&#xD;
		forward.setRedirect(false);&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66x38Kw7Ee2NaYmjDxeNPA" name="execute" method="_68bdwKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66x38aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66x38qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66x386w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_6oa8oKw7Ee2NaYmjDxeNPA" name="Action">
            <ownedOperation xmi:id="_66yfAqw7Ee2NaYmjDxeNPA" name="execute" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66yfA6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66yfBKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66yfBaw7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6ocKwKw7Ee2NaYmjDxeNPA" name="ActionForward">
            <ownedAttribute xmi:id="_67fCkKw7Ee2NaYmjDxeNPA" name="redirect">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67fCkaw7Ee2NaYmjDxeNPA" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67fCkqw7Ee2NaYmjDxeNPA" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67fCk6w7Ee2NaYmjDxeNPA" value="null"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_6ocx0Kw7Ee2NaYmjDxeNPA" name="ActionForward">
              <eAnnotations xmi:id="_6ocx0aw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6ocx0qw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6odY4aw7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6od_8Kw7Ee2NaYmjDxeNPA" name="ImgupdateProcess">
            <interfaceRealization xmi:id="_65O_0Kw7Ee2NaYmjDxeNPA" client="_6od_8Kw7Ee2NaYmjDxeNPA" supplier="_6oa8oKw7Ee2NaYmjDxeNPA" contract="_6oa8oKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68bdxKw7Ee2NaYmjDxeNPA" name="execute" specification="_66zGEKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68bdxaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68bdxqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68bdx6w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		String realFolder = &quot;&quot;;&#xD;
		// webapp아래에 꼭 폴더 생성하세요&#xD;
		String saveFolder = &quot;image&quot;;&#xD;
		int fileSize = 5 * 1024 * 1024;&#xD;
		// 실제 저장 경로 지정&#xD;
		ServletContext sc = request.getServletContext();&#xD;
		realFolder = sc.getRealPath(saveFolder);&#xD;
		System.out.println(&quot;realFolder = [&quot; + realFolder + &quot;]&quot;);&#xD;
		try {&#xD;
			MultipartRequest multi = new MultipartRequest(request, realFolder, fileSize, &quot;utf-8&quot;,&#xD;
					new DefaultFileRenamePolicy());&#xD;
			String value = multi.getParameter(&quot;value&quot;);&#xD;
			String change = multi.getFilesystemName(value);&#xD;
			String id = multi.getParameter(&quot;user_id&quot;);&#xD;
			System.out.println(value);&#xD;
			// 이미지 교체 진행&#xD;
			CompanyDAO cdao = new CompanyDAO();&#xD;
&#xD;
			if (value.equals(&quot;company_logo&quot;)) {&#xD;
&#xD;
			}&#xD;
&#xD;
			if (change != null) {&#xD;
				change = multi.getFilesystemName(value);&#xD;
			} else if (multi.getParameter(&quot;check&quot;) != &quot;&quot;) {&#xD;
				change = multi.getFilesystemName(&quot;check&quot;);&#xD;
			}&#xD;
&#xD;
			MypageDAO mydao = new MypageDAO();&#xD;
			int result = mydao.update(value, change, id);&#xD;
&#xD;
			response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
			PrintWriter out = response.getWriter();&#xD;
			System.out.println(result);&#xD;
&#xD;
			if (result == 1) {&#xD;
				UserInfo m = mydao.member_info(id);&#xD;
				Company c = cdao.company_info(id);&#xD;
				List&lt;Dept> d = mydao.dept(c.getCompany_name());&#xD;
				List&lt;Job> j = mydao.job(c.getCompany_name());&#xD;
&#xD;
				request.setAttribute(&quot;memberinfo&quot;, m);&#xD;
				request.setAttribute(&quot;dept&quot;, d);&#xD;
				request.setAttribute(&quot;job&quot;, j);&#xD;
				forward.setRedirect(false);&#xD;
				out.println(&quot;&lt;script>&quot;);&#xD;
				out.println(&quot;history.back()&quot;);&#xD;
				out.println(&quot;&lt;/script>&quot;);&#xD;
				out.close();&#xD;
				return null;&#xD;
			} else {&#xD;
				out.println(&quot;&lt;script>&quot;);&#xD;
				out.println(&quot;alert('회원정보 수정에 실패했습니다.');&quot;);&#xD;
				out.println(&quot;history.back()&quot;);&#xD;
				out.println(&quot;&lt;/script>&quot;);&#xD;
				out.close();&#xD;
			}&#xD;
			return null;&#xD;
		} catch (&#xD;
&#xD;
		IOException ex) {&#xD;
			ex.printStackTrace();&#xD;
			forward = new ActionForward();&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			request.setAttribute(&quot;message&quot;, &quot;프로필 사진 업로드 실패입니다.&quot;);&#xD;
			forward.setRedirect(false);&#xD;
			return forward;&#xD;
		} // catch end&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68cE0Kw7Ee2NaYmjDxeNPA" name="dc" specification="_6oenAKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68cE0aw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68cE0qw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String v1 = &quot;&quot;;&#xD;
		switch (value) {&#xD;
		case &quot;user_name&quot;:&#xD;
			v1 = &quot;이름&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_dept&quot;:&#xD;
			v1 = &quot;부서&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_job&quot;:&#xD;
			v1 = &quot;직함&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_email&quot;:&#xD;
			v1 = &quot;이메일 주소&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_fax&quot;:&#xD;
			v1 = &quot;팩스&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_phone&quot;:&#xD;
			v1 = &quot;연락처&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_intro&quot;:&#xD;
			v1 = &quot;자기소개&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_img&quot;:&#xD;
			v1 = &quot;프로필 사진&quot;;&#xD;
			return v1;&#xD;
		case &quot;user_card&quot;:&#xD;
			v1 = &quot;명함&quot;;&#xD;
			return v1;&#xD;
		}&#xD;
		return v1;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6oenAKw7Ee2NaYmjDxeNPA" name="dc" method="_68cE0Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6oenAaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6of1IKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_66zGEKw7Ee2NaYmjDxeNPA" name="execute" method="_68bdxKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66zGEaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66zGEqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66zGE6w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6ohDQKw7Ee2NaYmjDxeNPA" name="MypageAction">
            <interfaceRealization xmi:id="_65Pm4Kw7Ee2NaYmjDxeNPA" client="_6ohDQKw7Ee2NaYmjDxeNPA" supplier="_6oa8oKw7Ee2NaYmjDxeNPA" contract="_6oa8oKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68cE06w7Ee2NaYmjDxeNPA" name="execute" specification="_6607QKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68cE1Kw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68cE1aw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68cE1qw7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
		ActionForward forward = new ActionForward();&#xD;
		String user_id = request.getParameter(&quot;user_id&quot;);&#xD;
		String user_password = request.getParameter(&quot;user_password&quot;);&#xD;
&#xD;
		MypageDAO mydao = new MypageDAO();&#xD;
		CompanyDAO cdao = new CompanyDAO();&#xD;
&#xD;
		if (user_password != null) {&#xD;
			int result = mydao.isId(user_id, user_password); // id, password 1차 확인&#xD;
			if (result == 1) {&#xD;
				UserInfo m = mydao.member_info(user_id);&#xD;
				Company c = cdao.company_info(user_id);&#xD;
				List&lt;Dept> d = mydao.dept(c.getCompany_name());&#xD;
				List&lt;Job> j = mydao.job(c.getCompany_name());&#xD;
&#xD;
				request.setAttribute(&quot;memberinfo&quot;, m);&#xD;
				request.setAttribute(&quot;dept&quot;, d);&#xD;
				request.setAttribute(&quot;job&quot;, j);&#xD;
				forward.setRedirect(false);&#xD;
				forward.setPath(&quot;mypage/mypage.jsp&quot;);&#xD;
				return forward;&#xD;
		      } else {&#xD;
		            PrintWriter out = response.getWriter();&#xD;
		            out.println(&quot;&lt;script>&quot;);&#xD;
		            out.println(&quot;alert('비밀번호가 틀렸습니다.');&quot;);&#xD;
		            out.println(&quot;history.back();&quot;);&#xD;
		            out.println(&quot;&lt;/script>&quot;);&#xD;
		            out.close();&#xD;
		            return null;&#xD;
		     }&#xD;
		} else {&#xD;
			UserInfo m = mydao.member_info(user_id);&#xD;
			Company c = cdao.company_info(user_id);&#xD;
			List&lt;Dept> d = mydao.dept(c.getCompany_name());&#xD;
			List&lt;Job> j = mydao.job(c.getCompany_name());&#xD;
			request.setAttribute(&quot;memberinfo&quot;, m);&#xD;
			request.setAttribute(&quot;dept&quot;, d);&#xD;
			request.setAttribute(&quot;job&quot;, j);&#xD;
			forward.setRedirect(false);&#xD;
			forward.setPath(&quot;mypage/mypage.jsp&quot;);&#xD;
			return forward;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6607QKw7Ee2NaYmjDxeNPA" name="execute" method="_68cE06w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6607Qaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_6607Qqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_6607Q6w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oi4cKw7Ee2NaYmjDxeNPA" name="MypageCheckAction">
            <interfaceRealization xmi:id="_65Q1AKw7Ee2NaYmjDxeNPA" client="_6oi4cKw7Ee2NaYmjDxeNPA" supplier="_6oa8oKw7Ee2NaYmjDxeNPA" contract="_6oa8oKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68cr4Kw7Ee2NaYmjDxeNPA" name="execute" specification="_662JYKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68cr4aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68cr4qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68cr46w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
		HttpSession session = request.getSession();&#xD;
		String user_id = (String) session.getAttribute(&quot;id&quot;);&#xD;
&#xD;
		MypageDAO mydao = new MypageDAO();&#xD;
		UserInfo m = mydao.member_info(user_id);&#xD;
		&#xD;
		forward.setRedirect(false);&#xD;
		forward.setPath(&quot;mypage/mypagecheck.jsp&quot;);&#xD;
		request.setAttribute(&quot;memberinfo&quot;, m);&#xD;
		return forward;&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_662JYKw7Ee2NaYmjDxeNPA" name="execute" method="_68cr4Kw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_662JYaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_662JYqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_662JY6w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6olUsKw7Ee2NaYmjDxeNPA" name="MypageDAO">
            <ownedAttribute xmi:id="_67fpoKw7Ee2NaYmjDxeNPA" name="ds" visibility="private" type="_65VGcaw7Ee2NaYmjDxeNPA" association="_69EW8Kw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68cr5Kw7Ee2NaYmjDxeNPA" name="MypageDAO" specification="_6ol7wKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68cr5aw7Ee2NaYmjDxeNPA" type="_6olUsKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>try {&#xD;
			Context init = new InitialContext();&#xD;
			ds = (DataSource) init.lookup(&quot;java:comp/env/jdbc/OracleDB&quot;);&#xD;
		} catch (Exception ex) {&#xD;
			System.out.println(&quot;DB연결 실패 : &quot; + ex);&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68cr5qw7Ee2NaYmjDxeNPA" name="member_info" specification="_6omi06w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68cr56w7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68cr6Kw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>UserInfo m = new UserInfo();&#xD;
		Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			pstmt = con.prepareStatement(&quot;select * from user_info user_id = ?&quot;);&#xD;
			pstmt.setString(1, user_id);&#xD;
			rs = pstmt.executeQuery();&#xD;
			if (rs.next()) {&#xD;
				m = new UserInfo();&#xD;
				m.setUSER_ID(rs.getString(&quot;user_id&quot;));&#xD;
				m.setUSER_PASSWORD(rs.getString(&quot;user_password&quot;));&#xD;
				m.setUSER_DEPT(rs.getString(&quot;user_dept&quot;));&#xD;
				m.setUSER_JOB(rs.getString(&quot;user_job&quot;));&#xD;
				m.setUSER_EMAIL(rs.getString(&quot;user_email&quot;));&#xD;
				m.setUSER_NAME(rs.getString(&quot;user_name&quot;));&#xD;
				m.setUSER_FAX(rs.getString(&quot;user_fax&quot;));&#xD;
				m.setUSER_PHONE(rs.getString(&quot;user_phone&quot;));&#xD;
				m.setUSER_INTRO(rs.getString(&quot;user_intro&quot;));&#xD;
				m.setUSER_IMG(rs.getString(&quot;user_img&quot;));&#xD;
				m.setUSER_CARD(rs.getString(&quot;user_card&quot;));&#xD;
			}&#xD;
		} catch (Exception ex) {&#xD;
			ex.printStackTrace();&#xD;
			System.out.println(&quot;member_info() 에러 : &quot; + ex);&#xD;
		} finally {&#xD;
			if (rs != null)&#xD;
				try {&#xD;
					rs.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return m;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68dS8Kw7Ee2NaYmjDxeNPA" name="update" specification="_65WUkKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68dS8aw7Ee2NaYmjDxeNPA" name="m" type="_6oywEKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68dS8qw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		int result = 0;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			String sql = &quot;update user_info &quot;&#xD;
					+ &quot;	  set user_name=?, user_dept=?, user_job=?, user_email=?, user_fax=?, user_phone=?, user_intro=?, user_img=?, user_card=? &quot;&#xD;
					+ &quot;	  where USER_ID=?&quot;;&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, m.getUSER_NAME());&#xD;
			pstmt.setString(2, m.getUSER_DEPT());&#xD;
			pstmt.setString(3, m.getUSER_JOB());&#xD;
			pstmt.setString(4, m.getUSER_EMAIL());&#xD;
			pstmt.setString(5, m.getUSER_FAX());&#xD;
			pstmt.setString(6, m.getUSER_PHONE());&#xD;
			pstmt.setString(7, m.getUSER_INTRO());&#xD;
			pstmt.setString(8, m.getUSER_IMG());&#xD;
			pstmt.setString(9, m.getUSER_CARD());&#xD;
			pstmt.setString(10, m.getUSER_ID());&#xD;
			result = pstmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;update() 오류&quot;);&#xD;
&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68dS86w7Ee2NaYmjDxeNPA" name="isId" specification="_6onw8Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68dS9Kw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68dS9aw7Ee2NaYmjDxeNPA" name="user_password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68dS9qw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		int result = -1; // 패스워드가 다릅니다.&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
&#xD;
			String sql = &quot;SELECT user_id, user_password from user_info where user_id = ? and user_password = ?&quot;;&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
&#xD;
			pstmt.setString(1, user_id);&#xD;
			pstmt.setString(2, user_password);&#xD;
			rs = pstmt.executeQuery();&#xD;
&#xD;
			while (rs.next()) {&#xD;
				if (rs.getString(2).equals(user_password)) {&#xD;
					result = 1; // 아이디와 비밀번호 일치&#xD;
				} else {&#xD;
					result = 0; // 비밀번호가 일치하지 않는 경우.&#xD;
				}&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;isId() 오류&quot;);&#xD;
&#xD;
		} finally {&#xD;
			if (rs != null)&#xD;
				try {&#xD;
					rs.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68dS96w7Ee2NaYmjDxeNPA" name="passwordchange" specification="_6ooYAKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68dS-Kw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68dS-aw7Ee2NaYmjDxeNPA" name="user_password1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68dS-qw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection con = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		int result = 0;&#xD;
		try {&#xD;
			con = ds.getConnection();&#xD;
			String sql = &quot;update user_info set user_password = ? WHERE USER_ID = ?&quot;;&#xD;
&#xD;
			pstmt = con.prepareStatement(sql);&#xD;
			pstmt.setString(1, user_password1);&#xD;
			pstmt.setString(2, user_id);&#xD;
			result = pstmt.executeUpdate();&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
			System.out.println(&quot;passwordchange() 오류&quot;);&#xD;
		} finally {&#xD;
			if (pstmt != null)&#xD;
				try {&#xD;
					pstmt.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
			if (con != null)&#xD;
				try {&#xD;
					con.close();&#xD;
				} catch (SQLException ex) {&#xD;
					ex.printStackTrace();&#xD;
				}&#xD;
		}&#xD;
		return result;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6ol7wKw7Ee2NaYmjDxeNPA" name="MypageDAO" method="_68cr5Kw7Ee2NaYmjDxeNPA">
              <eAnnotations xmi:id="_6omi0Kw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6omi0aw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6omi0qw7Ee2NaYmjDxeNPA" type="_6olUsKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6omi06w7Ee2NaYmjDxeNPA" name="member_info" method="_68cr5qw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6omi1Kw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_65Vtgaw7Ee2NaYmjDxeNPA" type="_6oywEKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6onw8Kw7Ee2NaYmjDxeNPA" name="isId" method="_68dS86w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6onw8aw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6onw8qw7Ee2NaYmjDxeNPA" name="user_password">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6onw86w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6ooYAKw7Ee2NaYmjDxeNPA" name="passwordchange" method="_68dS96w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6ooYAaw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6ooYAqw7Ee2NaYmjDxeNPA" name="user_password1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6ooYA6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_65WUkKw7Ee2NaYmjDxeNPA" name="update" method="_68dS8Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_65WUkaw7Ee2NaYmjDxeNPA" name="m" type="_6oywEKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_65WUkqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6opmIKw7Ee2NaYmjDxeNPA" name="MypageFrontController">
            <generalization xmi:id="_6ospcKw7Ee2NaYmjDxeNPA" general="_6mwvwKw7Ee2NaYmjDxeNPA"/>
            <ownedAttribute xmi:id="_67gQsKw7Ee2NaYmjDxeNPA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67gQsaw7Ee2NaYmjDxeNPA" value="1L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68d6AKw7Ee2NaYmjDxeNPA" name="doProcess" specification="_664loKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68d6Aaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68d6Aqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>/*&#xD;
		 * 요청된 전체 URL중에서 포트 번호 다음 부터 마지막 문자열까지 반환됩니다. 예) contextPath가 &quot;/JspProject&quot;인 경우&#xD;
		 * http://localhost:8088/JspProject/login.net로 요청하면 getRequestURI()는&#xD;
		 * &quot;/JspProject/login.net&quot; 반환됩니다.&#xD;
		 */&#xD;
		String RequestURI = request.getRequestURI();&#xD;
		System.out.println(&quot;RequestURI = &quot; + RequestURI);&#xD;
&#xD;
		// getContextPath() : 컨텍스트 경로가 반환됩니다.&#xD;
		// contextPath는 &quot;/JspProject&quot;가 반환됩니다.&#xD;
		String contextPath = request.getContextPath();&#xD;
		System.out.println(&quot;contextPath = &quot; + contextPath);&#xD;
&#xD;
		// RequestURI에서 컨텍스트 경로 길이 값의 인덱스 위치의 문자부터 마지막 위치 문자까지 추출합니다.&#xD;
		// command는 &quot;/login.net&quot; 반환됩니다.&#xD;
		String command = RequestURI.substring(contextPath.length());&#xD;
		System.out.println(&quot;command = &quot; + command);&#xD;
&#xD;
		// 초기화&#xD;
		ActionForward forward = null;&#xD;
		Action action = null;&#xD;
&#xD;
		switch (command) {&#xD;
		case &quot;/mypagecheck.my&quot;:&#xD;
			action = new MypageCheckAction();&#xD;
			break;&#xD;
		case &quot;/mypage.my&quot;:&#xD;
			action = new MypageAction();&#xD;
			break;&#xD;
		case &quot;/updateProcess.my&quot;:&#xD;
			action = new MypageUpdateProcessAction();&#xD;
			break;&#xD;
		case &quot;/passwordchange.my&quot;:&#xD;
			action = new PasswordChangeAction();&#xD;
			break;&#xD;
		case &quot;/passwordchangeProcess.my&quot;:&#xD;
			action = new PasswordChangeProcess();&#xD;
			break;&#xD;
		case &quot;/notify.my&quot;:&#xD;
			action = new NotifyAction();&#xD;
			break;&#xD;
		case &quot;/ImgupdateProcess.my&quot;:&#xD;
			action = new ImgupdateProcess();&#xD;
			break;&#xD;
		case &quot;/myPageDetail.my&quot;:&#xD;
			action = new myPageDetailAction();&#xD;
			break;&#xD;
		&#xD;
		} // switch end&#xD;
		forward = action.execute(request, response);&#xD;
&#xD;
		if (forward != null) {&#xD;
			if (forward.isRedirect()) {&#xD;
				response.sendRedirect(forward.getPath());&#xD;
			} else {&#xD;
				RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getPath());&#xD;
				dispatcher.forward(request, response);&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68d6A6w7Ee2NaYmjDxeNPA" name="doGet" specification="_665MsKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68d6BKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68d6Baw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>doProcess(request, response);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68d6Bqw7Ee2NaYmjDxeNPA" name="doPost" specification="_665zwKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68d6B6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68d6CKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>request.setCharacterEncoding(&quot;utf-8&quot;);&#xD;
		doProcess(request, response);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_664loKw7Ee2NaYmjDxeNPA" name="doProcess" visibility="protected" method="_68d6AKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_664loaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_664loqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_665MsKw7Ee2NaYmjDxeNPA" name="doGet" visibility="protected" method="_68d6A6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_665Msaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_665Msqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_665zwKw7Ee2NaYmjDxeNPA" name="doPost" visibility="protected" method="_68d6Bqw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_665zwaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_665zwqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6ovFsKw7Ee2NaYmjDxeNPA" name="MypageUpdateProcessAction">
            <interfaceRealization xmi:id="_65Yw0Kw7Ee2NaYmjDxeNPA" client="_6ovFsKw7Ee2NaYmjDxeNPA" supplier="_6oa8oKw7Ee2NaYmjDxeNPA" contract="_6oa8oKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68d6Caw7Ee2NaYmjDxeNPA" name="execute" specification="_666a0Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68d6Cqw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68d6C6w7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68d6DKw7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
&#xD;
   String value = request.getParameter(&quot;value&quot;);&#xD;
   String change = request.getParameter(&quot;val3&quot;);&#xD;
   String id = request.getParameter(&quot;user_id&quot;);&#xD;
&#xD;
   System.out.println(&quot;value=&quot;+value);&#xD;
   System.out.println(&quot;id=&quot;+id);&#xD;
   System.out.println(&quot;change=&quot;+change);&#xD;
   CompanyDAO cdao = new CompanyDAO();&#xD;
&#xD;
   MypageDAO mydao = new MypageDAO();&#xD;
   int result = mydao.update(value, change, id);&#xD;
&#xD;
   response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
   PrintWriter out = response.getWriter();&#xD;
&#xD;
   if (result == 1) {&#xD;
      UserInfo m = mydao.member_info(id);&#xD;
      Company c = cdao.company_info(id);&#xD;
      List&lt;Dept> d = mydao.dept(c.getCompany_name());&#xD;
      List&lt;Job> j = mydao.job(c.getCompany_name());&#xD;
&#xD;
      request.setAttribute(&quot;memberinfo&quot;, m);&#xD;
      request.setAttribute(&quot;dept&quot;, d);&#xD;
      request.setAttribute(&quot;job&quot;, j);&#xD;
      forward.setRedirect(false);&#xD;
      forward.setPath(&quot;mypage/mypage.jsp&quot;);&#xD;
      return forward;&#xD;
&#xD;
   } else {&#xD;
      out.println(&quot;alert('회원정보 수정에 실패했습니다.');&quot;);&#xD;
      out.println(&quot;history.back()&quot;);&#xD;
   }&#xD;
   out.println(&quot;&lt;/script>&quot;);&#xD;
   out.close();&#xD;
   return null;&#xD;
&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ehEKw7Ee2NaYmjDxeNPA" name="dc" specification="_6ovswKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68ehEaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68ehEqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <language>java</language>
              <body>String v1 = &quot;&quot;;&#xD;
   switch (value) {&#xD;
   case &quot;user_name&quot;:&#xD;
      v1 = &quot;이름&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_dept&quot;:&#xD;
      v1 = &quot;부서&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_job&quot;:&#xD;
      v1 = &quot;직함&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_email&quot;:&#xD;
      v1 = &quot;이메일 주소&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_fax&quot;:&#xD;
      v1 = &quot;팩스&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_phone&quot;:&#xD;
      v1 = &quot;연락처&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_intro&quot;:&#xD;
      v1 = &quot;자기소개&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_img&quot;:&#xD;
      v1 = &quot;프로필 사진&quot;;&#xD;
      return v1;&#xD;
   case &quot;user_card&quot;:&#xD;
      v1 = &quot;명함&quot;;&#xD;
      return v1;&#xD;
   }&#xD;
   return v1;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6ovswKw7Ee2NaYmjDxeNPA" name="dc" method="_68ehEKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6ovswaw7Ee2NaYmjDxeNPA" name="value">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6ovswqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_666a0Kw7Ee2NaYmjDxeNPA" name="execute" method="_68d6Caw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_666a0aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_666a0qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_666a06w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6oxh8Kw7Ee2NaYmjDxeNPA" name="NotifyAction">
            <interfaceRealization xmi:id="_65Z-8Kw7Ee2NaYmjDxeNPA" client="_6oxh8Kw7Ee2NaYmjDxeNPA" supplier="_6oa8oKw7Ee2NaYmjDxeNPA" contract="_6oa8oKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68ehE6w7Ee2NaYmjDxeNPA" name="execute" specification="_667o8Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68ehFKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ehFaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68ehFqw7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
&#xD;
		forward.setPath(&quot;config/notify.jsp&quot;);&#xD;
		forward.setRedirect(false);&#xD;
		return forward;&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_667o8Kw7Ee2NaYmjDxeNPA" name="execute" method="_68ehE6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_667o8aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_667o8qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_667o86w7Ee2NaYmjDxeNPA" type="_6ocKwKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69EW8Kw7Ee2NaYmjDxeNPA" name="" memberEnd="_69EW8aw7Ee2NaYmjDxeNPA _67fpoKw7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69EW8aw7Ee2NaYmjDxeNPA" name="" type="_6olUsKw7Ee2NaYmjDxeNPA" association="_69EW8Kw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6j-hgKw7Ee2NaYmjDxeNPA" name="project">
        <packagedElement xmi:type="uml:Package" xmi:id="_6j_IkKw7Ee2NaYmjDxeNPA" name="db">
          <packagedElement xmi:type="uml:Class" xmi:id="_6pt9IKw7Ee2NaYmjDxeNPA" name="Project">
            <ownedAttribute xmi:id="_670ZwKw7Ee2NaYmjDxeNPA" name="row_num">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_670Zwaw7Ee2NaYmjDxeNPA" name="project_num">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_670Zwqw7Ee2NaYmjDxeNPA" name="project_name">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_671A0Kw7Ee2NaYmjDxeNPA" name="project_state">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_671n4Kw7Ee2NaYmjDxeNPA" name="project_prog">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_671n4aw7Ee2NaYmjDxeNPA" name="project_start">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_671n4qw7Ee2NaYmjDxeNPA" name="project_end">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_671n46w7Ee2NaYmjDxeNPA" name="project_priority">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_671n5Kw7Ee2NaYmjDxeNPA" name="project_partici">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_672O8Kw7Ee2NaYmjDxeNPA" name="project_admin">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_672O8aw7Ee2NaYmjDxeNPA" name="project_admin_img">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_672O8qw7Ee2NaYmjDxeNPA" name="project_parti" type="_640JEKw7Ee2NaYmjDxeNPA" association="_69HaQaw7Ee2NaYmjDxeNPA"/>
            <ownedAttribute xmi:id="_6722AKw7Ee2NaYmjDxeNPA" name="parti_count">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_6722Aaw7Ee2NaYmjDxeNPA" name="project_parti_forModal" type="_640JEKw7Ee2NaYmjDxeNPA" association="_69IoYaw7Ee2NaYmjDxeNPA"/>
            <ownedAttribute xmi:id="_6722A6w7Ee2NaYmjDxeNPA" name="project_bookmark">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68o5IKw7Ee2NaYmjDxeNPA" name="Project" specification="_6pwZYKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68o5Iaw7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>super();&#xD;
		// TODO Auto-generated constructor stub&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6pwZYKw7Ee2NaYmjDxeNPA" name="Project" method="_68o5IKw7Ee2NaYmjDxeNPA">
              <eAnnotations xmi:id="_6pwZYaw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6pwZYqw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6pwZY6w7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6py1oKw7Ee2NaYmjDxeNPA" name="ProjectDAO">
            <ownedAttribute xmi:id="_674EIKw7Ee2NaYmjDxeNPA" name="ds" visibility="private" type="_65VGcaw7Ee2NaYmjDxeNPA" association="_69JPcaw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68o5Iqw7Ee2NaYmjDxeNPA" name="ProjectDAO" specification="_6pzcsKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68o5I6w7Ee2NaYmjDxeNPA" type="_6py1oKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>try {&#xD;
			Context init = new InitialContext();&#xD;
			ds = (DataSource) init.lookup(&quot;java:comp/env/jdbc/OracleDB&quot;);&#xD;
&#xD;
		}catch(Exception ex) {&#xD;
			System.out.println(&quot;DB 연결 실패 : &quot; + ex);&#xD;
		}&#xD;
</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68o5JKw7Ee2NaYmjDxeNPA" name="close" specification="_67LgkKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68o5Jaw7Ee2NaYmjDxeNPA" name="pstmt" type="_65TRQaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68o5Jqw7Ee2NaYmjDxeNPA" name="conn" type="_65SDIKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>if (pstmt != null) {&#xD;
			try {&#xD;
				pstmt.close();&#xD;
			} catch (SQLException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
		}&#xD;
		if (conn != null) {&#xD;
			try {&#xD;
				conn.setAutoCommit(true);&#xD;
				conn.close();&#xD;
			} catch (SQLException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68pgMKw7Ee2NaYmjDxeNPA" name="all_close" specification="_67MusKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68pgMaw7Ee2NaYmjDxeNPA" name="rs" type="_65T4Uaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68pgMqw7Ee2NaYmjDxeNPA" name="pstmt" type="_65TRQaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68pgM6w7Ee2NaYmjDxeNPA" name="conn" type="_65SDIKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>if (rs != null) {&#xD;
			try {&#xD;
				rs.close();&#xD;
			} catch (SQLException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
		}&#xD;
		if (pstmt != null) {&#xD;
			try {&#xD;
				pstmt.close();&#xD;
			} catch (SQLException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
		}&#xD;
		if (conn != null) {&#xD;
			try {&#xD;
				conn.setAutoCommit(true);&#xD;
				conn.close();&#xD;
			} catch (SQLException e) {&#xD;
				// TODO Auto-generated catch block&#xD;
				e.printStackTrace();&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68pgNKw7Ee2NaYmjDxeNPA" name="getListCount" specification="_6p0DwKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68pgNaw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection conn = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		int x = 0;&#xD;
		try {&#xD;
			conn = ds.getConnection();&#xD;
			pstmt = conn.prepareStatement(&quot;select count(*) from project&quot;);&#xD;
			rs = pstmt.executeQuery();&#xD;
			&#xD;
			if(rs.next()) {&#xD;
				x = rs.getInt(1);&#xD;
			}&#xD;
		} catch (Exception ex) {&#xD;
			ex.getStackTrace();&#xD;
			System.out.println(&quot;getListCount() 에러 :&quot; + ex);&#xD;
		} finally {&#xD;
			all_close(rs, pstmt, conn);&#xD;
		}&#xD;
		return x;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68pgNqw7Ee2NaYmjDxeNPA" name="getDayCount" specification="_6p0q0Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68pgN6w7Ee2NaYmjDxeNPA" name="date1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68pgOKw7Ee2NaYmjDxeNPA" name="date2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68pgOaw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>int prog = 0;&#xD;
		&#xD;
	    SimpleDateFormat sdf = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);&#xD;
     Calendar c1 = Calendar.getInstance();&#xD;
     String strToday = sdf.format(c1.getTime());&#xD;
     try {&#xD;
     	Date format1 = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).parse(date1);&#xD;
 	    Date format2 = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).parse(date2);&#xD;
 	    Date todayformat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;).parse(strToday);&#xD;
 	    long diffSec = (format2.getTime() - format1.getTime()) / 1000; //초 차이&#xD;
 	    long diffMin = (format2.getTime() - format1.getTime()) / 60000; //분 차이&#xD;
 	    long diffHor = (format2.getTime() - format1.getTime()) / 3600000; //시 차이&#xD;
 	    long all_Days_diff = diffSec / (24*60*60); //일자수 차이&#xD;
 	   &#xD;
 	    long today_diff_sec = (format2.getTime() - todayformat.getTime()) / 1000;&#xD;
 	    long today_diff = today_diff_sec / (24*60*60);&#xD;
 			        		&#xD;
 	    double all_days = all_Days_diff;&#xD;
 	    double today =  today_diff;&#xD;
 	    prog = 100-(int)((today / all_days)*100 );&#xD;
     } catch (Exception e) {&#xD;
     	e.printStackTrace();&#xD;
     }&#xD;
	   &#xD;
	   &#xD;
	    &#xD;
	    return prog;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68pgOqw7Ee2NaYmjDxeNPA" name="getDeadLineProjects" specification="_6p1R4Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68pgO6w7Ee2NaYmjDxeNPA" name="page">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68pgPKw7Ee2NaYmjDxeNPA" name="limit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68pgPaw7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68pgPqw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection conn = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		&#xD;
		String project_List_Sql = &quot;SELECT PR.*,U.USER_IMG FROM ( SELECT * FROM (SELECT ROWNUM,P.* FROM (SELECT * FROM PROJECT ORDER BY PROJECT_END)P &quot;&#xD;
								+ &quot;                WHERE ROWNUM &lt;= ?) WHERE ROWNUM >= ? AND ROWNUM &lt;= ? AND PROJECT_END &lt; SYSDATE  )PR &quot;&#xD;
								+ &quot;INNER JOIN USER_INFO U &quot;&#xD;
								+ &quot;ON PR.PROJECT_ADMIN = U.USER_ID &quot;;&#xD;
		&#xD;
		List&lt;Project> list = new ArrayList&lt;Project>();&#xD;
		int startrow = (page -1 ) * limit + 1;&#xD;
		int endrow = startrow + limit -1;&#xD;
		try {&#xD;
			conn = ds.getConnection();&#xD;
			pstmt = conn.prepareStatement(project_List_Sql);&#xD;
			pstmt.setInt(1, endrow);&#xD;
			pstmt.setInt(2,startrow);&#xD;
			pstmt.setInt(3, endrow);&#xD;
			rs = pstmt.executeQuery();&#xD;
			&#xD;
			while(rs.next()) {&#xD;
				Project pro = new Project();&#xD;
				pro.setRow_num(rs.getInt(1));&#xD;
				pro.setProject_num(rs.getInt(2));&#xD;
				pro.setProject_name(rs.getString(3));&#xD;
				pro.setProject_state(rs.getString(4));&#xD;
				pro.setProject_prog(100);&#xD;
				pro.setProject_start(rs.getString(6));&#xD;
				pro.setProject_end(rs.getString(7));&#xD;
				pro.setProject_priority(rs.getString(8));&#xD;
				pro.setProject_admin(rs.getString(&quot;project_admin&quot;));&#xD;
				pro.setProject_bookmark(rs.getString(11));&#xD;
				ArrayList&lt;Project_User> user_parti = getParticipants(rs.getInt(2));&#xD;
				pro.setProject_parti(user_parti);&#xD;
				pro.setProject_admin_img(rs.getString(&quot;user_img&quot;));&#xD;
				&#xD;
				list.add(pro);&#xD;
			}&#xD;
&#xD;
		} catch (Exception ex) {&#xD;
			ex.printStackTrace();&#xD;
			System.out.println(&quot;getProjectList() : 에러발생&quot; + ex);&#xD;
		} finally {&#xD;
			all_close(rs, pstmt, conn);&#xD;
		}&#xD;
		&#xD;
		return list;&#xD;
&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68qHQKw7Ee2NaYmjDxeNPA" name="getProjectList" specification="_6p148Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68qHQaw7Ee2NaYmjDxeNPA" name="page">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68qHQqw7Ee2NaYmjDxeNPA" name="limit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68qHQ6w7Ee2NaYmjDxeNPA" name="logingID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68qHRKw7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68qHRaw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection conn = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		String id =  logingID;&#xD;
		int isAdmin = getIsAdmin(id);&#xD;
		String project_List_Sql = &quot;&quot;;&#xD;
		if(isAdmin == 1) {&#xD;
			project_List_Sql = &quot;SELECT PR.*, U.USER_IMG FROM ( SELECT * FROM &quot;&#xD;
					+ &quot;    (SELECT ROWNUM,P.* FROM (SELECT * FROM PROJECT ORDER BY PROJECT_END)P &quot;&#xD;
					+ &quot;     WHERE ROWNUM &lt;= ?) &quot;&#xD;
					+ &quot;WHERE ROWNUM >= ? &quot;&#xD;
					+ &quot;AND ROWNUM &lt;= ? &quot;&#xD;
					+ &quot;AND PROJECT_END > SYSDATE &quot;&#xD;
					+ &quot;OR PROJECT_END IS NULL )PR &quot;&#xD;
					+ &quot;INNER JOIN USER_INFO U &quot;&#xD;
					+ &quot;ON PR.PROJECT_ADMIN = U.USER_ID &quot;;&#xD;
		} else {&#xD;
			project_List_Sql = &quot;SELECT* FROM( SELECT PR.*, U.USER_IMG FROM ( SELECT * FROM &quot;&#xD;
					+ &quot;    (SELECT ROWNUM,P.* FROM (SELECT * FROM PROJECT ORDER BY PROJECT_END)P &quot;&#xD;
					+ &quot;     WHERE ROWNUM &lt;= ?) &quot;&#xD;
					+ &quot;WHERE ROWNUM >= ? &quot;&#xD;
					+ &quot;AND ROWNUM &lt;= ? &quot;&#xD;
					+ &quot;AND PROJECT_END > SYSDATE &quot;&#xD;
					+ &quot;OR PROJECT_END IS NULL )PR &quot;&#xD;
					+ &quot;INNER JOIN USER_INFO U &quot;&#xD;
					+ &quot;ON PR.PROJECT_ADMIN = U.USER_ID ) WHERE PROJECT_NUM IN (SELECT DISTINCT(PROJECT_NUM) FROM PROJECT_USER WHERE USER_ID LIKE ?) &quot;;&#xD;
					&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
		List&lt;Project> list = new ArrayList&lt;Project>();&#xD;
		List&lt;Project> dead_list = new ArrayList&lt;Project>();&#xD;
		&#xD;
		int startrow = (page -1 ) * limit + 1;&#xD;
		int endrow = startrow + limit -1;&#xD;
		try {&#xD;
			conn = ds.getConnection();&#xD;
			pstmt = conn.prepareStatement(project_List_Sql);&#xD;
			pstmt.setInt(1, endrow);&#xD;
			pstmt.setInt(2,startrow);&#xD;
			pstmt.setInt(3, endrow);&#xD;
			if(isAdmin == 0 ) {&#xD;
				pstmt.setString(4, id);&#xD;
			}&#xD;
			rs = pstmt.executeQuery();&#xD;
			&#xD;
			while(rs.next()) {&#xD;
				Project pro = new Project();&#xD;
				pro.setRow_num(rs.getInt(1));&#xD;
				pro.setProject_num(rs.getInt(2));&#xD;
				pro.setProject_name(rs.getString(3));&#xD;
				pro.setProject_state(rs.getString(4));&#xD;
				int prog = 0;&#xD;
				if(rs.getString(7) != null ) {&#xD;
					String d1 = rs.getString(6);&#xD;
					String d1s = d1.substring(0,10);&#xD;
					String date1 = d1s;&#xD;
				    String date2 = rs.getString(7).substring(0,10); //날짜2&#xD;
				    prog = getDayCount(date1, date2);&#xD;
					pro.setProject_prog(prog);&#xD;
				} else {&#xD;
					pro.setProject_prog(1);&#xD;
				}&#xD;
				&#xD;
				pro.setProject_start(rs.getString(6));&#xD;
				pro.setProject_end(rs.getString(7));&#xD;
				pro.setProject_priority(rs.getString(8));&#xD;
				pro.setProject_admin(rs.getString(&quot;project_admin&quot;));&#xD;
				pro.setProject_bookmark(rs.getString(11));&#xD;
				&#xD;
				ArrayList&lt;Project_User> user_parti = getParticipants(rs.getInt(2));&#xD;
				&#xD;
			&#xD;
				ArrayList&lt;Project_User> modal = getParticipants(rs.getInt(2));&#xD;
				int modalcount = getModalCount(rs.getInt(2));&#xD;
				for(Project_User pu : modal ) {&#xD;
					String s = pu.getUSER_IMG();&#xD;
					System.out.println(&quot;modal : &quot; + s);&#xD;
				}&#xD;
				System.out.println( &quot;===&quot;);&#xD;
				&#xD;
				pro.setProject_parti(user_parti);&#xD;
				pro.setParti_count(modalcount);&#xD;
				pro.setProject_parti_forModal(modal);&#xD;
				pro.setProject_admin_img(rs.getString(&quot;user_img&quot;));&#xD;
				list.add(pro);&#xD;
				&#xD;
			}&#xD;
			dead_list = getDeadLineProjects(page,limit);&#xD;
			list.addAll(dead_list);&#xD;
&#xD;
		} catch (Exception ex) {&#xD;
			ex.printStackTrace();&#xD;
			System.out.println(&quot;getProjectList() : 에러발생&quot; + ex);&#xD;
		} finally {&#xD;
			all_close(rs, pstmt, conn);&#xD;
		}&#xD;
		&#xD;
		return list;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68qHRqw7Ee2NaYmjDxeNPA" name="getIsAdmin" specification="_6p2gAKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68qHR6w7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68qHSKw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection conn = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		int isAdmin = 0;&#xD;
		&#xD;
		String sql = &quot;select USER_IS_ADMIN from user_info where user_id like ?&quot;;&#xD;
	&#xD;
		&#xD;
		try {&#xD;
			conn = ds.getConnection();&#xD;
			pstmt = conn.prepareStatement(sql);&#xD;
			pstmt.setString(1, id);&#xD;
		&#xD;
			rs = pstmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				isAdmin = rs.getInt(1);&#xD;
			}&#xD;
			&#xD;
		} catch (Exception ex) {&#xD;
			ex.printStackTrace();&#xD;
			System.out.println(&quot;isAdmin() : 에러발생&quot; + ex);&#xD;
		} finally {&#xD;
			all_close(rs, pstmt, conn);&#xD;
		}&#xD;
		&#xD;
		return isAdmin;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68qHSaw7Ee2NaYmjDxeNPA" name="getModalCount" specification="_6p2gA6w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68qHSqw7Ee2NaYmjDxeNPA" name="pro_num">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68qHS6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>Connection conn = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		int count = 0;&#xD;
		&#xD;
		String participants_Sql = &quot;SELECT COUNT(*) FROM PROJECT_USER P &quot;&#xD;
								+ &quot;INNER JOIN USER_INFO U &quot;&#xD;
								+ &quot;ON P.USER_ID = U.USER_ID &quot;&#xD;
								+ &quot;WHERE PROJECT_NUM = ? &quot;;&#xD;
	&#xD;
		&#xD;
		try {&#xD;
			conn = ds.getConnection();&#xD;
			pstmt = conn.prepareStatement(participants_Sql);&#xD;
			pstmt.setInt(1, pro_num);&#xD;
		&#xD;
			rs = pstmt.executeQuery();&#xD;
			if(rs.next()) {&#xD;
				count = rs.getInt(1);&#xD;
			}&#xD;
			&#xD;
		} catch (Exception ex) {&#xD;
			ex.printStackTrace();&#xD;
			System.out.println(&quot;getProjectList() : 에러발생&quot; + ex);&#xD;
		} finally {&#xD;
			all_close(rs, pstmt, conn);&#xD;
		}&#xD;
		&#xD;
		return count;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68quUKw7Ee2NaYmjDxeNPA" name="getParticipants" specification="_6p3HEKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68quUaw7Ee2NaYmjDxeNPA" name="pro_num">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_68quUqw7Ee2NaYmjDxeNPA" type="_640JEKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>Connection conn = null;&#xD;
		PreparedStatement pstmt = null;&#xD;
		ResultSet rs = null;&#xD;
		ArrayList&lt;Project_User> list = null;&#xD;
		&#xD;
		String participants_Sql = &quot;SELECT P.USER_ID,P.PROJECT_NUM , U.USER_NAME, U.USER_IMG FROM PROJECT_USER P &quot;&#xD;
								+ &quot;INNER JOIN USER_INFO U &quot;&#xD;
								+ &quot;ON P.USER_ID = U.USER_ID &quot;&#xD;
								+ &quot;WHERE PROJECT_NUM = ? &quot;;&#xD;
	&#xD;
		&#xD;
		try {&#xD;
			conn = ds.getConnection();&#xD;
			pstmt = conn.prepareStatement(participants_Sql);&#xD;
			pstmt.setInt(1, pro_num);&#xD;
		&#xD;
			rs = pstmt.executeQuery();&#xD;
			list = new ArrayList&lt;Project_User>();&#xD;
			while(rs.next()) {&#xD;
				Project_User user = new Project_User();&#xD;
				user.setUSER_ID(rs.getString(1));&#xD;
				user.setPROJECT_NUM(rs.getInt(2));&#xD;
				user.setUSER_NAME(rs.getString(3));&#xD;
				user.setUSER_IMG(rs.getString(4));&#xD;
				&#xD;
				list.add(user);&#xD;
			}&#xD;
			&#xD;
		} catch (Exception ex) {&#xD;
			ex.printStackTrace();&#xD;
			System.out.println(&quot;getProjectList() : 에러발생&quot; + ex);&#xD;
		} finally {&#xD;
			all_close(rs, pstmt, conn);&#xD;
		}&#xD;
		&#xD;
		return list;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68quU6w7Ee2NaYmjDxeNPA" name="getDetailProject" specification="_6p4VMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68quVKw7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>return null;&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68quVaw7Ee2NaYmjDxeNPA" name="insert" specification="_65yZcKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68quVqw7Ee2NaYmjDxeNPA" name="p" type="_6pt9IKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68quV6w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <language>java</language>
              <body>//초기변수선언부&#xD;
		        Connection con = null;&#xD;
		        PreparedStatement pstmt = null;&#xD;
		        int result=0;&#xD;
&#xD;
		  try {&#xD;
		     //db객체받아서&#xD;
		     con = ds.getConnection();&#xD;
		     //auto커밋 false&#xD;
		     con.setAutoCommit(false);&#xD;
		     &#xD;
		     //1차 sql문생성&#xD;
		     String sql =   &quot;insert into PROJECT (PROJECT_NUM, PROJECT_NAME, PROJECT_STATE, PROJECT_ADMIN, &quot;            &#xD;
		              +  &quot;                        PROJECT_START, PROJECT_END,PROJECT_priority) &quot;&#xD;
		              +  &quot; values ( NVL((SELECT MAX(PROJECT_NUM)FROM PROJECT)+1,0 ), ?,?,?,?,?,?)&quot;;&#xD;
		     //커넥션 객체 con 에 sql문을 넣어서 pstmt객체 생성 &#xD;
		     pstmt = con.prepareStatement(sql);&#xD;
		     &#xD;
		     //sql 에 ? 부분 값 설정해주기&#xD;
		     int state = Integer.parseInt(p.getProject_state());&#xD;
		     String s_state= &quot;&quot;;&#xD;
		     if(state == 1) {&#xD;
		    	 s_state = &quot;진행중&quot;;&#xD;
		     } else if(state == 0) {&#xD;
		    	 s_state = &quot;없음&quot;;&#xD;
		     }&#xD;
		     &#xD;
		     pstmt.setString(1, p.getProject_name());&#xD;
		     pstmt.setString(2, s_state);&#xD;
		     pstmt.setString(3, p.getProject_admin());&#xD;
		     pstmt.setString(4, p.getProject_start());&#xD;
		     pstmt.setString(5, p.getProject_end());&#xD;
		     pstmt.setString(6, p.getProject_priority());&#xD;
		     &#xD;
		     &#xD;
		     //executeUpdate 메서드 반환값 result에 저장 executeUpdate함수는 변화가 일어난 row개수를 반환합니다 실패시 0 반환&#xD;
		     //예를들어 1개행 insert : 1 / 5개행 insert : 5를반환 저희는 지금 프로젝트 1개를 생성하기때문에 1을 반환합니다&#xD;
		     result = pstmt.executeUpdate(); //성공하면 result 1 실패면 0 인상태&#xD;
		     //한번 실행한 pstmt객체는 close()해서 리소스 반환&#xD;
		     pstmt.close();&#xD;
		     &#xD;
		     //2차 실행할 sql문 작성&#xD;
		     sql = &quot;   insert into PROJECT_USER  &quot;&#xD;
		             + &quot;  values( (select nvl(max(PROJECT_NUM),0)+1 FROM PROJECT) &quot;&#xD;
		             + &quot;        , ? ,  &quot;&#xD;
		             + &quot;      ( SELECT MAX(ROWNUM)+3 FROM PROJECT_USER) ) &quot;;&#xD;
		     &#xD;
		     //2차 sql문 실행해줄 pstmt객체 새로이 생성&#xD;
		     pstmt = con.prepareStatement(sql);&#xD;
		     &#xD;
		     pstmt.setString(1, p.getProject_admin());&#xD;
		     /*&#xD;
		      *  sql 에 ? 부분 값 설정해주시면됩니다&#xD;
		      * &#xD;
		      */&#xD;
		     &#xD;
		    //똑같이 result  에 executeUpdate 반환값 저장해주시고&#xD;
		    //전에 실행한 executeUpdate 의 결과에 현재 executeUpdate 실행결과값을 더해줍니다&#xD;
		    //위의 설명과 마찬가지로 일단은 프로젝트 최초 생성자 한명만 참여자 테이블에 들어가기 때문에 성공시 1개 행 insert 1을 반환합니다&#xD;
		    result += pstmt.executeUpdate();&#xD;
		    &#xD;
		     &#xD;
		        if (result == 2) {&#xD;
		        //2면 둘다 실행이 잘된거니까 삽입완료 커밋하시면됩니다&#xD;
		        //2가 아니면 0,1 둘다 둘중하나는 실패한상황이므로 맞춰서 에러메시지 추적하실수있게하세요!&#xD;
		           System.out.println(&quot;insert 삽입 완료되었습니다.&quot;);&#xD;
		           con.commit();&#xD;
		        } else {&#xD;
		        	System.out.println(&quot;삽입 실패&quot;);&#xD;
		        }&#xD;
		        &#xD;
		        } catch (Exception e) {&#xD;
		           e.printStackTrace();&#xD;
		           &#xD;
		           try {&#xD;
		              con.rollback();&#xD;
		           } catch (SQLException e1) {&#xD;
		                 e1.printStackTrace();&#xD;
		           }&#xD;
		        } finally {&#xD;
		           &#xD;
		           if (pstmt != null)&#xD;
		              try {&#xD;
		                 pstmt.close();&#xD;
		              } catch (SQLException ex) {&#xD;
		              ex.printStackTrace();&#xD;
		              }&#xD;
		           if (con != null)&#xD;
		              try {&#xD;
		                 con.setAutoCommit(true);&#xD;
		                 con.close();&#xD;
		              } catch (Exception ex) {&#xD;
		              ex.printStackTrace();&#xD;
		              }&#xD;
		           }&#xD;
		           return result;      &#xD;
		        </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_6pzcsKw7Ee2NaYmjDxeNPA" name="ProjectDAO" method="_68o5Iqw7Ee2NaYmjDxeNPA">
              <eAnnotations xmi:id="_6pzcsaw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6pzcsqw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6pzcs6w7Ee2NaYmjDxeNPA" type="_6py1oKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6p0DwKw7Ee2NaYmjDxeNPA" name="getListCount" method="_68pgNKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6p0Dwaw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6p0q0Kw7Ee2NaYmjDxeNPA" name="getDayCount" method="_68pgNqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6p0q0aw7Ee2NaYmjDxeNPA" name="date1">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p0q0qw7Ee2NaYmjDxeNPA" name="date2">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p0q06w7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6p1R4Kw7Ee2NaYmjDxeNPA" name="getDeadLineProjects" method="_68pgOqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6p1R4aw7Ee2NaYmjDxeNPA" name="page">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p1R4qw7Ee2NaYmjDxeNPA" name="limit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p1R46w7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6p1R5Kw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6p148Kw7Ee2NaYmjDxeNPA" name="getProjectList" method="_68qHQKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6p148aw7Ee2NaYmjDxeNPA" name="page">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p148qw7Ee2NaYmjDxeNPA" name="limit">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p1486w7Ee2NaYmjDxeNPA" name="logingID">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p149Kw7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6p149aw7Ee2NaYmjDxeNPA" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6p2gAKw7Ee2NaYmjDxeNPA" name="getIsAdmin" visibility="private" method="_68qHRqw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6p2gAaw7Ee2NaYmjDxeNPA" name="id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p2gAqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6p2gA6w7Ee2NaYmjDxeNPA" name="getModalCount" visibility="private" method="_68qHSaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6p2gBKw7Ee2NaYmjDxeNPA" name="pro_num">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_6p2gBaw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_6p3HEKw7Ee2NaYmjDxeNPA" name="getParticipants" visibility="private" method="_68quUKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_6p3HEaw7Ee2NaYmjDxeNPA" name="pro_num">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_67MutKw7Ee2NaYmjDxeNPA" type="_640JEKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_6p4VMKw7Ee2NaYmjDxeNPA" name="getDetailProject" method="_68quU6w7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_65xyYaw7Ee2NaYmjDxeNPA" type="_6pt9IKw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_65yZcKw7Ee2NaYmjDxeNPA" name="insert" method="_68quVaw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_65yZcaw7Ee2NaYmjDxeNPA" name="p" type="_6pt9IKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_65yZcqw7Ee2NaYmjDxeNPA" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_67LgkKw7Ee2NaYmjDxeNPA" name="close" method="_68o5JKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_67Lgkaw7Ee2NaYmjDxeNPA" name="pstmt" type="_65TRQaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67Lgkqw7Ee2NaYmjDxeNPA" name="conn" type="_65SDIKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_67MusKw7Ee2NaYmjDxeNPA" name="all_close" method="_68pgMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_67Musaw7Ee2NaYmjDxeNPA" name="rs" type="_65T4Uaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67Musqw7Ee2NaYmjDxeNPA" name="pstmt" type="_65TRQaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67Mus6w7Ee2NaYmjDxeNPA" name="conn" type="_65SDIKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6p7YgKw7Ee2NaYmjDxeNPA" name="Project_User">
            <ownedAttribute xmi:id="_6755UKw7Ee2NaYmjDxeNPA" name="PROJECT_NUM">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_676gYKw7Ee2NaYmjDxeNPA" name="USER_ID">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_676gYaw7Ee2NaYmjDxeNPA" name="PROJECT_USER_NO">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_676gYqw7Ee2NaYmjDxeNPA" name="USER_NAME">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_677HcKw7Ee2NaYmjDxeNPA" name="USER_IMG">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69HaQaw7Ee2NaYmjDxeNPA" name="" memberEnd="_69HaQqw7Ee2NaYmjDxeNPA _672O8qw7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69HaQqw7Ee2NaYmjDxeNPA" name="" type="_6pt9IKw7Ee2NaYmjDxeNPA" association="_69HaQaw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69IoYaw7Ee2NaYmjDxeNPA" name="" memberEnd="_69IoYqw7Ee2NaYmjDxeNPA _6722Aaw7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69IoYqw7Ee2NaYmjDxeNPA" name="" type="_6pt9IKw7Ee2NaYmjDxeNPA" association="_69IoYaw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_69JPcaw7Ee2NaYmjDxeNPA" name="" memberEnd="_69JPcqw7Ee2NaYmjDxeNPA _674EIKw7Ee2NaYmjDxeNPA">
            <ownedEnd xmi:id="_69JPcqw7Ee2NaYmjDxeNPA" name="" type="_6py1oKw7Ee2NaYmjDxeNPA" association="_69JPcaw7Ee2NaYmjDxeNPA"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_6j_voKw7Ee2NaYmjDxeNPA" name="action">
          <packagedElement xmi:type="uml:Class" xmi:id="_6nWloKw7Ee2NaYmjDxeNPA" name="ProjectAddProcessAction">
            <interfaceRealization xmi:id="_64oi4Kw7Ee2NaYmjDxeNPA" client="_6nWloKw7Ee2NaYmjDxeNPA" supplier="_6pRRMKw7Ee2NaYmjDxeNPA" contract="_6pRRMKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68UJAKw7Ee2NaYmjDxeNPA" name="execute" specification="_66VMAKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68UJAaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68UJAqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68UJA6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>System.out.println(&quot;액션들어옴&quot;);&#xD;
	  System.out.println(request.getParameter(&quot;project_name&quot;));&#xD;
	  System.out.println(request.getParameter(&quot;project_prog&quot;));&#xD;
	  System.out.println(request.getParameter(&quot;project_state&quot;));&#xD;
&#xD;
	  &#xD;
   String project_name = request.getParameter(&quot;project_name&quot;);&#xD;
   String project_state = request.getParameter(&quot;project_state&quot;);&#xD;
   String project_start = request.getParameter(&quot;project_start&quot;);&#xD;
   String project_end = request.getParameter(&quot;project_end&quot;);&#xD;
   String project_priority = request.getParameter(&quot;project_priority&quot;);&#xD;
   String project_admin = request.getParameter(&quot;project_admin&quot;);&#xD;
 &#xD;
   System.out.println(project_priority);&#xD;
   System.out.println(project_start);&#xD;
   &#xD;
   Project p = new Project();&#xD;
   p.setProject_name(project_name);          p.setProject_state(project_state);&#xD;
   p.setProject_start(project_start);        p.setProject_end(project_end);&#xD;
   p.setProject_priority(project_priority);  p.setProject_admin(project_admin); &#xD;
   &#xD;
&#xD;
   ProjectDAO pdao = new ProjectDAO();&#xD;
   int result = pdao.insert(p);&#xD;
    &#xD;
   ActionForward forward = new ActionForward();&#xD;
   System.out.println(result);&#xD;
   //result=0;&#xD;
   if(result==0) {&#xD;
      System.out.println(&quot;프로젝트 등록 실패입니다.&quot;);&#xD;
      forward = new ActionForward();&#xD;
      forward.setRedirect(false);&#xD;
      request.setAttribute(&quot;message&quot;, &quot;프로젝트 등록 실패입니다.&quot;);&#xD;
      forward.setPath(&quot;error/error.jsp&quot;);&#xD;
      return forward;&#xD;
   }&#xD;
   &#xD;
   response.setContentType(&quot;text/html;charset=utf-8&quot;);&#xD;
   PrintWriter out = response.getWriter();&#xD;
   out.println(&quot;&lt;script>&quot;);&#xD;
   if (result == 2) {//삽입이 된 경우&#xD;
      out.println(&quot;alert('프로젝트 등록 성공.');&quot;);&#xD;
     // out.println(&quot;location.href='ProjectAddProcess.po';&quot;);         &#xD;
   } else if (result == -1) {&#xD;
      out.println(&quot;alert('프로젝트명이 중복되었습니다. 다시 입력하세요');&quot;);&#xD;
      //새로고침되어 이전에 입력한 데이터가 나타나지 않습니다.&#xD;
      //out.println(&quot;location.href='join.net';&quot;);&#xD;
      out.println(&quot;history.back();&quot;);//비밀번호를 제외한 다른 데이터는 유지 되어 있습니다.&#xD;
   }&#xD;
   out.println(&quot;&lt;/script>&quot;);&#xD;
   out.close();&#xD;
   &#xD;
   forward.setRedirect(true);&#xD;
   forward.setPath(&quot;ProjectList.po&quot;);&#xD;
   return null;&#xD;
</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66VMAKw7Ee2NaYmjDxeNPA" name="execute" method="_68UJAKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66VMAaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66VMAqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66VMA6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6nz4oKw7Ee2NaYmjDxeNPA" name="ProjectAddAction">
            <interfaceRealization xmi:id="_646PsKw7Ee2NaYmjDxeNPA" client="_6nz4oKw7Ee2NaYmjDxeNPA" supplier="_6pRRMKw7Ee2NaYmjDxeNPA" contract="_6pRRMKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68XMUKw7Ee2NaYmjDxeNPA" name="execute" specification="_66inYKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68XMUaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68XMUqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68XMU6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ActionForward forward = new ActionForward();&#xD;
			forward.setRedirect(false); //주소 변경없이 jsp 페이지의 내용을 보여줍니다.&#xD;
			forward.setPath(&quot;project/Project_add.jsp&quot;);&#xD;
			return forward;		&#xD;
		</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_66inYKw7Ee2NaYmjDxeNPA" name="execute" method="_68XMUKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_66inYaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66inYqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_66inY6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6n1t0Kw7Ee2NaYmjDxeNPA" name="ActionForward">
            <ownedAttribute xmi:id="_67axIKw7Ee2NaYmjDxeNPA" name="redirect">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67axIaw7Ee2NaYmjDxeNPA" value="false"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_67bYMKw7Ee2NaYmjDxeNPA" name="path">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67bYMaw7Ee2NaYmjDxeNPA" value="null"/>
            </ownedAttribute>
            <ownedOperation xmi:id="_6n2U4Kw7Ee2NaYmjDxeNPA" name="ActionForward">
              <eAnnotations xmi:id="_6n278Kw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_6n278aw7Ee2NaYmjDxeNPA" key="create"/>
              </eAnnotations>
              <ownedParameter xmi:id="_6n2786w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_6pRRMKw7Ee2NaYmjDxeNPA" name="Action">
            <ownedOperation xmi:id="_67BIgKw7Ee2NaYmjDxeNPA" name="execute" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_67BIgaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67BIgqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67BIg6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6pmBUKw7Ee2NaYmjDxeNPA" name="ProjectFrontController">
            <generalization xmi:id="_65p2kKw7Ee2NaYmjDxeNPA" general="_6mwvwKw7Ee2NaYmjDxeNPA"/>
            <ownedAttribute xmi:id="_67zLoKw7Ee2NaYmjDxeNPA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_67zysKw7Ee2NaYmjDxeNPA" value="1L"/>
            </ownedAttribute>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68nrAKw7Ee2NaYmjDxeNPA" name="doProcess" specification="_67EL0Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68nrAaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68nrAqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>/*&#xD;
		 	요청된 전체 URL중에서 포트번호 다음부터 마지막 문자열까지 반환&#xD;
		 	contextPath 가 /JspProject인 경우&#xD;
		 	http://localhost:8088/JspProject/login.net 으로 요청하면&#xD;
		 	getRequsetURI 는 /JspProject/login.net를 반환&#xD;
		 */&#xD;
		String requestURI = request.getRequestURI();&#xD;
		System.out.println(&quot;RequestURI = &quot; +requestURI);&#xD;
		&#xD;
		//getContextPath() : 컨텍스트 경로가반환&#xD;
		//contextPath : &quot;JspProject 가 반환&#xD;
		String contextPath = request.getContextPath();&#xD;
		System.out.println(&quot;contextPath = &quot; + contextPath);&#xD;
		&#xD;
		//requestURI 에서 컨텍스트 경로 길이 값의 인덱스 위치의 문자부터 마지막 위치 문자까지 추출&#xD;
		//command : /login.net 반환&#xD;
		String command =  requestURI.substring(contextPath.length());&#xD;
		System.out.println(&quot;command = &quot; + command);&#xD;
		&#xD;
		ActionForward forward = null;&#xD;
		Action action = null;&#xD;
		&#xD;
		&#xD;
		switch(command) {&#xD;
		case &quot;/ProjectList.po&quot; :&#xD;
			action = new ProjectListAction();&#xD;
			break;&#xD;
		case &quot;/ProjectAddProcess.po&quot; :&#xD;
			action = new ProjectAddProcessAction();&#xD;
			break;&#xD;
		case &quot;/getTeamModal.po&quot; :&#xD;
			action = new getTeamModalAction();&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		forward = action.execute(request, response);&#xD;
		System.out.println(&quot;forward : &quot; + forward);&#xD;
		&#xD;
		if(forward != null ) {&#xD;
			if(forward.isRedirect()) {&#xD;
				response.sendRedirect(forward.getPath());&#xD;
			} else {&#xD;
				RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getPath());&#xD;
				dispatcher.forward(request, response);&#xD;
				return;&#xD;
			}&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68nrA6w7Ee2NaYmjDxeNPA" name="doGet" specification="_67Ey4Kw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68nrBKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68nrBaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>doProcess(request, response);&#xD;
	</body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68nrBqw7Ee2NaYmjDxeNPA" name="doPost" specification="_67FZ8aw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68nrB6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68nrCKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <language>java</language>
              <body>request.setCharacterEncoding(&quot;utf-8&quot;);&#xD;
		doProcess(request, response);&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_67EL0Kw7Ee2NaYmjDxeNPA" name="doProcess" visibility="protected" method="_68nrAKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_67EL0aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67EL0qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_67Ey4Kw7Ee2NaYmjDxeNPA" name="doGet" visibility="protected" method="_68nrA6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_67Ey4aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67Ey4qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
            <ownedOperation xmi:id="_67FZ8aw7Ee2NaYmjDxeNPA" name="doPost" visibility="protected" method="_68nrBqw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedComment xmi:id="_682UgKw7Ee2NaYmjDxeNPA">
                <body>@see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</body>
              </ownedComment>
              <ownedParameter xmi:id="_67FZ8qw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67GBAKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6pqSwKw7Ee2NaYmjDxeNPA" name="ProjectListAction">
            <interfaceRealization xmi:id="_65rEsKw7Ee2NaYmjDxeNPA" client="_6pqSwKw7Ee2NaYmjDxeNPA" supplier="_6pRRMKw7Ee2NaYmjDxeNPA" contract="_6pRRMKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68oSEKw7Ee2NaYmjDxeNPA" name="execute" specification="_67GoEKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68oSEaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68oSEqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68oSE6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ProjectDAO prodao = new ProjectDAO();&#xD;
		HttpSession session = request.getSession();&#xD;
		String logingID = (String)session.getAttribute(&quot;id&quot;);&#xD;
		List&lt;Project> projectList = new ArrayList&lt;Project>();&#xD;
&#xD;
		// 로그인 성공시 파라미터 page가 없어요. 그래서 초기값이 필요합니다.&#xD;
		int page = 1; // 보여줄 page&#xD;
		int limit = 15; // 한 페이지에 보여줄 게시판 목록의 수&#xD;
		if (request.getParameter(&quot;page&quot;) != null) {&#xD;
			page = Integer.parseInt(request.getParameter(&quot;page&quot;));&#xD;
		}&#xD;
		System.out.println(&quot;넘어온 페이지 = &quot; + page);&#xD;
&#xD;
		// 추가&#xD;
		if (request.getParameter(&quot;limit&quot;) != null) {&#xD;
			limit = Integer.parseInt(request.getParameter(&quot;limit&quot;));&#xD;
		}&#xD;
		System.out.println(&quot;넘어온 limit = &quot; + limit);&#xD;
&#xD;
		// 총 리스트 수를 받아옵니다.&#xD;
		int listcount = prodao.getListCount();&#xD;
&#xD;
		// 리스트를 받아옵니다.&#xD;
		projectList = prodao.getProjectList(page, limit, logingID);&#xD;
&#xD;
		/*&#xD;
		 * 총 페이지 수 = (DB에 저장된 총 리스트의 수 + 한 페이지에서 보여주는 리스트의 수 - 1)/한 페이지에서 보여주는 리스트의 수 예를&#xD;
		 * 들어 한 페이지에서 보여주는 리스트의 수가 10개인 경우 예1) DB에 저장된 총 리스트의 수가 0이면 총 페이지수는 0페이지 예2)&#xD;
		 * DB에 저장된 총 리스트의 수가 ( 1~10)이면 총 페이지수는 1페이지 예3) DB에 저장된 총 리스트의 수가 (11~20)이면 총&#xD;
		 * 페이지수는 2페이지 예4) DB에 저장된 총 리스트의 수가 (21~30)이면 총 페이지수는 3페이지&#xD;
		 */&#xD;
		int maxpage = (listcount + limit - 1) / limit;&#xD;
		System.out.println(&quot;총 페이지수 = &quot; + maxpage);&#xD;
&#xD;
		/*&#xD;
		 * startpage : 현재 페이지 그룹에서 맨 처음에 표시될 페이지 수를 의미 합니다. ([1], [11], [21] 등) 보여줄 페이지가&#xD;
		 * 30개일 경우 [1][2][3]...[30]까지 다 표시하기에는 너무 많기 떄문에 보통 한 페이지에는 10페이지 정도까지 이동할 수 있게&#xD;
		 * 표시합니다. 예) 페이지 그룹이 아래와 같은 경우 [1][2][3][4][5][6][7][8][9][10] 페이지 그룹의 시작 페이지는&#xD;
		 * startpage에 마지막 페이지는 endpage에 구합니다.&#xD;
		 * &#xD;
		 * 예로 1~10페이지의 내용을 나타낼때는 페이지 그룹은 [1][2][3]..[10]로 표시되고 11~20페이지의 내용을 나타낼때는 페이지&#xD;
		 * 그룹은 [11][12][13..[20]까지 표시됩니다.&#xD;
		 */&#xD;
&#xD;
		int startpage = ((page - 1) / 10) * 10 + 1;&#xD;
		System.out.println(&quot;현재 페이지에 보여줄 시작 페이지 수 : &quot; + startpage);&#xD;
&#xD;
		// endpage : 현재 페이지 그룹에서 보여줄 마지막 페이지 수([10], [20], [30] 등...)&#xD;
		int endpage = startpage + 10 - 1;&#xD;
		System.out.println(&quot;현재 페이지에 보여줄 마지막 페이지 수 : &quot; + endpage);&#xD;
&#xD;
		/*&#xD;
		 * 마지막 그룹의 마지막 페이지 값은 최대 페이지 값입니다. 예로 마지막 페이지 그룹이 [21]~[30]인 경우 시작페이지는&#xD;
		 * 21(startpage=21)와 마지막페이지는 30(endpage=30)이지만 최대 페이지(maxpage)가 25라면&#xD;
		 * [21]~[25]까지만 표시되도록 합니다.&#xD;
		 */&#xD;
&#xD;
		if (endpage > maxpage)&#xD;
			endpage = maxpage;&#xD;
&#xD;
		String state = request.getParameter(&quot;state&quot;);&#xD;
		&#xD;
&#xD;
		if (state == null) {&#xD;
			System.out.println(&quot;state == null&quot;);&#xD;
			request.setAttribute(&quot;page&quot;, page);&#xD;
			request.setAttribute(&quot;maxpage&quot;, maxpage);&#xD;
&#xD;
			// 현재 페이지에 표시할 첫 페이지 수&#xD;
			request.setAttribute(&quot;startpage&quot;, startpage);&#xD;
&#xD;
			// 현재 페이지에 표시할 끝 페이지 수&#xD;
			request.setAttribute(&quot;endpage&quot;, endpage);&#xD;
&#xD;
			request.setAttribute(&quot;listcount&quot;, listcount); // 총 글의 수&#xD;
&#xD;
			// 해당 페이지의 글 목록을 갖고 있는 리스트&#xD;
			request.setAttribute(&quot;projectList&quot;, projectList);&#xD;
&#xD;
			request.setAttribute(&quot;limit&quot;, limit);&#xD;
			request.setAttribute(&quot;state&quot;, &quot;ajax&quot;);&#xD;
			ActionForward forward = new ActionForward();&#xD;
			forward.setRedirect(false);&#xD;
&#xD;
			// 글 목록 페이지로 이동하기 위해 경로를 설정합니다.&#xD;
			forward.setPath(&quot;project/project_List.jsp&quot;);&#xD;
			state = &quot;ajax&quot;;&#xD;
			return forward; // BoardFrontController.java로 리턴합니다.&#xD;
			&#xD;
		} else {&#xD;
			System.out.println(&quot;state==ajax&quot;);&#xD;
&#xD;
			// 위에서 request로 담았던 것을 JsonObject에 담습니다.&#xD;
			JsonObject object = new JsonObject();&#xD;
			object.addProperty(&quot;page&quot;, page);&#xD;
			object.addProperty(&quot;maxpage&quot;, maxpage);&#xD;
			object.addProperty(&quot;startpage&quot;, startpage);&#xD;
			object.addProperty(&quot;endpage&quot;, endpage);&#xD;
			object.addProperty(&quot;listcount&quot;, listcount);&#xD;
			object.addProperty(&quot;limit&quot;, limit);&#xD;
&#xD;
			// JsonObject에 List 형식을 담을 수 있는 addProperty() 존재하지 않습니다.&#xD;
			// void com.google.gson.JsonObject.add(String property, JsonElement value) 메서드를&#xD;
			// 통해서 저장합니다.&#xD;
			// List형식을 JsonLelment로 바꾸어 주어야 object에 저장할 수 있습니다.&#xD;
&#xD;
			// List => JsonElement&#xD;
			System.out.println(object.toString());&#xD;
			JsonElement je = new Gson().toJsonTree(projectList);&#xD;
			System.out.println(&quot;projectList = &quot; + je.toString());&#xD;
			object.add(&quot;projectList&quot;, je);&#xD;
&#xD;
			response.setContentType(&quot;application/json;charset=utf-8&quot;);&#xD;
			response.getWriter().print(object);&#xD;
			System.out.println(object.toString());&#xD;
			return null;&#xD;
		}&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_67GoEKw7Ee2NaYmjDxeNPA" name="execute" method="_68oSEKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_67GoEaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67GoEqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67GoE6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_6psvAKw7Ee2NaYmjDxeNPA" name="getTeamModalAction">
            <interfaceRealization xmi:id="_65sS0Kw7Ee2NaYmjDxeNPA" client="_6psvAKw7Ee2NaYmjDxeNPA" supplier="_6pRRMKw7Ee2NaYmjDxeNPA" contract="_6pRRMKw7Ee2NaYmjDxeNPA"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68oSFKw7Ee2NaYmjDxeNPA" name="execute" specification="_67IdQKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_68oSFaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68oSFqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_68oSF6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
              <language>java</language>
              <body>ProjectDAO pdao = new ProjectDAO();&#xD;
		List&lt;Project_User> list = new ArrayList&lt;Project_User>();&#xD;
		&#xD;
		String a = request.getParameter(&quot;project_num&quot;);&#xD;
		System.out.println(a);&#xD;
			&#xD;
		// 위에서 request로 담았던 것을 JsonObject에 담습니다.&#xD;
//		JsonObject object = new JsonObject();&#xD;
//		object.addProperty(&quot;page&quot;, page);&#xD;
//		object.addProperty(&quot;maxpage&quot;, maxpage);&#xD;
//		object.addProperty(&quot;startpage&quot;, startpage);&#xD;
//		object.addProperty(&quot;endpage&quot;, endpage);&#xD;
//		object.addProperty(&quot;listcount&quot;, listcount);&#xD;
//		object.addProperty(&quot;limit&quot;, limit);&#xD;
//&#xD;
//		// JsonObject에 List 형식을 담을 수 있는 addProperty() 존재하지 않습니다.&#xD;
//		// void com.google.gson.JsonObject.add(String property, JsonElement value) 메서드를&#xD;
//		// 통해서 저장합니다.&#xD;
//		// List형식을 JsonLelment로 바꾸어 주어야 object에 저장할 수 있습니다.&#xD;
//&#xD;
//		// List => JsonElement&#xD;
//		System.out.println(object.toString());&#xD;
//		JsonElement je = new Gson().toJsonTree(projectList);&#xD;
//		System.out.println(&quot;projectList = &quot; + je.toString());&#xD;
//		object.add(&quot;projectList&quot;, je);&#xD;
//&#xD;
//		response.setContentType(&quot;application/json;charset=utf-8&quot;);&#xD;
//		response.getWriter().print(object);&#xD;
//		System.out.println(object.toString());&#xD;
//		return null;&#xD;
		&#xD;
		return null;&#xD;
		&#xD;
	</body>
            </ownedBehavior>
            <ownedOperation xmi:id="_67IdQKw7Ee2NaYmjDxeNPA" name="execute" method="_68oSFKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
              <ownedParameter xmi:id="_67IdQaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67IdQqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              <ownedParameter xmi:id="_67IdQ6w7Ee2NaYmjDxeNPA" type="_6n1t0Kw7Ee2NaYmjDxeNPA" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6kAWsKw7Ee2NaYmjDxeNPA" name="board">
        <packagedElement xmi:type="uml:Package" xmi:id="_6kAWsaw7Ee2NaYmjDxeNPA" name="notice">
          <packagedElement xmi:type="uml:Package" xmi:id="_6kA9wKw7Ee2NaYmjDxeNPA" name="action">
            <packagedElement xmi:type="uml:Interface" xmi:id="_6nXzwKw7Ee2NaYmjDxeNPA" name="Action">
              <ownedOperation xmi:id="_66WaIKw7Ee2NaYmjDxeNPA" name="execute" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66WaIaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66WaIqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66WaI6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nZo8Kw7Ee2NaYmjDxeNPA" name="ActionForward">
              <ownedAttribute xmi:id="_67ZjAKw7Ee2NaYmjDxeNPA" name="redirect">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_67ZjAaw7Ee2NaYmjDxeNPA" value="false"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67ZjAqw7Ee2NaYmjDxeNPA" name="path">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_67ZjA6w7Ee2NaYmjDxeNPA" value="null"/>
              </ownedAttribute>
              <ownedOperation xmi:id="_6naQAKw7Ee2NaYmjDxeNPA" name="ActionForward">
                <eAnnotations xmi:id="_6na3EKw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6na3Eaw7Ee2NaYmjDxeNPA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6nbeIKw7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nbeIaw7Ee2NaYmjDxeNPA" name="NoticeAddAction">
              <interfaceRealization xmi:id="_64qYEKw7Ee2NaYmjDxeNPA" client="_6nbeIaw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68UJBKw7Ee2NaYmjDxeNPA" name="execute" specification="_66XBMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68UJBaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UJBqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UJB6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>NoticeDAO noticedao      =   new NoticeDAO( );&#xD;
   NoticeBean noticedata   =   new NoticeBean();&#xD;
   ActionForward forward   =   new ActionForward();&#xD;
   &#xD;
   String realFolder=&quot;&quot;;&#xD;
   &#xD;
   //webapp아래에 목 폴더 생성하세요&#xD;
   String saveFolder=&quot;board/notice/boardupload&quot;;&#xD;
   &#xD;
   int fileSize=5*1024*1024; //업로드할 파일이 최대 사이즈 입니다.5MB&#xD;
&#xD;
   //실제 저장 경로를 지정합니다.&#xD;
   ServletContext sc = request.getServletContext();&#xD;
   realFolder = sc.getRealPath(saveFolder);&#xD;
   System.out.println(&quot;realFolder= &quot; + realFolder);&#xD;
   boolean result=false;&#xD;
   try{&#xD;
      MultipartRequest multi= new MultipartRequest(&#xD;
            request,&#xD;
            realFolder,&#xD;
            fileSize,&#xD;
            &quot;utf-8&quot;,&#xD;
            new DefaultFileRenamePolicy());&#xD;
      &#xD;
      //BoardBean 객체에 글 능록 몸에서 입력 받은 정보들을 저장합니다.&#xD;
      noticedata.setUser_id(multi.getParameter(&quot;user_id&quot;));&#xD;
      noticedata.setNotice_subject(multi.getParameter(&quot;notice_subject&quot;));&#xD;
      noticedata.setNotice_content(multi.getParameter(&quot;notice_content&quot;));&#xD;
      &#xD;
      //시스템 상에 업로드된 실제 파일명을 얻어 옵니다.&#xD;
      String filename=multi.getFilesystemName(&quot;notice_file&quot;);&#xD;
      noticedata.setNotice_file(filename);&#xD;
      &#xD;
      //글 등록 처리를 위해 DAO의 boardInsert()메서드를 호출합니다.&#xD;
      //글 등록 폼에서 입력한 정보가 저상되어 있는 noticedata객제를 전달합니다.&#xD;
      result=noticedao.noticeInsert(noticedata);&#xD;
      &#xD;
      //글 등록에 실매할 경우 false를 반환합니다.&#xD;
      if(result==false){&#xD;
         System.out.println(&quot;게시판 등록 실패&quot;);&#xD;
         forward.setPath(&quot;error/error.jsp&quot;);&#xD;
         request.setAttribute(&quot;message&quot;, &quot;게시판 등록 실패입니다.&quot;);&#xD;
         forward.setRedirect(false);&#xD;
         return forward;&#xD;
      }&#xD;
      System.out.println(&quot;게시판 등록 완료&quot;);&#xD;
      &#xD;
      //글 등록이 완료되면 글 목록을 보여주기 위해 &quot;BoardList.bo&quot;로 이동합니다.&#xD;
      //Redirect여부를 true로 설정합니다.&#xD;
      forward.setRedirect(true);&#xD;
      forward.setPath(&quot;NoticeList.bon&quot;);//이동할 경로를 지정입니다.&#xD;
      return forward;&#xD;
   }catch(IOException ex) {&#xD;
      ex.printStackTrace( );&#xD;
      forward.setPath(&quot;error/error.jsp&quot;);&#xD;
      request.setAttribute(&quot;message&quot;, &quot;게시판 업로드 실패입니다.&quot;);&#xD;
      forward.setRedirect(false);&#xD;
      return forward;&#xD;
   }//catch end&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66XBMKw7Ee2NaYmjDxeNPA" name="execute" method="_68UJBKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66XBMaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66XBMqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66XBM6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nehcKw7Ee2NaYmjDxeNPA" name="NoticeDeleteAction">
              <interfaceRealization xmi:id="_64sNQKw7Ee2NaYmjDxeNPA" client="_6nehcKw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68UwEKw7Ee2NaYmjDxeNPA" name="execute" specification="_66Y2YKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68UwEaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UwEqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UwE6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>boolean result=false;&#xD;
		&#xD;
		int num=Integer.parseInt(request.getParameter(&quot;num&quot;));&#xD;
		&#xD;
		NoticeDAO noticedao=new NoticeDAO();&#xD;
		//글 삭제 명령을 요청한 사용자가 글을 작성한 사용자인지 판단하기 위해&#xD;
		//입력한 비밀번호와 저장된 비밀번호를 비교하여 일치하면 삭제합니다.&#xD;
		&#xD;
		//비밀번호 일치하는 경우 삭제 처리 합니다.&#xD;
		result=noticedao.noticeDelete(num);&#xD;
		&#xD;
		//삭제 처리 실패한 경우&#xD;
		if(result==false){&#xD;
			System.out.println(&quot;게시판 삭제 실패&quot;);&#xD;
			ActionForward forward = new ActionForward();&#xD;
			forward.setRedirect(false);&#xD;
			request.setAttribute(&quot;message&quot;, &quot;데이터를 삭제하지 못했습니다.&quot;);&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			return forward;&#xD;
		}&#xD;
		//삭제 처리 성공한 경우 - 글 목록 보기 요청을 전송하는 부분입니다.&#xD;
		System.out.println(&quot;게시판 삭제 성공&quot;);&#xD;
		response. setContentType(&quot;text/html; charset=utf-8&quot;);&#xD;
		PrintWriter out=response.getWriter();&#xD;
		out.println(&quot;&lt;script>&quot;);&#xD;
		out.println(&quot;alert('삭제 되었습니다.');&quot;);&#xD;
		out.println(&quot;location.href='NoticeList.bon';&quot;);&#xD;
		out.println(&quot;&lt;/script>&quot;);&#xD;
		out.close();&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66Y2YKw7Ee2NaYmjDxeNPA" name="execute" method="_68UwEKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66Y2Yaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66Y2Yqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66Y2Y6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6ng9sKw7Ee2NaYmjDxeNPA" name="NoticeDetailAction">
              <interfaceRealization xmi:id="_64tbYKw7Ee2NaYmjDxeNPA" client="_6ng9sKw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68UwFKw7Ee2NaYmjDxeNPA" name="execute" specification="_66Zdc6w7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68UwFaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UwFqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UwF6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return">
                  <name xsi:nil="true"/>
                </ownedParameter>
                <language>java</language>
                <body>NoticeDAO noticedao		=	new NoticeDAO();&#xD;
	NoticeBean noticedata	=	new NoticeBean();&#xD;
	//글번호 파라미터 값을 num변수에 저장합니다.&#xD;
	int num=Integer.parseInt(request.getParameter(&quot;num&quot;));&#xD;
	System.out.println(&quot;디테일 : &quot; +num);&#xD;
	&#xD;
	&#xD;
	//내용을 확인할 글의 조회수를 증가시킵니다.&#xD;
	noticedao.setReadCountUpdate(num);&#xD;
	&#xD;
	//글의 내용을 DAO에서 읽은 후 얻은 결과를 boarddata 객체에 저장합니다.&#xD;
	noticedata=noticedao.getDetail(num);&#xD;
	&#xD;
	//boarddata=null;//error테스트를 위한 값 설정&#xD;
	//DAO에서 글의 내용을 읽지 못했을 경우 null을 반환합니다.&#xD;
	if(noticedata == null) {&#xD;
		System.out.println(&quot;상세보기 실패&quot;);&#xD;
		ActionForward forward = new ActionForward();&#xD;
		forward.setRedirect(false);&#xD;
		request.setAttribute(&quot;message&quot;, &quot;데이터를 읽지 못했습니다.&quot;);&#xD;
		forward.setPath(&quot;error/error.jsp&quot;);&#xD;
		return forward;&#xD;
	}&#xD;
	System.out.println(&quot;상세보기 성공&quot;);&#xD;
	&#xD;
	//boarddata 객체를 request 객체에 저장합니다.&#xD;
	request.setAttribute(&quot;noticedata&quot;, noticedata);&#xD;
	&#xD;
	ActionForward forward = new ActionForward();&#xD;
	forward.setRedirect(false);&#xD;
	forward.setPath(&quot;board/notice/view.jsp&quot;); //글 내용 보기 페이지로 이동하기 위해 경로를 설정합니다.&#xD;
	return forward;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66Zdc6w7Ee2NaYmjDxeNPA" name="execute" method="_68UwFKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66ZddKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66Zddaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66aEgKw7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6niy4Kw7Ee2NaYmjDxeNPA" name="NoticeFileDownAction">
              <interfaceRealization xmi:id="_64wesaw7Ee2NaYmjDxeNPA" client="_6niy4Kw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68UwGKw7Ee2NaYmjDxeNPA" name="execute" specification="_66aEgaw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68UwGaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UwGqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68UwG6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>String fileName = request.getParameter(&quot;filename&quot;);&#xD;
		System.out.println(&quot;filename&quot; + fileName);&#xD;
		&#xD;
		String savePath = &quot;board/notice/boardupload&quot;;&#xD;
		&#xD;
		// 서를릿이 실행 환경 성보를 담고 있는 객체를 리던합니다.&#xD;
		ServletContext context = request.getServletContext();&#xD;
		String sDownloadPath = context.getRealPath(savePath);&#xD;
		&#xD;
		// String sFiIePath = sDownIoadPath + &quot;\\“ + fileName;&#xD;
		// &quot;\&quot; 추가하기 위해 &quot;\\&quot; 사용합니다.&#xD;
		String sFilePath = sDownloadPath + &quot;\\&quot; + fileName;&#xD;
		System.out.println(sFilePath);&#xD;
		&#xD;
		byte b[] = new byte[4096];&#xD;
		&#xD;
		// sFilePath에 있는 파일이 MimeTypeg 구해옵니다.&#xD;
		String sMimeType = context.getMimeType(sFilePath);&#xD;
		System.out.println(&quot;sMimeType>>>&quot; + sMimeType);&#xD;
		&#xD;
		if (sMimeType == null)&#xD;
			sMimeType = &quot;application/octet-stream&quot;;&#xD;
		&#xD;
		response.setContentType(sMimeType);&#xD;
		&#xD;
		// - 이 부분이 한글 파일명이 깨지는 것을 빔지해 줍니다.&#xD;
		String sEncoding = new String(fileName.getBytes(&quot;utf-8&quot;), &quot;ISO-8859-1&quot;);&#xD;
		System.out.println(sEncoding);&#xD;
		&#xD;
		/*&#xD;
		 * Content-Disposition: attachment: 브라우저는 해당 Content를&#xD;
		 * 처리이지 않고, 다운로드하게 됩니다.&#xD;
		 */&#xD;
		response.setHeader(&quot;Content-Dispositon&quot;,  &quot;attachment; filename=&quot; + sEncoding);&#xD;
		&#xD;
		try (&#xD;
		// 월 브리우서로이 출력 스트림 생성입니다.&#xD;
		BufferedOutputStream out2 = new BufferedOutputStream(response.getOutputStream());&#xD;
		// sFi1ePath로 지성한 파일에 대한 입력 스트림을 생성입니다.&#xD;
		BufferedInputStream in = new BufferedInputStream(new FileInputStream(sFilePath));&#xD;
		)&#xD;
		{&#xD;
			int numRead;&#xD;
			// read(b, 0, b.length) : 바이트 배열 b의 0번 부터 b.length 크기 만큼 읽어옵니다.&#xD;
			while ((numRead = in.read(b, 0, b.length)) != -1) {//읽을 데이터가 존재하는 경우&#xD;
				// 바이트 배열 b의 0번 부터 numRead크기 만큼 브라우저로 출력&#xD;
				out2.write(b, 0, numRead);&#xD;
			}&#xD;
		} catch (Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66aEgaw7Ee2NaYmjDxeNPA" name="execute" method="_68UwGKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66aEgqw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66arkKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66arkaw7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nkoEKw7Ee2NaYmjDxeNPA" name="NoticeFrontController">
              <generalization xmi:id="_64xs0Kw7Ee2NaYmjDxeNPA" general="_6mwvwKw7Ee2NaYmjDxeNPA"/>
              <ownedAttribute xmi:id="_67aKEKw7Ee2NaYmjDxeNPA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_67aKEaw7Ee2NaYmjDxeNPA" value="1L"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68VXIKw7Ee2NaYmjDxeNPA" name="doProcess" specification="_66bSoKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68VXIaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68VXIqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <language>java</language>
                <body>/*
		 	요청된 전체 URL중에서 포트번호 다음부터 마지막 문자열까지 반환
		 	contextPath 가 /JspProject인 경우
		 	http://localhost:8088/JspProject/login.net 으로 요청하면
		 	getRequsetURI 는 /JspProject/login.net를 반환
		 */
		String requestURI = request.getRequestURI();
		System.out.println(&quot;RequestURI = &quot; +requestURI);
		
		//getContextPath() : 컨텍스트 경로가반환
		//contextPath : &quot;JspProject 가 반환
		String contextPath = request.getContextPath();
		System.out.println(&quot;contextPath = &quot; + contextPath);
		
		//requestURI 에서 컨텍스트 경로 길이 값의 인덱스 위치의 문자부터 마지막 위치 문자까지 추출
		//command : /login.net 반환
		String command =  requestURI.substring(contextPath.length());
		System.out.println(&quot;command = &quot; + command);
		
		ActionForward forward = null;
		Action action = null;
		
		switch(command) {
     case &quot;/NoticeList.bon&quot;:
         action = new NoticeListAction();
         break;
     case &quot;/NoticeWrite.bon&quot;:
         action = new NoticeWriteAction();
         break;
     case &quot;/NoticeAddAction.bon&quot;:
         action = new NoticeAddAction();
         break;
     case &quot;/NoticeDetailAction.bon&quot;:
         action = new NoticeDetailAction();
         break;
     case &quot;/NoticeModifyView.bon&quot;:
         action = new NoticeModifyView();
         break;
     case &quot;/NoticeModifyAction.bon&quot;:
         action = new NoticeModifyAction();
         break;
     case &quot;/NoticeDeleteAction.bon&quot;:
         action = new NoticeDeleteAction();
         break;
     case &quot;/NoticeFileDown.bon&quot;:
         action = new NoticeFileDownAction();
         break;
		}//switch end
		
		forward = action.execute(request, response);
		
		if(forward != null ) {
			if(forward.isRedirect()) {
				response.sendRedirect(forward.getPath());
			} else {
				RequestDispatcher dispatcher = request.getRequestDispatcher(forward.getPath());
				dispatcher.forward(request, response);
			}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68VXI6w7Ee2NaYmjDxeNPA" name="doGet" specification="_66b5sKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68VXJKw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68VXJaw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <language>java</language>
                <body>doProcess(request, response);
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68VXJqw7Ee2NaYmjDxeNPA" name="doPost" specification="_66cgwKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68VXJ6w7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68VXKKw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <language>java</language>
                <body>request.setCharacterEncoding(&quot;utf-8&quot;);
		doProcess(request, response);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66bSoKw7Ee2NaYmjDxeNPA" name="doProcess" visibility="protected" method="_68VXIKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66bSoaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66bSoqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_66b5sKw7Ee2NaYmjDxeNPA" name="doGet" visibility="protected" method="_68VXI6w7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66b5saw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66b5sqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              </ownedOperation>
              <ownedOperation xmi:id="_66cgwKw7Ee2NaYmjDxeNPA" name="doPost" visibility="protected" method="_68VXJqw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedComment xmi:id="_68yDEaw7Ee2NaYmjDxeNPA">
                  <body>@see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</body>
                </ownedComment>
                <ownedParameter xmi:id="_66cgwaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66cgwqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nqusKw7Ee2NaYmjDxeNPA" name="NoticeListAction">
              <interfaceRealization xmi:id="_641XM6w7Ee2NaYmjDxeNPA" client="_6nqusKw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68VXKaw7Ee2NaYmjDxeNPA" name="execute" specification="_66du4Kw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68VXKqw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68VXK6w7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68VXLKw7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>NoticeDAO noticedao = new NoticeDAO();
		HttpSession session = request.getSession(); 
		String  id = (String)session.getAttribute(&quot;id&quot;);
		System.out.println(id);
		
		List&lt;NoticeBean> noticelist = new ArrayList&lt;NoticeBean>();
		
		
		int page = 1; //보여줄 page
		int limit = 10; //한 페이지에 보여줄 게시판 목록의 수
			if (request.getParameter(&quot;page&quot;) != null) {
				page = Integer.parseInt(request.getParameter(&quot;page&quot;));
			}
			System.out.println(&quot;넘어온 페이지 =&quot; + page);
			
			//추가
			if (request.getParameter(&quot;limit&quot;) != null) {
				limit = Integer.parseInt(request.getParameter(&quot;limit&quot;));
			}
			System.out.println(&quot;넘어온 limit =&quot; + limit);
		int listcount = 0;
		int index=-1;
		String search_word=&quot;&quot;;
		
		if ( request.getParameter(&quot;search_word&quot;) == null
				|| request.getParameter(&quot;search_word&quot;).equals(&quot;&quot;)) {
			
			// 총 리스트 수를 받아옵니다.
			listcount = noticedao.getListCount();
		
			// 리스트를 받아옵니다.
			noticelist = noticedao.getNoticeList(page, limit);
		} else { //검색을 클릭한 경우
			System.out.println(&quot;sf : &quot; + request.getParameter(&quot;search_field&quot;));
			index= Integer.parseInt(request.getParameter(&quot;search_field&quot;));
			String[] search_field = new String[] {&quot;notice_subject&quot;, &quot;user_id&quot;};
			search_word = request.getParameter(&quot;search_word&quot;);
			noticelist = noticedao.getNoticeList(search_field[index], search_word, page, limit);
			listcount = noticedao.getListCount(search_field[index], search_word);
		}
		System.out.println(&quot;넘어온 분류 =&quot; + index);
		System.out.println(&quot;넘어온 검색어 =&quot; + search_word);
		
		int maxpage = (listcount + limit - 1) / limit;
		System.out.println(&quot;총 페이지수 =&quot; + maxpage);
		
		int startpage = ((page - 1) / 10) * 10 + 1;
		System.out.println(&quot;현재 페이지에 보여줄 시작 페이지 수 :&quot; + startpage);		
		
		int endpage = startpage + 10 - 1;
		System.out.println(&quot;현재 페이지에 보여줄 마지막 페이지 수 :&quot; + endpage);
		
		if (endpage > maxpage)
			endpage = maxpage;
		
		String state = request.getParameter(&quot;state&quot;);
		
		if (state == null) {
			System.out.println(&quot;state==null&quot;);
			request.setAttribute(&quot;page&quot;, page); // 현재 페이지 수
			request.setAttribute(&quot;maxpage&quot;, maxpage); // 최대 페이지 수
			
			// 현재 페이지에 표시할 첫 페이지 수
			request.setAttribute(&quot;startpage&quot;, startpage);
			
			// 현재 페이지에 표시할 끝 페이지 수
			request.setAttribute(&quot;endpage&quot;, endpage);
			
			request.setAttribute(&quot;listcount&quot;, listcount); // 총 글의 수
			
			// 해당 페이지의 글 목록을 갖고 있는 리스트
			request.setAttribute(&quot;noticelist&quot;, noticelist);
			request.setAttribute(&quot;limit&quot;, limit);
			request.setAttribute(&quot;search_field&quot;, index);
			request.setAttribute(&quot;search_word&quot;, search_word);
			
			ActionForward forward = new ActionForward();
			forward.setRedirect(false);
			
			// 글 목록 페이지로 이동하기 위해 경로를 설정합니다.
			forward.setPath(&quot;board/notice/list.jsp&quot;);
			return forward;
			
		}else {
			System.out.println(&quot;state=ajax&quot;);
			
			//위에서 request로 담았던 것을 JsonObject 에 담습니다.
			JsonObject object = new JsonObject();
			object.addProperty(&quot;page&quot;, page); //{&quot;page&quot;: 년수 page의 값} 형식으로 저장
			object.addProperty(&quot;maxpage&quot;, maxpage);
			object.addProperty(&quot;startpage&quot;, startpage);
			object.addProperty(&quot;endpage&quot;, endpage);
			object.addProperty(&quot;listcount&quot;, listcount);
			object.addProperty(&quot;limit&quot;, limit);
			object.addProperty(&quot;search_field&quot;, index);
			object.addProperty(&quot;search_word&quot;, search_word);
			
			//JsonObject에 List 형식을 담을 수 있느 addProperty() 존재하지 않습니다.
			//void com.google.gson.JsonObject.add(String property, JsonElement value)
			//메서드를 통해서 저장합니다.
			//List형식을 JsonElement로 바꾸어 주어야 object에 저장할 수 있습니다.
			//List => JsonElement
			JsonElement je = new Gson().toJsonTree(noticelist);
			System.out.println(&quot;noticelist=&quot;+je.toString());
			object.add(&quot;noticelist&quot;, je);
			
			response.setContentType(&quot;application/json;charset=utf-8&quot;);
			response.getWriter().print(object);
			System.out.println(object.toString());
			return null;
		}//else end		
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66du4Kw7Ee2NaYmjDxeNPA" name="execute" method="_68VXKaw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66du4aw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66du4qw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66du46w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nsj4Kw7Ee2NaYmjDxeNPA" name="NoticeModifyAction">
              <interfaceRealization xmi:id="_643MYKw7Ee2NaYmjDxeNPA" client="_6nsj4Kw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68WlQKw7Ee2NaYmjDxeNPA" name="execute" specification="_66e9AKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68WlQaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68WlQqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68WlQ6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>NoticeDAO noticedao = new NoticeDAO();&#xD;
		NoticeBean noticedata = new NoticeBean();&#xD;
		ActionForward forward =  new ActionForward();&#xD;
		String realFolder = &quot;&quot;;&#xD;
		&#xD;
		String saveFolder = &quot;board/notice/boardupload&quot;;&#xD;
		&#xD;
		int fileSize = 5 * 1024 * 1024; // 업로드할 파일의 최대 사이즈 입니다.5MB&#xD;
		&#xD;
		// 실제 저장 경로를 지정합니다.&#xD;
		ServletContext sc = request.getServletContext();&#xD;
		realFolder = sc.getRealPath(saveFolder);&#xD;
		System.out.println(&quot;realFolder=&quot; + realFolder);&#xD;
		boolean result = false;&#xD;
		try {&#xD;
			MultipartRequest multi =&#xD;
					new MultipartRequest(request, realFolder, fileSize, &quot;utf-8&quot;,&#xD;
										 new DefaultFileRenamePolicy());&#xD;
			&#xD;
			int num = Integer.parseInt(multi.getParameter(&quot;notice_num&quot;));&#xD;
			&#xD;
			// 비밀번호가 일치하는 경우 수정 내용을 설정합니다.&#xD;
			// BoardBean 객체에 글 등록 폼에서 입력 받은 정보들을 저장합니다.&#xD;
			noticedata.setNotice_num(num);&#xD;
			noticedata.setNotice_subject(multi.getParameter(&quot;notice_subject&quot;));&#xD;
			noticedata.setNotice_content(multi.getParameter(&quot;notice_content&quot;));&#xD;
			&#xD;
			String check = multi.getParameter(&quot;check&quot;);&#xD;
			System.out.println(&quot;check=&quot; + check);&#xD;
			if (check != null) { //파일첨부를 변경하지 않으면&#xD;
				noticedata.setNotice_file(check);&#xD;
			} else {&#xD;
				// 업로드된 파일의 시스템 상에 업로드된 실제 파일명을 얻어 옵니다.&#xD;
				String filename = multi.getFilesystemName(&quot;notice_file&quot;);&#xD;
				noticedata.setNotice_file(filename);&#xD;
			}&#xD;
			&#xD;
			// DAO에서 수정 에서드 호출아여 수정합니다.&#xD;
			result = noticedao.noticeModify(noticedata);&#xD;
			&#xD;
			// 수정에 실패한 경우&#xD;
			if (result == false) {&#xD;
				System.out.println(&quot;게시판 수정 실패&quot;);&#xD;
				forward.setRedirect(false);&#xD;
				request.setAttribute(&quot;message&quot;, &quot;게시판 수정이 되지 않았습니다.&quot;);&#xD;
				forward.setPath(&quot;error/error.jsp&quot;);&#xD;
				return forward;&#xD;
			}&#xD;
			// 수정 성공의 경우&#xD;
			System.out.println(&quot;게시판 수정 완료&quot;);&#xD;
			&#xD;
			forward. setRedirect(true);&#xD;
			// 수정한 글 내용을 보여주기 위해 글 내용 보기 페이지로 이동아기위해 경로를 설정합니다.&#xD;
			forward.setPath(&quot;NoticeDetailAction.bon?num=&quot; + noticedata.getNotice_num());&#xD;
			return forward;&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			request.setAttribute(&quot;message&quot;, &quot;게시판 업로드 중 실패입니다.&quot;);&#xD;
			forward.setRedirect(false);&#xD;
			return forward;&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66e9AKw7Ee2NaYmjDxeNPA" name="execute" method="_68WlQKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66e9Aaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66e9Aqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66e9A6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nvAIKw7Ee2NaYmjDxeNPA" name="NoticeModifyView">
              <interfaceRealization xmi:id="_644agKw7Ee2NaYmjDxeNPA" client="_6nvAIKw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68WlRKw7Ee2NaYmjDxeNPA" name="execute" specification="_66gLIKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68WlRaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68WlRqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68WlR6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>ActionForward forward = new ActionForward();&#xD;
		NoticeDAO noticedao = new NoticeDAO();&#xD;
		NoticeBean noticedata = new NoticeBean();&#xD;
		&#xD;
		//파라미터로 전달받은 수정할 글 번호를 num변수에 저장합니다.&#xD;
		int num=Integer.parseInt(request.getParameter(&quot;num&quot;));&#xD;
	&#xD;
		//글 내용을 불러와서 boarddata객체에 저장합니다.&#xD;
		noticedata=noticedao.getDetail(num);&#xD;
			&#xD;
		//글 내용 불러오기 실패한 경우입니다.&#xD;
		if(noticedata==null) {&#xD;
			System.out.println(&quot;(수정)상세보기 실패&quot;);&#xD;
			forward = new ActionForward();&#xD;
			forward.setRedirect(false);&#xD;
			request.setAttribute(&quot;message&quot;, &quot;게시판 수정 상세 보기 실패입니다.&quot;);&#xD;
			forward.setPath(&quot;error/error.jsp&quot;);&#xD;
			return forward;&#xD;
		}&#xD;
		System.out.println(&quot;(수정)상세보기 성공&quot;);&#xD;
		&#xD;
		//수정 폼 페이지로 이동할 때 원문 글 내용을 보여주기 때문에 boarddata 객체를&#xD;
		//request 객체에 정장합니다.&#xD;
		request.setAttribute(&quot;noticedata&quot;, noticedata);&#xD;
		forward.setRedirect(false);&#xD;
		//글 수정 폼 페이지로 이동하기위해 경로를 설정합니다.&#xD;
		forward.setPath(&quot;board/notice/Modify.jsp&quot;);&#xD;
		return forward;&#xD;
</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66gLIKw7Ee2NaYmjDxeNPA" name="execute" method="_68WlRKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66gLIaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66gLIqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66gLI6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6nxcYKw7Ee2NaYmjDxeNPA" name="NoticeWriteAction">
              <interfaceRealization xmi:id="_645BkKw7Ee2NaYmjDxeNPA" client="_6nxcYKw7Ee2NaYmjDxeNPA" supplier="_6nXzwKw7Ee2NaYmjDxeNPA" contract="_6nXzwKw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68WlSKw7Ee2NaYmjDxeNPA" name="execute" specification="_66hZQKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68WlSaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68WlSqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68WlS6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>ActionForward forward = new ActionForward();
		forward.setRedirect(false); 
		
		// 글작성 페이지로 이동하기 위해 경로를 설정합니다.
		forward.setPath(&quot;board/notice/write.jsp&quot;);
		return forward;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_66hZQKw7Ee2NaYmjDxeNPA" name="execute" method="_68WlSKw7Ee2NaYmjDxeNPA" raisedException="_64G-cKw7Ee2NaYmjDxeNPA _64EiMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_66hZQaw7Ee2NaYmjDxeNPA" name="request" type="_64Hlgaw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66hZQqw7Ee2NaYmjDxeNPA" name="response" type="_64IzoKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_66hZQ6w7Ee2NaYmjDxeNPA" type="_6nZo8Kw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_6kCy8Kw7Ee2NaYmjDxeNPA" name="db">
            <packagedElement xmi:type="uml:Class" xmi:id="_6pSfUKw7Ee2NaYmjDxeNPA" name="NoticeDAO">
              <ownedAttribute xmi:id="_67uTIKw7Ee2NaYmjDxeNPA" name="ds" visibility="private" type="_65VGcaw7Ee2NaYmjDxeNPA" association="_69GzMaw7Ee2NaYmjDxeNPA"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68iygqw7Ee2NaYmjDxeNPA" name="NoticeDAO" specification="_6pTtcKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68iyg6w7Ee2NaYmjDxeNPA" type="_6pSfUKw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>try {
			Context init = new InitialContext();
			ds = (DataSource) init.lookup(&quot;java:comp/env/jdbc/OracleDB&quot;);
		} catch (Exception ex) {
			System.out.println(&quot;DB 연결 실패 : &quot; + ex);
			return;
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68jZkKw7Ee2NaYmjDxeNPA" name="getListCount" specification="_6pTtdKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68jZkaw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Connection con = null;
		PreparedStatement pstmt = null ;
		ResultSet rs = null;
		int x = 0;
		try {
			con = ds.getConnection();
			pstmt = con.prepareStatement(&quot;select count(*) from Notice&quot;);
			rs = pstmt.executeQuery();
			
			if(rs.next()) {
				x = rs.getInt(1);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
			System.out.println(&quot;getListCount() 에러: &quot; + ex);
		} finally {
			if (rs != null)
				try {
					 rs.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			
			if (pstmt != null)
				try {
					 pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
		}
		return x;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68jZkqw7Ee2NaYmjDxeNPA" name="getNoticeList" specification="_6pUUgaw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68jZk6w7Ee2NaYmjDxeNPA" name="page">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68jZlKw7Ee2NaYmjDxeNPA" name="limit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68jZlaw7Ee2NaYmjDxeNPA" type="_6pZNAKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68jZlqw7Ee2NaYmjDxeNPA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		// page : 페이지
		// limit : 페이지 당 목록의 수
		// board_re_ref desc, board_re_seq asc에 의해 정렬한 것을
		// 조건절에 맞는 rnum의 범위 만큼 가져오는 쿼리문입니다.
		
		String notice_list_sql = &quot;select * &quot;
							+ &quot; from (select rownum rnum, j.* &quot;
							+ &quot; 	  from (select NOTICE.*, nvl(cnt,0) cnt &quot;
							+ &quot; 			from NOTICE left outer join (select COMM_NUM,count(*) cnt&quot;
							+ &quot;											from COMM&quot;
							+ &quot;											group by COMM_NUM)&quot;
							+ &quot;				on NOTICE_NUM=COMM_NUM&quot;
							+ &quot;				order by NOTICE_RE_REF desc,&quot;
							+ &quot;				NOTICE_RE_SEQ asc) j &quot;
							+ &quot;		  where rownum&lt;= ? &quot;
							+ &quot;		  ) &quot;
							+ &quot; where rnum>=? and rnum&lt;=? &quot;;
						
		List&lt;NoticeBean> list = new ArrayList&lt;NoticeBean>();
		// 한 페이지당 10개씩 목록인 경우 1페이지, 2페이지, 3페이지, 4페이지 ...
		int startrow = (page - 1) * limit + 1;	// 읽기 시작할 row 번호(1  11 21 31 ...
		int endrow = startrow + limit - 1;		// 읽을 마지막 row 번호(10 20 30 40 ...
		try {
			con = ds.getConnection();
			pstmt = con.prepareStatement(notice_list_sql);
			pstmt.setInt(1, endrow);
			pstmt.setInt(2, startrow);
			pstmt.setInt(3, endrow);
			
			rs = pstmt.executeQuery();
			
			// DB에서 가져온 데이터를 VO객체에 담습니다.
			while (rs.next()) {
				NoticeBean notice = new NoticeBean();
				notice.setNotice_num(rs.getInt(&quot;notice_num&quot;));
				notice.setUser_id(rs.getString(&quot;user_id&quot;));
				notice.setNotice_subject(rs.getString(&quot;notice_subject&quot;));
				notice.setNotice_content(rs.getString(&quot;notice_content&quot;));
				notice.setNotice_file(rs.getString(&quot;notice_file&quot;));
				notice.setNotice_re_ref(rs.getInt(&quot;notice_re_ref&quot;));
				notice.setNotice_re_lev(rs.getInt(&quot;notice_re_lev&quot;));
				notice.setNotice_re_seq(rs.getInt(&quot;notice_re_seq&quot;));
				notice.setNotice_readcount(rs.getInt(&quot;notice_readcount&quot;));
				notice.setNotice_reg_date(rs.getString(&quot;notice_reg_date&quot;));
				notice.setCnt(rs.getInt(&quot;cnt&quot;));
				list.add(notice); // 값을 담은 객체를 리스트에 저장합니다.
			}
			
		} catch (Exception ex) {
			ex.printStackTrace();
			System.out.println(&quot;getNoticeList() 에러: &quot; + ex) ;
		} finally {
			if (rs != null)
				try {
					 rs.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (pstmt != null)
				try {
					 pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
		}
		return list;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68jZl6w7Ee2NaYmjDxeNPA" name="getListCount" specification="_6pU7kKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68jZmKw7Ee2NaYmjDxeNPA" name="field">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68jZmaw7Ee2NaYmjDxeNPA" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68jZmqw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Connection con = null;
		PreparedStatement pstmt = null ;
		ResultSet rs = null;
		int x = 0;
		try {
			con = ds.getConnection();
			String sql_search_count = &quot;select count(*) from notice &quot;
									+&quot; where &quot; + field + &quot; like ?&quot;; // where user_id '%HTA2%'
			System.out.println(sql_search_count);
			pstmt = con.prepareStatement(sql_search_count);
			pstmt.setString(1, &quot;%&quot;+value+&quot;%&quot;);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				x = rs.getInt(1);
			}
		} catch (Exception ex) {
			ex.printStackTrace();
			System.out.println(&quot;getListSearchCount() 에러: &quot; + ex);
		} finally {
			if (rs != null)
				try {
					 rs.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			
			if (pstmt != null)
				try {
					 pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
		}
		return x;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68kAoKw7Ee2NaYmjDxeNPA" name="getNoticeList" specification="_6pVioaw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68kAoaw7Ee2NaYmjDxeNPA" name="field">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68kAoqw7Ee2NaYmjDxeNPA" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68kAo6w7Ee2NaYmjDxeNPA" name="page">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68kApKw7Ee2NaYmjDxeNPA" name="limit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68kApaw7Ee2NaYmjDxeNPA" type="_6pZNAKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_68kApqw7Ee2NaYmjDxeNPA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>List&lt;NoticeBean> list = new ArrayList&lt;NoticeBean>();
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			con = ds.getConnection();
			
			String sql_search_list =&quot;select * &quot;
						+ &quot; from (select rownum rnum, j.* &quot;
						+ &quot; 	  from (select NOTICE.*, nvl(cnt,0) cnt &quot;
						+ &quot; 			from NOTICE left outer join&quot;
						+ &quot;						(select COMM_NUM, count(*) cnt&quot;
						+ &quot;						from COMM&quot;
						+ &quot;						group by COMM_NUM)&quot;
						+ &quot;					on NOTICE_NUM=COMM_NUM&quot;
						+ &quot;					order by NOTICE_RE_REF desc,&quot;
						+ &quot;				NOTICE_RE_SEQ asc) j &quot;
						+ &quot;				WHERE &quot; + field + &quot; like ? &quot;
						+ &quot;		  AND rownum&lt;= ? &quot;
						+ &quot;		  ) &quot;
						+ &quot; where rnum>=? and rnum&lt;=? &quot;;
			System.out.println(sql_search_list);
			pstmt = con.prepareStatement(sql_search_list);
			pstmt.setString(1, &quot;%&quot;+value+&quot;%&quot;);
			
			// 읽기 시작할 row 번호(1  11 21 31 ...
			int startrow = (page - 1) * limit + 1;
			// 읽을 마지막 row 번호(10 20 30 40 ...
			int endrow = startrow + limit - 1;

			pstmt.setInt(2, endrow);
			pstmt.setInt(3, startrow);
			pstmt.setInt(4, endrow);
			
			rs = pstmt.executeQuery();
			
			// DB에서 가져온 데이터를 VO객체에 담습니다.
			while (rs.next()) {
				NoticeBean notice = new NoticeBean();
				notice.setNotice_num(rs.getInt(&quot;notice_num&quot;));
				notice.setUser_id(rs.getString(&quot;user_id&quot;));
				notice.setNotice_subject(rs.getString(&quot;notice_subject&quot;));
				notice.setNotice_content(rs.getString(&quot;notice_content&quot;));
				notice.setNotice_file(rs.getString(&quot;notice_file&quot;));
				notice.setNotice_re_ref(rs.getInt(&quot;notice_re_ref&quot;));
				notice.setNotice_re_lev(rs.getInt(&quot;notice_re_lev&quot;));
				notice.setNotice_re_seq(rs.getInt(&quot;notice_re_seq&quot;));
				notice.setNotice_readcount(rs.getInt(&quot;notice_readcount&quot;));
				notice.setNotice_reg_date(rs.getString(&quot;notice_reg_date&quot;));
				notice.setCnt(rs.getInt(&quot;cnt&quot;));			
				list.add(notice); // 값을 담은 객체를 리스트에 저장합니다.
			}
		} catch (Exception ex) {
			ex.printStackTrace();
			System.out.println(&quot;getNoticeSearchList() 에러: &quot; + ex) ;
		} finally {
			if (rs != null)
				try {
					 rs.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (pstmt != null)
				try {
					 pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
		}
		return list;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68kAp6w7Ee2NaYmjDxeNPA" name="noticeInsert" specification="_65mzQKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68kAqKw7Ee2NaYmjDxeNPA" name="noticedata" type="_6pZNAKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68kAqaw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Connection con = null;
		PreparedStatement pstmt = null;
		int result=0;
		try	{
			con = ds.getConnection();
			
			String max_sql = &quot;(select nvl(max(notice_num),0)+1 from notice)&quot;;
			
			// 원문글의 NOTICE_RE_REF 필드는 자신의 글번호 입니다.
			String sql = &quot;insert into notice &quot;
						+ &quot;(NOTICE_NUM,		USER_ID,		NOTICE_SUBJECT,&quot;
						+ &quot; NOTICE_CONTENT,	NOTICE_FILE,		NOTICE_RE_REF,&quot;
						+ &quot; NOTICE_RE_LEV,	NOTICE_RE_SEQ,	NOTICE_READCOUNT)&quot;
						+ &quot;values(&quot; + max_sql + &quot;,?,?,&quot;
						+ &quot;		  ?,?,&quot; +	max_sql + &quot;,&quot;
						+ &quot;		  ?,?,?)&quot;;
			
			// 새로운 글을 등록하는 부분입니다.
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, noticedata.getUser_id());
			pstmt.setString(2, noticedata.getNotice_subject());
			pstmt.setString(3, noticedata.getNotice_content());
			pstmt.setString(4, noticedata.getNotice_file());
			
			// 원문의 경우 NOTICE_RE_LEV, NOTICE_RE_SEQ 필드 값은 0 입니다.
			pstmt.setInt(5, 0); // NOTICE_RE_LEV 필드
			pstmt.setInt(6, 0); // NOTICE_RE_SEQ 필드
			pstmt.setInt(7, 0); // NOTICE_READCOUNT 필드
			
			result = pstmt.executeUpdate();
			if (result == 1) {
				System.out.println(&quot;데이터 삽입이 모두 완료되었습니다.&quot;);
				return true;
			}
		} catch (Exception ex) {
			ex.printStackTrace();
			System.out.println(&quot;noticeInsert() 에러: &quot; + ex);
		} finally {
			if (pstmt != null)
				try {
					 pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
		}
		return false;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68kAqqw7Ee2NaYmjDxeNPA" name="setReadCountUpdate" specification="_6pWwwKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68kAq6w7Ee2NaYmjDxeNPA" name="num">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <language>java</language>
                <body>Connection con = null;
		PreparedStatement pstmt = null;
		
		String sql = &quot;update notice &quot;
				   + &quot;set NOTICE_READCOUNT=NOTICE_READCOUNT+1 &quot;
				   + &quot;where NOTICE_NUM = ?&quot;;
		try {
			con = ds.getConnection();
			pstmt = con.prepareStatement(sql);
			pstmt.setInt(1, num);
			pstmt.executeUpdate();
		} catch (Exception ex) {
			ex.printStackTrace();
			System.out.println(&quot;setReadCountUpdate() 에러: &quot; + ex) ;
		} finally {
			if (pstmt != null)
				try {
					 pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
		}
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68kArKw7Ee2NaYmjDxeNPA" name="getDetail" specification="_6pXX0Kw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68kAraw7Ee2NaYmjDxeNPA" name="num">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68kArqw7Ee2NaYmjDxeNPA" type="_6pZNAKw7Ee2NaYmjDxeNPA" direction="return"/>
                <language>java</language>
                <body>NoticeBean notice = null;
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		try {
			con = ds.getConnection();
			pstmt = con.prepareStatement(&quot;select * from notice where NOTICE_NUM = ?&quot;);
			pstmt.setInt(1, num);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				notice = new NoticeBean();
				notice.setNotice_num(rs.getInt(&quot;NOTICE_NUM&quot;));
				notice.setUser_id(rs.getString(&quot;USER_ID&quot;));
				notice.setNotice_subject(rs.getString(&quot;NOTICE_SUBJECT&quot;));
				notice.setNotice_content(rs.getString(&quot;NOTICE_CONTENT&quot;));
				notice.setNotice_file(rs.getString(&quot;NOTICE_FILE&quot;));
				notice.setNotice_re_ref(rs.getInt(&quot;NOTICE_RE_REF&quot;));
				notice.setNotice_re_lev(rs.getInt(&quot;NOTICE_RE_LEV&quot;));
				notice.setNotice_re_seq(rs.getInt(&quot;NOTICE_RE_SEQ&quot;));
				notice.setNotice_readcount(rs.getInt(&quot;NOTICE_READCOUNT&quot;));
				notice.setNotice_reg_date(rs.getString(&quot;NOTICE_REG_DATE&quot;));
			}
		} catch (Exception ex) {
			System.out.println(&quot;getDetail() 에러: &quot; + ex) ;
		} finally {
			if (rs != null)
				try {
					rs.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (pstmt != null)
				try {
					pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
		}
		return notice;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68kAr6w7Ee2NaYmjDxeNPA" name="noticeModify" specification="_65naUKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68kAsKw7Ee2NaYmjDxeNPA" name="modifynotice" type="_6pZNAKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_68kAsaw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Connection con = null;
		PreparedStatement pstmt = null;
		String sql = &quot;update notice &quot;
						 + &quot;set NOTICE_SUBJECT=?, NOTICE_CONTENT=?, NOTICE_FILE=? &quot;
						 + &quot;where NOTICE_NUM=? &quot;;
		try {
			con = ds.getConnection();
			pstmt = con.prepareStatement(sql);
			pstmt.setString(1, modifynotice.getNotice_subject());
			pstmt.setString(2, modifynotice.getNotice_content());
			pstmt.setString(3, modifynotice.getNotice_file());
			pstmt.setInt(4, modifynotice.getNotice_num());
			int result = pstmt.executeUpdate();
			if (result == 1) {
				System.out.println(&quot;성공 업데이트&quot;);
				return true;
			}
		} catch (Exception ex) {
			System.out.println(&quot;noticeModify() 에러: &quot; + ex);
		} finally {
			if (pstmt != null)
				try {
					pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
		}
		return false;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68knsKw7Ee2NaYmjDxeNPA" name="noticeDelete" specification="_6pXX0qw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68knsaw7Ee2NaYmjDxeNPA" name="num">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_68knsqw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>Connection con = null;
		PreparedStatement pstmt = null, pstmt2 = null;
		ResultSet rs = null;
		String select_sql = &quot;SELECT NOTICE_RE_REF, NOTICE_RE_LEV, NOTICE_RE_SEQ &quot;
						 + &quot; FROM NOTICE&quot;
						 + &quot; WHERE NOTICE_NUM=?&quot;;
		
		String notice_delete_sql = &quot;DELETE FROM NOTICE&quot;
				+ &quot;			WHERE	NOTICE_RE_REF = ?&quot;
				+ &quot;			AND		NOTICE_RE_LEV >=?&quot;
				+ &quot;			AND		NOTICE_RE_SEQ >=?&quot;
				+ &quot;			AND		NOTICE_RE_SEQ &lt;=(&quot;
				+ &quot;									NVL((SELECT MIN(NOTICE_RE_SEQ)-1&quot;
				+ &quot;									FROM	NOTICE	&quot;
				+ &quot;									WHERE	NOTICE_RE_REF=?&quot;
				+ &quot;									AND		NOTICE_RE_LEV=?&quot;
				+ &quot;									AND		NOTICE_RE_SEQ>?) , &quot;
				+ &quot;									(SELECT MAX(NOTICE_RE_SEQ) &quot;
				+ &quot;									 FROM	NOTICE &quot;
				+ &quot;									 WHERE	NOTICE_RE_REF=? ))&quot;
				+ &quot;									)&quot;;
		boolean result_check = false;
		try {
			con = ds.getConnection();			
			pstmt = con.prepareStatement(select_sql);
			pstmt.setInt(1, num);
			rs = pstmt.executeQuery();
			if (rs.next()) {
				pstmt2 = con.prepareStatement(notice_delete_sql);
				pstmt2.setInt(1, rs.getInt(&quot;NOTICE_RE_REF&quot;));
				pstmt2.setInt(2, rs.getInt(&quot;NOTICE_RE_LEV&quot;));
				pstmt2.setInt(3, rs.getInt(&quot;NOTICE_RE_SEQ&quot;));
				pstmt2.setInt(4, rs.getInt(&quot;NOTICE_RE_REF&quot;));
				pstmt2.setInt(5, rs.getInt(&quot;NOTICE_RE_LEV&quot;));
				pstmt2.setInt(6, rs.getInt(&quot;NOTICE_RE_SEQ&quot;));
				pstmt2.setInt(7, rs.getInt(&quot;NOTICE_RE_REF&quot;));
				
				int count=pstmt2.executeUpdate();
				
				if(count>=1)
					result_check = true;// 삭제가 안된 경우에는 false를 반환합니다.
			}
		} catch (SQLException ex) {
			System.out.println(&quot;noticeDelete() 에러: &quot; + ex);
			ex.printStackTrace();
		} finally {
			if (rs != null)
				try {
					rs.close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
			if (pstmt != null)
				try {
					 pstmt.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (pstmt2 != null)
				try {
					 pstmt2.close();
				} catch (SQLException ex) {
					ex.printStackTrace();
				}
			if (con != null)
				try {
					con.close();
				} catch (Exception ex) {
					ex.printStackTrace();
				}
		}
		return result_check;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6pTtcKw7Ee2NaYmjDxeNPA" name="NoticeDAO" method="_68iygqw7Ee2NaYmjDxeNPA">
                <eAnnotations xmi:id="_6pTtcaw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_6pTtcqw7Ee2NaYmjDxeNPA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_6pTtc6w7Ee2NaYmjDxeNPA" type="_6pSfUKw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6pTtdKw7Ee2NaYmjDxeNPA" name="getListCount" method="_68jZkKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pUUgKw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6pUUgaw7Ee2NaYmjDxeNPA" name="getNoticeList" method="_68jZkqw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pUUgqw7Ee2NaYmjDxeNPA" name="page">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pUUg6w7Ee2NaYmjDxeNPA" name="limit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pUUhKw7Ee2NaYmjDxeNPA" type="_6pZNAKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pUUhaw7Ee2NaYmjDxeNPA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6pU7kKw7Ee2NaYmjDxeNPA" name="getListCount" method="_68jZl6w7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pU7kaw7Ee2NaYmjDxeNPA" name="field">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pU7kqw7Ee2NaYmjDxeNPA" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pVioKw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6pVioaw7Ee2NaYmjDxeNPA" name="getNoticeList" method="_68kAoKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pWJsKw7Ee2NaYmjDxeNPA" name="field">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pWJsaw7Ee2NaYmjDxeNPA" name="value">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pWJsqw7Ee2NaYmjDxeNPA" name="page">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pWJs6w7Ee2NaYmjDxeNPA" name="limit">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pWJtKw7Ee2NaYmjDxeNPA" type="_6pZNAKw7Ee2NaYmjDxeNPA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_6pWJtaw7Ee2NaYmjDxeNPA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6pWwwKw7Ee2NaYmjDxeNPA" name="setReadCountUpdate" method="_68kAqqw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pWwwaw7Ee2NaYmjDxeNPA" name="num">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_6pXX0Kw7Ee2NaYmjDxeNPA" name="getDetail" method="_68kArKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pXX0aw7Ee2NaYmjDxeNPA" name="num">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_65mzQ6w7Ee2NaYmjDxeNPA" type="_6pZNAKw7Ee2NaYmjDxeNPA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_6pXX0qw7Ee2NaYmjDxeNPA" name="noticeDelete" method="_68knsKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pX-4Kw7Ee2NaYmjDxeNPA" name="num">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_6pX-4aw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_65mzQKw7Ee2NaYmjDxeNPA" name="noticeInsert" method="_68kAp6w7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_65mzQaw7Ee2NaYmjDxeNPA" name="noticedata" type="_6pZNAKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_65mzQqw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_65naUKw7Ee2NaYmjDxeNPA" name="noticeModify" method="_68kAr6w7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_65naUaw7Ee2NaYmjDxeNPA" name="modifynotice" type="_6pZNAKw7Ee2NaYmjDxeNPA"/>
                <ownedParameter xmi:id="_65naUqw7Ee2NaYmjDxeNPA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_6pZNAKw7Ee2NaYmjDxeNPA" name="NoticeBean">
              <ownedAttribute xmi:id="_67u6MKw7Ee2NaYmjDxeNPA" name="notice_num">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67vhQKw7Ee2NaYmjDxeNPA" name="user_id">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67vhQaw7Ee2NaYmjDxeNPA" name="notice_subject">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67vhQqw7Ee2NaYmjDxeNPA" name="notice_content">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67wvYKw7Ee2NaYmjDxeNPA" name="notice_file">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67wvYaw7Ee2NaYmjDxeNPA" name="notice_re_ref">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67wvYqw7Ee2NaYmjDxeNPA" name="notice_re_lev">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67wvY6w7Ee2NaYmjDxeNPA" name="notice_re_seq">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67xWcKw7Ee2NaYmjDxeNPA" name="notice_readcount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67xWcaw7Ee2NaYmjDxeNPA" name="notice_reg_date" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67xWcqw7Ee2NaYmjDxeNPA" name="cnt">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67xWc6w7Ee2NaYmjDxeNPA" name="search_field">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_67xWdKw7Ee2NaYmjDxeNPA" name="search_word">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_68lOwKw7Ee2NaYmjDxeNPA" name="setNotice_reg_date" specification="_6pbCMKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_68lOwaw7Ee2NaYmjDxeNPA" name="notice_reg_date">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>this.notice_reg_date = notice_reg_date.substring(0,10);
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_6pbCMKw7Ee2NaYmjDxeNPA" name="setNotice_reg_date" method="_68lOwKw7Ee2NaYmjDxeNPA">
                <ownedParameter xmi:id="_6pbCMaw7Ee2NaYmjDxeNPA" name="notice_reg_date">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_69GzMaw7Ee2NaYmjDxeNPA" name="" memberEnd="_69GzMqw7Ee2NaYmjDxeNPA _67uTIKw7Ee2NaYmjDxeNPA">
              <ownedEnd xmi:id="_69GzMqw7Ee2NaYmjDxeNPA" name="" type="_6pSfUKw7Ee2NaYmjDxeNPA" association="_69GzMaw7Ee2NaYmjDxeNPA"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6jYroKw7Ee2NaYmjDxeNPA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_6jZSsKw7Ee2NaYmjDxeNPA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_64EiMKw7Ee2NaYmjDxeNPA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_64agcKw7Ee2NaYmjDxeNPA" name="PrintWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_64uCcKw7Ee2NaYmjDxeNPA" name="BufferedInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_64vQkKw7Ee2NaYmjDxeNPA" name="BufferedOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_64vQkqw7Ee2NaYmjDxeNPA" name="FileInputStream"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6jrmkKw7Ee2NaYmjDxeNPA" name="util">
        <packagedElement xmi:type="uml:Interface" xmi:id="_64YrQKw7Ee2NaYmjDxeNPA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_640JEKw7Ee2NaYmjDxeNPA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_648E4Kw7Ee2NaYmjDxeNPA" name="Properties"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_65I5MKw7Ee2NaYmjDxeNPA" name="Date"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_65wkQ6w7Ee2NaYmjDxeNPA" name="Calendar"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6krFEKw7Ee2NaYmjDxeNPA" name="sql">
        <packagedElement xmi:type="uml:Interface" xmi:id="_65SDIKw7Ee2NaYmjDxeNPA" name="Connection"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_65TRQaw7Ee2NaYmjDxeNPA" name="PreparedStatement"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_65T4Uaw7Ee2NaYmjDxeNPA" name="ResultSet"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_65T4U6w7Ee2NaYmjDxeNPA" name="SQLException"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_65gFkKw7Ee2NaYmjDxeNPA" name="Date"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_65v9MKw7Ee2NaYmjDxeNPA" name="Statement"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6lXooKw7Ee2NaYmjDxeNPA" name="text">
        <packagedElement xmi:type="uml:Class" xmi:id="_65wkQaw7Ee2NaYmjDxeNPA" name="SimpleDateFormat"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6jZSsaw7Ee2NaYmjDxeNPA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_6jZSsqw7Ee2NaYmjDxeNPA" name="servlet">
        <packagedElement xmi:type="uml:Package" xmi:id="_6jZSs6w7Ee2NaYmjDxeNPA" name="http">
          <packagedElement xmi:type="uml:Class" xmi:id="_6mwvwKw7Ee2NaYmjDxeNPA" name="HttpServlet"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_64Hlgaw7Ee2NaYmjDxeNPA" name="HttpServletRequest"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_64IzoKw7Ee2NaYmjDxeNPA" name="HttpServletResponse"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_64cVoaw7Ee2NaYmjDxeNPA" name="HttpSession"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_65EnwKw7Ee2NaYmjDxeNPA" name="Cookie"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_6jicoKw7Ee2NaYmjDxeNPA" name="annotation">
          <packagedElement xmi:type="uml:Interface" xmi:id="_64LP4aw7Ee2NaYmjDxeNPA" name="WebServlet"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_64G-cKw7Ee2NaYmjDxeNPA" name="ServletException"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_64Ko0Kw7Ee2NaYmjDxeNPA" name="RequestDispatcher"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_64bukKw7Ee2NaYmjDxeNPA" name="ServletContext"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6kT4sKw7Ee2NaYmjDxeNPA" name="mail">
        <packagedElement xmi:type="uml:Package" xmi:id="_6kUfwKw7Ee2NaYmjDxeNPA" name="internet">
          <packagedElement xmi:type="uml:Class" xmi:id="_64-hIqw7Ee2NaYmjDxeNPA" name="InternetAddress"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_64_IMaw7Ee2NaYmjDxeNPA" name="MimeMessage"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_65KHUaw7Ee2NaYmjDxeNPA" name="AddressException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_648E4qw7Ee2NaYmjDxeNPA" name="Authenticator"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_649TAaw7Ee2NaYmjDxeNPA" name="Message"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_649TA6w7Ee2NaYmjDxeNPA" name="PasswordAuthentication"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_6496Eaw7Ee2NaYmjDxeNPA" name="Session"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_64-hIKw7Ee2NaYmjDxeNPA" name="Transport"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_65JgQaw7Ee2NaYmjDxeNPA" name="Address"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_65JgQ6w7Ee2NaYmjDxeNPA" name="MessagingException"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6krFEaw7Ee2NaYmjDxeNPA" name="naming">
        <packagedElement xmi:type="uml:Interface" xmi:id="_65UfYaw7Ee2NaYmjDxeNPA" name="Context"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_65UfY6w7Ee2NaYmjDxeNPA" name="InitialContext"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6krsIKw7Ee2NaYmjDxeNPA" name="sql">
        <packagedElement xmi:type="uml:Package" xmi:id="_6lEtsKw7Ee2NaYmjDxeNPA" name="rowset">
          <packagedElement xmi:type="uml:Package" xmi:id="_6lFUwKw7Ee2NaYmjDxeNPA" name="serial">
            <packagedElement xmi:type="uml:Class" xmi:id="_65k-EKw7Ee2NaYmjDxeNPA" name="SerialException"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_65VGcaw7Ee2NaYmjDxeNPA" name="DataSource"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6lYPsKw7Ee2NaYmjDxeNPA" name="swing">
        <packagedElement xmi:type="uml:Package" xmi:id="_6lYPsaw7Ee2NaYmjDxeNPA" name="plaf">
          <packagedElement xmi:type="uml:Class" xmi:id="_65xLUaw7Ee2NaYmjDxeNPA" name="ProgressBarUI"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_6jwfEKw7Ee2NaYmjDxeNPA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_6jwfEaw7Ee2NaYmjDxeNPA" name="oreilly">
        <packagedElement xmi:type="uml:Package" xmi:id="_6jwfEqw7Ee2NaYmjDxeNPA" name="servlet">
          <packagedElement xmi:type="uml:Package" xmi:id="_6jwfE6w7Ee2NaYmjDxeNPA" name="multipart">
            <packagedElement xmi:type="uml:Class" xmi:id="_64eK0aw7Ee2NaYmjDxeNPA" name="DefaultFileRenamePolicy"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_64djwaw7Ee2NaYmjDxeNPA" name="MultipartRequest"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_6kKuwKw7Ee2NaYmjDxeNPA" name="google">
        <packagedElement xmi:type="uml:Package" xmi:id="_6kLV0Kw7Ee2NaYmjDxeNPA" name="gson">
          <packagedElement xmi:type="uml:Class" xmi:id="_640wIKw7Ee2NaYmjDxeNPA" name="Gson"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_640wIqw7Ee2NaYmjDxeNPA" name="JsonElement"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_641XMaw7Ee2NaYmjDxeNPA" name="JsonObject"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_6Mrb0Kw7Ee2NaYmjDxeNPA">
      <eAnnotations xmi:id="_6MwUUKw7Ee2NaYmjDxeNPA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_6M1M0Kw7Ee2NaYmjDxeNPA" base_Package="_4WWzYKw7Ee2NaYmjDxeNPA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6mr3QKw7Ee2NaYmjDxeNPA" base_Element="_6mqpIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6mvhoKw7Ee2NaYmjDxeNPA" base_Element="_6mu6kKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_6mx94Kw7Ee2NaYmjDxeNPA" base_Element="_6mwvwKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_6mzMAKw7Ee2NaYmjDxeNPA" base_Element="_6mu6kKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_6mzzEKw7Ee2NaYmjDxeNPA" name="WebServlet">
      <annotationParameters xmi:id="_6mzzEaw7Ee2NaYmjDxeNPA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_68w08Kw7Ee2NaYmjDxeNPA" value="&quot;*.com&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6na3Eqw7Ee2NaYmjDxeNPA" base_Element="_6naQAKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6nlPIKw7Ee2NaYmjDxeNPA" base_Element="_6nkoEKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_6nnrYKw7Ee2NaYmjDxeNPA" base_Element="_6nkoEKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_6nnrYaw7Ee2NaYmjDxeNPA" name="WebServlet">
      <annotationParameters xmi:id="_6nnrYqw7Ee2NaYmjDxeNPA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_68yDEKw7Ee2NaYmjDxeNPA" value="&quot;*.bon&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6n278qw7Ee2NaYmjDxeNPA" base_Element="_6n2U4Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6n6mU6w7Ee2NaYmjDxeNPA" base_Element="_6n6mUKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6n-3waw7Ee2NaYmjDxeNPA" base_Element="_6n-3wKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_6oAF4Kw7Ee2NaYmjDxeNPA" base_Element="_6n-3wKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_6oAF4aw7Ee2NaYmjDxeNPA" name="WebServlet">
      <annotationParameters xmi:id="_6oAF4qw7Ee2NaYmjDxeNPA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_68zRMKw7Ee2NaYmjDxeNPA" value="&quot;*.net&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6odY4Kw7Ee2NaYmjDxeNPA" base_Element="_6ocx0Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6oqNMKw7Ee2NaYmjDxeNPA" base_Element="_6opmIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_6orbUKw7Ee2NaYmjDxeNPA" base_Element="_6opmIKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_6orbUaw7Ee2NaYmjDxeNPA" name="WebServlet">
      <annotationParameters xmi:id="_6orbUqw7Ee2NaYmjDxeNPA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_IGCUIKxDEe2NaYmjDxeNPA" value="&quot;*.my&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_6pmoYKw7Ee2NaYmjDxeNPA" base_Element="_6pmBUKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_6pn2gKw7Ee2NaYmjDxeNPA" base_Element="_6pmBUKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_6pn2gaw7Ee2NaYmjDxeNPA" name="WebServlet">
      <annotationParameters xmi:id="_6pn2gqw7Ee2NaYmjDxeNPA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_681tcKw7Ee2NaYmjDxeNPA" value="&quot;*.po&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_6p3uIKw7Ee2NaYmjDxeNPA" genericsValue="Project_User" base_Element="_6p3HEKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64FwUKw7Ee2NaYmjDxeNPA" base_Element="_64EiMKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64HlgKw7Ee2NaYmjDxeNPA" base_Element="_64G-cKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64IMkKw7Ee2NaYmjDxeNPA" base_Element="_64Hlgaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64Izoaw7Ee2NaYmjDxeNPA" base_Element="_64IzoKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64LP4Kw7Ee2NaYmjDxeNPA" base_Element="_64Ko0Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64MeAKw7Ee2NaYmjDxeNPA" base_Element="_64LP4aw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64ZSUKw7Ee2NaYmjDxeNPA" base_Element="_64YrQKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64bHgKw7Ee2NaYmjDxeNPA" base_Element="_64agcKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64cVoKw7Ee2NaYmjDxeNPA" base_Element="_64bukKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64djwKw7Ee2NaYmjDxeNPA" base_Element="_64cVoaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64eK0Kw7Ee2NaYmjDxeNPA" base_Element="_64djwaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64ex4Kw7Ee2NaYmjDxeNPA" base_Element="_64eK0aw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64upgKw7Ee2NaYmjDxeNPA" base_Element="_64uCcKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64vQkaw7Ee2NaYmjDxeNPA" base_Element="_64vQkKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64wesKw7Ee2NaYmjDxeNPA" base_Element="_64vQkqw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_640JEaw7Ee2NaYmjDxeNPA" base_Element="_640JEKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_640wIaw7Ee2NaYmjDxeNPA" base_Element="_640wIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_641XMKw7Ee2NaYmjDxeNPA" base_Element="_640wIqw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_641XMqw7Ee2NaYmjDxeNPA" base_Element="_641XMaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_648E4aw7Ee2NaYmjDxeNPA" base_Element="_648E4Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_649TAKw7Ee2NaYmjDxeNPA" base_Element="_648E4qw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_649TAqw7Ee2NaYmjDxeNPA" base_Element="_649TAaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_6496EKw7Ee2NaYmjDxeNPA" base_Element="_649TA6w7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_6496Eqw7Ee2NaYmjDxeNPA" base_Element="_6496Eaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64-hIaw7Ee2NaYmjDxeNPA" base_Element="_64-hIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64_IMKw7Ee2NaYmjDxeNPA" base_Element="_64-hIqw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_64_IMqw7Ee2NaYmjDxeNPA" base_Element="_64_IMaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65FO0Kw7Ee2NaYmjDxeNPA" base_Element="_65EnwKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65JgQKw7Ee2NaYmjDxeNPA" base_Element="_65I5MKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65JgQqw7Ee2NaYmjDxeNPA" base_Element="_65JgQaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65KHUKw7Ee2NaYmjDxeNPA" base_Element="_65JgQ6w7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65KuYKw7Ee2NaYmjDxeNPA" base_Element="_65KHUaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65TRQKw7Ee2NaYmjDxeNPA" base_Element="_65SDIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65T4UKw7Ee2NaYmjDxeNPA" base_Element="_65TRQaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65T4Uqw7Ee2NaYmjDxeNPA" base_Element="_65T4Uaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65UfYKw7Ee2NaYmjDxeNPA" base_Element="_65T4U6w7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65UfYqw7Ee2NaYmjDxeNPA" base_Element="_65UfYaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65VGcKw7Ee2NaYmjDxeNPA" base_Element="_65UfY6w7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65VtgKw7Ee2NaYmjDxeNPA" base_Element="_65VGcaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65gsoKw7Ee2NaYmjDxeNPA" base_Element="_65gFkKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65k-Eaw7Ee2NaYmjDxeNPA" base_Element="_65k-EKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65wkQKw7Ee2NaYmjDxeNPA" base_Element="_65v9MKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65wkQqw7Ee2NaYmjDxeNPA" base_Element="_65wkQaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65xLUKw7Ee2NaYmjDxeNPA" base_Element="_65wkQ6w7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_65xyYKw7Ee2NaYmjDxeNPA" base_Element="_65xLUaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_66Gig6w7Ee2NaYmjDxeNPA" base_Element="_66GigKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_66HJk6w7Ee2NaYmjDxeNPA" base_Element="_66HJkKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_66Hwo6w7Ee2NaYmjDxeNPA" base_Element="_66HwoKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66IXtKw7Ee2NaYmjDxeNPA" base_Element="_66IXsKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66Jl0Kw7Ee2NaYmjDxeNPA" base_Element="_66IXsKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66Jl0aw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66KM4qw7Ee2NaYmjDxeNPA" base_Element="_66Jl0qw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66KM46w7Ee2NaYmjDxeNPA" base_Element="_66Jl0qw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66KM5Kw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66LbAaw7Ee2NaYmjDxeNPA" base_Element="_66Kz8Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66MCEKw7Ee2NaYmjDxeNPA" base_Element="_66Kz8Kw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66MCEaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66NQM6w7Ee2NaYmjDxeNPA" base_Element="_66MCEqw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66N3QKw7Ee2NaYmjDxeNPA" base_Element="_66MCEqw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66N3Qaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66OeVKw7Ee2NaYmjDxeNPA" base_Element="_66OeUKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66PFYKw7Ee2NaYmjDxeNPA" base_Element="_66OeUKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66PFYaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66PsdKw7Ee2NaYmjDxeNPA" base_Element="_66PscKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66QTgKw7Ee2NaYmjDxeNPA" base_Element="_66PscKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66QTgaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66Q6lKw7Ee2NaYmjDxeNPA" base_Element="_66Q6kKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66RhoKw7Ee2NaYmjDxeNPA" base_Element="_66Q6kKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66Rhoaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66SItKw7Ee2NaYmjDxeNPA" base_Element="_66SIsKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66TW0Kw7Ee2NaYmjDxeNPA" base_Element="_66SIsKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66TW0aw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66T95Kw7Ee2NaYmjDxeNPA" base_Element="_66T94Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66Uk8Kw7Ee2NaYmjDxeNPA" base_Element="_66T94Kw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66Uk8aw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66VzEKw7Ee2NaYmjDxeNPA" base_Element="_66VMAKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66VzEaw7Ee2NaYmjDxeNPA" base_Element="_66VMAKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66VzEqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66YPUKw7Ee2NaYmjDxeNPA" base_Element="_66XBMKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66YPUaw7Ee2NaYmjDxeNPA" base_Element="_66XBMKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66YPUqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66ZdcKw7Ee2NaYmjDxeNPA" base_Element="_66Y2YKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66Zdcaw7Ee2NaYmjDxeNPA" base_Element="_66Y2YKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66Zdcqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66arkqw7Ee2NaYmjDxeNPA" base_Element="_66aEgaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66ark6w7Ee2NaYmjDxeNPA" base_Element="_66aEgaw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66arlKw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_66bSo6w7Ee2NaYmjDxeNPA" base_Element="_66bSoKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_66b5s6w7Ee2NaYmjDxeNPA" base_Element="_66b5sKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_66cgw6w7Ee2NaYmjDxeNPA" base_Element="_66cgwKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66eV8Kw7Ee2NaYmjDxeNPA" base_Element="_66du4Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66eV8aw7Ee2NaYmjDxeNPA" base_Element="_66du4Kw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66eV8qw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66fkEKw7Ee2NaYmjDxeNPA" base_Element="_66e9AKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66fkEaw7Ee2NaYmjDxeNPA" base_Element="_66e9AKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66fkEqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66gLJKw7Ee2NaYmjDxeNPA" base_Element="_66gLIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66gyMKw7Ee2NaYmjDxeNPA" base_Element="_66gLIKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66gyMaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66hZRKw7Ee2NaYmjDxeNPA" base_Element="_66hZQKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66iAUKw7Ee2NaYmjDxeNPA" base_Element="_66hZQKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66iAUaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66inZKw7Ee2NaYmjDxeNPA" base_Element="_66inYKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66jOcKw7Ee2NaYmjDxeNPA" base_Element="_66inYKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66jOcaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66lDoaw7Ee2NaYmjDxeNPA" base_Element="_66kckKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66lDoqw7Ee2NaYmjDxeNPA" base_Element="_66kckKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66lDo6w7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_66mRw6w7Ee2NaYmjDxeNPA" base_Element="_66mRwKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_66m406w7Ee2NaYmjDxeNPA" base_Element="_66m40Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_66nf4Kw7Ee2NaYmjDxeNPA" base_Element="_66m41Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66ouBKw7Ee2NaYmjDxeNPA" base_Element="_66ouAKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66pVEKw7Ee2NaYmjDxeNPA" base_Element="_66ouAKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66pVEaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66p8JKw7Ee2NaYmjDxeNPA" base_Element="_66p8IKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66rKQKw7Ee2NaYmjDxeNPA" base_Element="_66p8IKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66rKQaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66sYYqw7Ee2NaYmjDxeNPA" base_Element="_66rxVKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66s_cKw7Ee2NaYmjDxeNPA" base_Element="_66rxVKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66s_caw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66vbsaw7Ee2NaYmjDxeNPA" base_Element="_66u0oKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66vbsqw7Ee2NaYmjDxeNPA" base_Element="_66u0oKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66vbs6w7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66wp0Kw7Ee2NaYmjDxeNPA" base_Element="_66wCwKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66wp0aw7Ee2NaYmjDxeNPA" base_Element="_66wCwKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66wp0qw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_66x39Kw7Ee2NaYmjDxeNPA" base_Element="_66x38Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_66yfAKw7Ee2NaYmjDxeNPA" base_Element="_66x38Kw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_66yfAaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_660UMKw7Ee2NaYmjDxeNPA" base_Element="_66zGEKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_660UMaw7Ee2NaYmjDxeNPA" base_Element="_66zGEKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_660UMqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_661iUKw7Ee2NaYmjDxeNPA" base_Element="_6607QKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_661iUaw7Ee2NaYmjDxeNPA" base_Element="_6607QKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_661iUqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_662wcKw7Ee2NaYmjDxeNPA" base_Element="_662JYKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_662wcaw7Ee2NaYmjDxeNPA" base_Element="_662JYKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_662wcqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_664lo6w7Ee2NaYmjDxeNPA" base_Element="_664loKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_665Ms6w7Ee2NaYmjDxeNPA" base_Element="_665MsKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_665zw6w7Ee2NaYmjDxeNPA" base_Element="_665zwKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_666a1Kw7Ee2NaYmjDxeNPA" base_Element="_666a0Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_667B4Kw7Ee2NaYmjDxeNPA" base_Element="_666a0Kw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_667B4aw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_667o9Kw7Ee2NaYmjDxeNPA" base_Element="_667o8Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_668QAKw7Ee2NaYmjDxeNPA" base_Element="_667o8Kw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_668QAaw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_67EL06w7Ee2NaYmjDxeNPA" base_Element="_67EL0Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_67FZ8Kw7Ee2NaYmjDxeNPA" base_Element="_67Ey4Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_67GBAaw7Ee2NaYmjDxeNPA" base_Element="_67FZ8aw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_67HPIKw7Ee2NaYmjDxeNPA" base_Element="_67GoEKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_67HPIaw7Ee2NaYmjDxeNPA" base_Element="_67GoEKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_67HPIqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_67JEUKw7Ee2NaYmjDxeNPA" base_Element="_67IdQKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Annotations xmi:id="_67JEUaw7Ee2NaYmjDxeNPA" base_Element="_67IdQKw7Ee2NaYmjDxeNPA">
    <annotations xmi:id="_67JEUqw7Ee2NaYmjDxeNPA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_67Xt0aw7Ee2NaYmjDxeNPA" base_Element="_67XGwKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_67aKEqw7Ee2NaYmjDxeNPA" base_Element="_67aKEKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_67b_RKw7Ee2NaYmjDxeNPA" base_Element="_67b_Qqw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_67fpoaw7Ee2NaYmjDxeNPA" base_Element="_67fpoKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_67gQsqw7Ee2NaYmjDxeNPA" base_Element="_67gQsKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_67lwQKw7Ee2NaYmjDxeNPA" base_Element="_67lJMKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Generics xmi:id="_67ozkKw7Ee2NaYmjDxeNPA" genericsValue="Project_User" base_Element="_67oMg6w7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_67tsEKw7Ee2NaYmjDxeNPA" base_Element="_67tFAKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_67uTIaw7Ee2NaYmjDxeNPA" base_Element="_67uTIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_67ykkKw7Ee2NaYmjDxeNPA" base_Element="_67x9gKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:StyledElement xmi:id="_67zysaw7Ee2NaYmjDxeNPA" base_Element="_67zLoKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Generics xmi:id="_672O86w7Ee2NaYmjDxeNPA" genericsValue="Project_User" base_Element="_672O8qw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Generics xmi:id="_6722Aqw7Ee2NaYmjDxeNPA" genericsValue="Project_User" base_Element="_6722Aaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_674rMKw7Ee2NaYmjDxeNPA" base_Element="_674EIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69E-AKw7Ee2NaYmjDxeNPA" base_Element="_69EW8Kw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69FlEqw7Ee2NaYmjDxeNPA" base_Element="_69FlEKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69GMIqw7Ee2NaYmjDxeNPA" base_Element="_69GMIKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69GzMKw7Ee2NaYmjDxeNPA" base_Element="_69GMI6w7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69GzM6w7Ee2NaYmjDxeNPA" base_Element="_69GzMaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69HaQKw7Ee2NaYmjDxeNPA" base_Element="_69GzNKw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69IoYKw7Ee2NaYmjDxeNPA" base_Element="_69HaQaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69JPcKw7Ee2NaYmjDxeNPA" base_Element="_69IoYaw7Ee2NaYmjDxeNPA"/>
  <UMLLabProfile:Reference xmi:id="_69JPc6w7Ee2NaYmjDxeNPA" base_Element="_69JPcaw7Ee2NaYmjDxeNPA"/>
</xmi:XMI>
